Type.registerNamespace('ActivityFeeds.UI');

ActivityFeeds.UI.ActivityFeedsWallEmptyTemplateMode = function() {}
ActivityFeeds.UI.ActivityFeedsWallEmptyTemplateMode.prototype = {
    firstRunExperience: 0, 
    emptyFilter: 1
}
ActivityFeeds.UI.ActivityFeedsWallEmptyTemplateMode.registerEnum('ActivityFeeds.UI.ActivityFeedsWallEmptyTemplateMode', false);


ActivityFeeds.UI.YammerPostMethod = function() {}
ActivityFeeds.UI.YammerPostMethod.prototype = {
    public: 0, 
    private: 1
}
ActivityFeeds.UI.YammerPostMethod.registerEnum('ActivityFeeds.UI.YammerPostMethod', false);


ActivityFeeds.UI.ActionHubPostMethod = function() {}
ActivityFeeds.UI.ActionHubPostMethod.prototype = {
    public: 0, 
    private: 1
}
ActivityFeeds.UI.ActionHubPostMethod.registerEnum('ActivityFeeds.UI.ActionHubPostMethod', false);


ActivityFeeds.UI.ActivityFeedsControl = function ActivityFeeds_UI_ActivityFeedsControl(element) {
    this.$Y_3 = -1;
    this.$15_3 = new Sales.Common.Framework.Loaders.ConcurrentContentLoader();
    ActivityFeeds.UI.ActivityFeedsControl.initializeBase(this, [ element ]);
    var $v_0 = Xrm.Page.context.getUserLcid();
    this.$v_3 = Mscrm.CrmUri.create(String.format('{0}msdyn_/WallContent.{1}.htm?ver={2}', '$webresource:', $v_0, window.top.VERSION_STAMP)).toString();
    this.$m_3 = Mscrm.CrmUri.create(String.format('{0}msdyn_/FirstRunContent.{1}.htm?ver={2}', '$webresource:', $v_0, window.top.VERSION_STAMP)).toString();
}
ActivityFeeds.UI.ActivityFeedsControl.isRefreshForm = function ActivityFeeds_UI_ActivityFeedsControl$isRefreshForm() {
    return '1' === window._IsRefreshForm;
}
ActivityFeeds.UI.ActivityFeedsControl.prototype = {
    $1X_3: null,
    $v_3: null,
    $m_3: null,
    $e_3: null,
    $4_3: null,
    $B_3: null,
    $9_3: null,
    $z_3: null,
    $1M_3: false,
    $12_3: false,
    $F_3: false,
    $V_3: false,
    $11_3: 0,
    $g_3: false,
    $1U_3: false,
    $1K_3: '',
    $o_3: false,
    
    get_$1t_3: function ActivityFeeds_UI_ActivityFeedsControl$get_$1t_3() {
        return !IsNull(this.get_element()) && !_String.isNullOrWhiteSpace(this.get_element().innerHTML) && !this.$V_3;
    },
    
    get_isTurboForm: function ActivityFeeds_UI_ActivityFeedsControl$get_isTurboForm() {
        return this.$o_3;
    },
    
    set_isTurboForm: function ActivityFeeds_UI_ActivityFeedsControl$set_isTurboForm(value) {
        this.$o_3 = value;
        return value;
    },
    
    $17_3: null,
    
    get_preloadRequest: function ActivityFeeds_UI_ActivityFeedsControl$get_preloadRequest() {
        return this.$17_3;
    },
    
    set_preloadRequest: function ActivityFeeds_UI_ActivityFeedsControl$set_preloadRequest(value) {
        this.$17_3 = value;
        return value;
    },
    
    get_masterComponentId: function ActivityFeeds_UI_ActivityFeedsControl$get_masterComponentId() {
        return this.$1X_3;
    },
    
    set_masterComponentId: function ActivityFeeds_UI_ActivityFeedsControl$set_masterComponentId(value) {
        this.$1X_3 = value;
        return value;
    },
    
    get_wallContentResourceLocalizedUri: function ActivityFeeds_UI_ActivityFeedsControl$get_wallContentResourceLocalizedUri() {
        return this.$v_3;
    },
    
    set_wallContentResourceLocalizedUri: function ActivityFeeds_UI_ActivityFeedsControl$set_wallContentResourceLocalizedUri(value) {
        this.$v_3 = value;
        return value;
    },
    
    get_entityId: function ActivityFeeds_UI_ActivityFeedsControl$get_entityId() {
        return this.$B_3;
    },
    
    set_entityId: function ActivityFeeds_UI_ActivityFeedsControl$set_entityId(value) {
        this.$B_3 = value;
        return value;
    },
    
    get_entityType: function ActivityFeeds_UI_ActivityFeedsControl$get_entityType() {
        return this.$9_3;
    },
    
    set_entityType: function ActivityFeeds_UI_ActivityFeedsControl$set_entityType(value) {
        this.$9_3 = value;
        return value;
    },
    
    get_loadWallOnInit: function ActivityFeeds_UI_ActivityFeedsControl$get_loadWallOnInit() {
        return this.$1M_3;
    },
    
    set_loadWallOnInit: function ActivityFeeds_UI_ActivityFeedsControl$set_loadWallOnInit(value) {
        this.$1M_3 = value;
        return value;
    },
    
    get_firstRunContentResourceLocalizedUri: function ActivityFeeds_UI_ActivityFeedsControl$get_firstRunContentResourceLocalizedUri() {
        return this.$m_3;
    },
    
    set_firstRunContentResourceLocalizedUri: function ActivityFeeds_UI_ActivityFeedsControl$set_firstRunContentResourceLocalizedUri(value) {
        this.$m_3 = value;
        return value;
    },
    
    get_hasInitialSkeleton: function ActivityFeeds_UI_ActivityFeedsControl$get_hasInitialSkeleton() {
        return this.$V_3;
    },
    
    set_hasInitialSkeleton: function ActivityFeeds_UI_ActivityFeedsControl$set_hasInitialSkeleton(value) {
        this.$V_3 = value;
        return value;
    },
    
    $2E_3: function ActivityFeeds_UI_ActivityFeedsControl$$2E_3() {
        if (typeof(GetGlobalContext) === 'undefined') {
            GetGlobalContext = function() { return Xrm.Page.context; };
        }
    },
    
    initialize: function ActivityFeeds_UI_ActivityFeedsControl$initialize() {
        Mscrm.Performance.PerformanceMarkerManager.get_instance().addMarker('ActivityFeeds_Initialize', 1);
        Mscrm.CrmUIControl.prototype.initialize.call(this);
        ActivityFeeds.UI.YammerHelper.addYammerCssClassIfConfigured($P_CRM(this.get_element()));
        this.$2X_3();
        this.$2A_3();
        this.$2E_3();
        if (this.$1M_3) {
            this.$1u_3();
        }
        Xrm.Internal.trace.logT(ActivityFeeds.UI.ActivityFeedsControl, 'initialized for {0}', this.get_element().id);
    },
    
    $2X_3: function ActivityFeeds_UI_ActivityFeedsControl$$2X_3() {
        if (!IsNull(this.get_element().getAttribute('wallTabIndex'))) {
            this.$Y_3 = parseInt(this.get_element().getAttribute('wallTabIndex'));
        }
    },
    
    $2A_3: function ActivityFeeds_UI_ActivityFeedsControl$$2A_3() {
        var $v_0 = $P_CRM(document.body);
        if (Wall.Control.Utils.Browser.getCurrentBrowser().get_isTouchEnabled()) {
            if (!$v_0.hasClass('mobile')) {
                $v_0.addClass('mobile');
            }
        }
    },
    
    $1u_3: function ActivityFeeds_UI_ActivityFeedsControl$$1u_3() {
        this.$12_3 = true;
        Xrm.Internal.trace.logT(ActivityFeeds.UI.ActivityFeedsControl, 'started downloading wall content');
        if (ActivityFeeds.UI.ActivityFeedsControl.isRefreshForm()) {
            var $$t_0 = this;
            Mscrm.OnLoadDeferredExecutor.queueCallback(function() {
                if ($$t_0.get_isDisposed()) {
                    return;
                }
                $$t_0.completePendingInitialization();
            }, 2);
        }
        this.$1v_3(this.$15_3);
    },
    
    $1v_3: function ActivityFeeds_UI_ActivityFeedsControl$$1v_3($p0) {
        Xrm.Internal.trace.logT(ActivityFeeds.UI.ActivityFeedsControl, 'Template load started');
        var $v_0 = Xrm.Internal.startMetricsStopwatch('ActivityFeeds_LoadHtml');
        $v_0.start();
        var $$t_7 = this, $$t_8 = this;
        $p0.loadContent(this.$v_3, 'html', function($p1_0) {
            $v_0.stop();
            if ($$t_7.get_isDisposed()) {
                return;
            }
            Xrm.Internal.trace.logT(ActivityFeeds.UI.ActivityFeedsControl, 'AF wall template loaded');
            var $v_1 = Xrm.Internal.startMetricsStopwatch('AF_WallHtml_Render');
            $v_1.start();
            if ($$t_7.$V_3) {
                $$t_7.$1K_3 = $p1_0;
            }
            else {
                $$t_7.get_element().style.display = 'none';
                $$t_7.$V_3 = false;
                Xrm.XrmPerformance.measureTime('AF_Render_Template', function() {
                    $P_CRM($$t_7.get_element()).empty();
                    $P_CRM($p1_0).appendTo($$t_7.get_element());
                });
                Xrm.Internal.trace.logT(ActivityFeeds.UI.ActivityFeedsControl, 'replaced initial skeleton');
            }
            $$t_7.$1U_3 = true;
            $$t_7.$12_3 = false;
            if ($$t_7.$g_3 && !$$t_7.$o_3) {
                $$t_7.$1l_3($$t_7.$15_3);
            }
            else if ($$t_7.$g_3 && $$t_7.$o_3) {
                $$t_7.$1l_3($p0);
            }
            $v_1.stop();
        }, function($p1_0, $p1_1, $p1_2) {
            if ($$t_8.get_isDisposed()) {
                return;
            }
            if (!$p1_0.status) {
            }
            else {
                throw Error.create('Unable to load requested file:' + $$t_8.$v_3);
            }
        });
    },
    
    $2d_3: function ActivityFeeds_UI_ActivityFeedsControl$$2d_3($p0) {
        if (this.$o_3) {
            return;
        }
        Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_LoadFirstRunContentHtml');
        var $$t_6 = this, $$t_7 = this;
        $p0.loadContent(this.$m_3, 'html', function($p1_0) {
            if ($$t_6.get_isDisposed()) {
                return;
            }
            Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_LoadFirstRunContentHtml_End');
            var $v_0 = Xrm.Internal.startMetricsStopwatch('AF_FirstRun_Render');
            $v_0.start();
            if (!IsNull($$t_6.$4_3) && !IsNull($$t_6.$4_3.$0_0)) {
                $P_CRM($$t_6.get_element()).find('#firstRunContent').html($p1_0);
                $$t_6.$4_3.$0_0.setEmptyTemplateMode(1);
            }
            Mscrm.MetricsCollector.reportTimelineEvent('ActivityFeeds', 'loaded', null, 'FirstRun');
            $v_0.stop();
        }, function($p1_0, $p1_1, $p1_2) {
            if ($$t_7.get_isDisposed()) {
                return;
            }
            if (!$p1_0.status) {
            }
            else {
                throw Error.create('Unable to load requested file:' + $$t_7.$m_3);
            }
        });
    },
    
    completePendingInitialization: function ActivityFeeds_UI_ActivityFeedsControl$completePendingInitialization() {
        if (this.$g_3) {
            return;
        }
        this.$g_3 = true;
        if (this.$1U_3) {
            this.$1l_3(this.$15_3);
        }
    },
    
    $1l_3: function ActivityFeeds_UI_ActivityFeedsControl$$1l_3($p0) {
        if (!_String.isNullOrWhiteSpace(this.$9_3) && IsNull(this.$4_3)) {
            this.$29_3();
        }
        else {
            Xrm.Internal.trace.warningT(ActivityFeeds.UI.ActivityFeedsControl, 'Entity type is not accessible or page is null');
        }
        this.$2d_3($p0);
    },
    
    loadWallForEntity: function ActivityFeeds_UI_ActivityFeedsControl$loadWallForEntity(entityReference) {
        if (IsNull(entityReference)) {
            throw Error.argumentNull('entityReference');
        }
        this.$B_3 = entityReference.Id;
        this.$9_3 = entityReference.TypeName;
        this.$z_3 = entityReference.Name;
        if (this.$12_3 && !this.get_$1t_3()) {
            return;
        }
        if (this.get_$1t_3()) {
            this.$29_3();
        }
        else {
            this.$1u_3();
        }
    },
    
    loadWallForEntityTurboForm: function ActivityFeeds_UI_ActivityFeedsControl$loadWallForEntityTurboForm(entityReference, htmlLoader) {
        if (IsNull(entityReference)) {
            throw Error.argumentNull('entityReference');
        }
        if (IsNull(htmlLoader)) {
            throw Error.argumentNull('Html Loader is null.');
        }
        this.$g_3 = true;
        this.$12_3 = true;
        this.$B_3 = entityReference.Id;
        this.$9_3 = entityReference.TypeName;
        this.$z_3 = entityReference.Name;
        this.$1v_3(htmlLoader);
    },
    
    $29_3: function ActivityFeeds_UI_ActivityFeedsControl$$29_3() {
        this.get_element().style.display = 'block';
        if (this.$V_3) {
            var $$t_0 = this;
            Xrm.XrmPerformance.measureTime('AF_Render_Template', function() {
                $P_CRM($$t_0.get_element()).empty();
                $P_CRM($$t_0.$1K_3).appendTo($$t_0.get_element());
            });
            this.$1K_3 = '';
            this.$V_3 = false;
        }
        if (IsNull(this.$4_3)) {
            this.$4_3 = ActivityFeeds.UI.WallPage.createRecordWallPage(this.$B_3, this.$9_3, this.$z_3, $P_CRM(this.get_element()), this.$Y_3, this.$17_3);
            ActivityFeeds.UI.ProfileImageUpdater.get_instance().registerWallPage(this.$4_3);
            this.$e_3 = new ActivityFeeds.UI.WallCommandDispatcher(this.$4_3.$0_0, this.$4_3.$1_0);
            this.$4_3.$0_0.$F_1 = this.$F_3;
            if (this.$11_3) {
                this.selectPostSourceFilter(this.$11_3);
                this.$11_3 = 0;
            }
        }
        else if (this.$4_3.$B_0 !== this.$B_3 || this.$4_3.$9_0 !== this.$9_3) {
            this.$4_3.updateRegardingEntity(this.$B_3, this.$9_3, this.$z_3);
        }
        Xrm.Internal.trace.logT(ActivityFeeds.UI.ActivityFeedsControl, 'Wall updated');
    },
    
    $1o_3: function ActivityFeeds_UI_ActivityFeedsControl$$1o_3($p0, $p1) {
        if (!IsNull(this.$e_3)) {
            this.$e_3.dispatchCommand($p0, $p1);
        }
    },
    
    selectPostSourceFilter: function ActivityFeeds_UI_ActivityFeedsControl$selectPostSourceFilter(postSource) {
        if (IsNull(this.$4_3)) {
            this.$11_3 = postSource;
            return;
        }
        var $v_0 = this.$4_3.$1_0.getWallFilters('PostSourceFilter', null);
        var $$t_5 = this;
        var $v_1 = _Array.filter(Wall.Interfaces.IWallFilter, $v_0, function($p1_0) {
            var $v_2 = $p1_0;
            return !IsNull($v_2) && $v_2.get_context() === postSource;
        });
        this.$1o_3('postsourcefilteraction', $v_1[0]);
    },
    
    dispose: function ActivityFeeds_UI_ActivityFeedsControl$dispose() {
        if (!IsNull(this.$4_3)) {
            this.$4_3.dispose();
            this.$4_3 = null;
        }
        if (!IsNull(this.$e_3)) {
            this.$e_3.dispose();
            this.$e_3 = null;
        }
        this.$15_3.dispose();
        Mscrm.CrmUIControl.prototype.dispose.call(this);
        Wall.Control.Utils.WindowUtils.dispose();
    },
    
    processData: function ActivityFeeds_UI_ActivityFeedsControl$processData() {
        if (!IsNull(this.$4_3) && !IsNull(this.$4_3.$0_0) && this.$F_3) {
            this.$4_3.$0_0.processData();
        }
        else {
            this.set_shouldDeferDataProcessing(false);
        }
    },
    
    get_shouldDeferDataProcessing: function ActivityFeeds_UI_ActivityFeedsControl$get_shouldDeferDataProcessing() {
        return this.$F_3;
    },
    
    set_shouldDeferDataProcessing: function ActivityFeeds_UI_ActivityFeedsControl$set_shouldDeferDataProcessing(value) {
        if (!IsNull(this.$4_3) && !IsNull(this.$4_3.$0_0)) {
            this.$4_3.$0_0.$F_1 = this.$F_3;
        }
        this.$F_3 = value;
        return value;
    }
}


ActivityFeeds.UI.ActivityFeedsWall = function ActivityFeeds_UI_ActivityFeedsWall(rootContainer, wallService, wallType, headerId, postTemplateId, commentTemplateId, wallContainerId, postTextBoxjQueryId, progressTemplateId, emptyTemplateId, showMoreLinkTemplateId, overflowContainerjQueryObject, isDisabled) {
    this.$$d_$1d_1 = Function.createDelegate(this, this.$1d_1);
    this.$M_1 = {};
    this.$H_1 = {};
    this.$k_1 = new Mscrm.CrmDisposeHelper();
    ActivityFeeds.UI.ActivityFeedsWall.initializeBase(this, [ rootContainer, wallService, headerId, postTemplateId, commentTemplateId, wallContainerId, postTextBoxjQueryId, progressTemplateId, emptyTemplateId, showMoreLinkTemplateId ]);
    this.$P_1 = wallService;
    this.$6_1 = wallType;
    this.$1j_1 = rootContainer.find('#deletePostTemplate');
    this.$1i_1 = rootContainer.find('#deleteCommentTemplate');
    this.$1Z_1 = overflowContainerjQueryObject;
    this.$2Y_1();
    this.$1s_1();
    Wall.UI.Wall.prototype.setDisabledState.call(this, isDisabled);
    this.setProgressState();
    if (window.YAMMER_IS_INSTALLED && !window.YAMMER_IS_CONFIGURED_FOR_ORG) {
        this.rootContainer.find('.getYammerContent').show();
    }
    ActivityFeeds.UI.ActivityFeedsWall.$2V();
}
ActivityFeeds.UI.ActivityFeedsWall.$2V = function ActivityFeeds_UI_ActivityFeedsWall$$2V() {
    if (Mscrm.Utilities.isIosDevice()) {
        var $v_0 = $get('modifyThisListLink');
        if (!IsNull($v_0)) {
            $v_0.style.display = 'none';
        }
    }
}
ActivityFeeds.UI.ActivityFeedsWall.$1V = function ActivityFeeds_UI_ActivityFeedsWall$$1V($p0) {
    $p0.css('opacity', '1');
    var $v_0 = Wall.Control.Utils.Browser.getCurrentBrowser();
    if ($v_0.get_agent() === 1 && $v_0.get_version() <= 8) {
        $p0.css('filter', '');
    }
}
ActivityFeeds.UI.ActivityFeedsWall.prototype = {
    $1j_1: null,
    $1i_1: null,
    $P_1: null,
    $G_1: null,
    $7_1: null,
    $6_1: 0,
    $F_1: false,
    $1Z_1: null,
    $1E_1: null,
    $1F_1: null,
    $1G_1: null,
    $y_1: null,
    $T_1: false,
    $c_1: false,
    $1W_1: true,
    
    get_activityFeedsWallType: function ActivityFeeds_UI_ActivityFeedsWall$get_activityFeedsWallType() {
        return this.$6_1;
    },
    
    get_wallElementJQueryObject: function ActivityFeeds_UI_ActivityFeedsWall$get_wallElementJQueryObject() {
        return this.rootContainer;
    },
    
    add_likesRetrieved: function ActivityFeeds_UI_ActivityFeedsWall$add_likesRetrieved(value) {
        this._events.addHandler('LikesRetrieved', value);
    },
    
    remove_likesRetrieved: function ActivityFeeds_UI_ActivityFeedsWall$remove_likesRetrieved(value) {
        this._events.removeHandler('LikesRetrieved', value);
    },
    
    get_isYammerWall: function ActivityFeeds_UI_ActivityFeedsWall$get_isYammerWall() {
        return this.$T_1;
    },
    
    get_isActionHubWall: function ActivityFeeds_UI_ActivityFeedsWall$get_isActionHubWall() {
        return this.$c_1;
    },
    
    $1s_1: function ActivityFeeds_UI_ActivityFeedsWall$$1s_1() {
        if (window.IS_ACTIONHUB_ENABLED && !this.$6_1) {
            this.$7_1 = this.rootContainer.find('.actionHubEmbed');
            var $v_0 = this.$7_1.children('#iFrmActionCards');
            var $v_1 = Xrm.Internal.startMetricsStopwatch('ActionHub IFrame - Show');
            $v_1.start();
            if (!$v_0.length) {
                this.$7_1.empty();
                ActivityFeeds.UI.ActionHubHelper.injectActionHubIFrame(this.$7_1, this.$6_1, null);
            }
            $v_1.stop();
        }
    },
    
    $2Y_1: function ActivityFeeds_UI_ActivityFeedsWall$$2Y_1() {
        this.$G_1 = this.rootContainer.find('.yammerEmbed');
        if (Mscrm.Utilities.isIosDevice()) {
            if (window.YAMMER_IS_CONFIGURED_FOR_ORG && !this.$6_1) {
                this.rootContainer.find('.filterAndRefreshContainer.secondary, .filterAndRefreshContainer.secondary .viewFiltersInitiatorContainer, .filterAndRefreshContainer.secondary .viewFiltersInitiator').show();
            }
            return;
        }
        if (window.YAMMER_IS_CONFIGURED_FOR_ORG) {
            var $v_0 = Xrm.Internal.startMetricsStopwatch('Yammer IFrame - Show');
            $v_0.start();
            if (!this.$6_1) {
                this.$G_1.empty();
                ActivityFeeds.UI.YammerHelper.injectYammerIFrame(this.$G_1, this.$6_1, null);
            }
            else {
                var $v_1 = $P_CRM(this.rootContainer.parentsUntil('#content_notescontrol')[1]);
                ActivityFeeds.UI.YammerHelper.showYammerInIE($v_1);
                ActivityFeeds.UI.YammerHelper.injectYammerIFrame(this.$G_1, this.$6_1, (this.get_wallService()).get_wallEntityReference());
            }
            this.setWallMode(true);
            $v_0.stop();
        }
    },
    
    resizeProgressTemplate: function ActivityFeeds_UI_ActivityFeedsWall$resizeProgressTemplate() {
    },
    
    refreshActionHubWall: function ActivityFeeds_UI_ActivityFeedsWall$refreshActionHubWall() {
        if (window.IS_ACTIONHUB_ENABLED && !this.$6_1) {
            ActivityFeeds.UI.ActionHubHelper.refreshActionHubIFrame(this.$7_1, this.$6_1, (this.get_wallService()).get_wallEntityReference());
        }
    },
    
    refreshAll: function ActivityFeeds_UI_ActivityFeedsWall$refreshAll() {
        if (!this.get_isDisabled()) {
            var $v_0 = 0;
            try {
                $v_0 = (this.get_wallService()).get_selectedPostSourceFilterContext();
            }
            catch ($$e_1) {
            }
            if (window.YAMMER_IS_CONFIGURED_FOR_ORG && $v_0 === 2) {
                ActivityFeeds.UI.YammerHelper.refreshYammerIFrame(this.$G_1, this.$6_1, (this.get_wallService()).get_wallEntityReference());
            }
            if (window.IS_ACTIONHUB_ENABLED && !this.$6_1) {
                ActivityFeeds.UI.ActionHubHelper.refreshActionHubIFrame(this.$7_1, this.$6_1, (this.get_wallService()).get_wallEntityReference());
            }
            var $$t_2 = this;
            this.$1g_1(function() {
                Wall.UI.Wall.prototype.refreshAll.call($$t_2);
            });
        }
    },
    
    refreshNotes: function ActivityFeeds_UI_ActivityFeedsWall$refreshNotes() {
        if (!this.get_isDisabled()) {
            var $$t_0 = this;
            this.$1g_1(function() {
                Wall.UI.Wall.prototype.refreshAll.call($$t_0);
            });
        }
    },
    
    processRetrievePostsResponse: function ActivityFeeds_UI_ActivityFeedsWall$processRetrievePostsResponse(retrievePostsResponse, dataCallback, emptyCallback, errorCallback) {
        if (!this.$F_1) {
            Wall.UI.Wall.prototype.processRetrievePostsResponse.call(this, retrievePostsResponse, dataCallback, emptyCallback, errorCallback);
            if (this.$1W_1) {
                Mscrm.MetricsCollector.reportTimelineEvent('ActivityFeeds', 'loaded', null, 'Posts');
            }
            this.$1W_1 = false;
        }
        else {
            this.$y_1 = retrievePostsResponse;
            this.$1E_1 = dataCallback;
            this.$1F_1 = emptyCallback;
            this.$1G_1 = errorCallback;
        }
    },
    
    setWallMode: function ActivityFeeds_UI_ActivityFeedsWall$setWallMode(isYammerWall) {
        this.$T_1 = isYammerWall;
        if (isYammerWall) {
            if (!IsNull(this.progressTemplatejQuery)) {
                this.progressTemplatejQuery.hide();
            }
            if (!IsNull(this.firstRunContentjQuery)) {
                this.firstRunContentjQuery.hide();
            }
            if (!IsNull(this.wallContainerjQuery)) {
                this.wallContainerjQuery.hide();
            }
            this.$G_1.show();
            if (!IsNull(this.$7_1)) {
                this.$7_1.hide();
            }
            this.rootContainer.addClass('yammerWall');
            this.rootContainer.removeClass('actionHubWall');
        }
        else {
            this.wallContainerjQuery.show();
            if (!IsNull(this.$G_1)) {
                this.$G_1.hide();
            }
            if (!IsNull(this.$7_1)) {
                this.$7_1.hide();
            }
            this.rootContainer.removeClass('yammerWall');
            this.rootContainer.removeClass('actionHubWall');
            this.setDataState();
        }
    },
    
    setActionHubWallMode: function ActivityFeeds_UI_ActivityFeedsWall$setActionHubWallMode(isActionHubWall) {
        this.$c_1 = isActionHubWall;
        if (isActionHubWall) {
            if (!IsNull(this.progressTemplatejQuery)) {
                this.progressTemplatejQuery.hide();
            }
            if (!IsNull(this.firstRunContentjQuery)) {
                this.firstRunContentjQuery.hide();
            }
            if (!IsNull(this.wallContainerjQuery)) {
                this.wallContainerjQuery.hide();
            }
            if (!IsNull(this.$G_1)) {
                this.$G_1.hide();
            }
            this.$1s_1();
            this.$7_1.show();
            this.rootContainer.addClass('actionHubWall');
            this.rootContainer.removeClass('yammerWall');
        }
        else {
            this.wallContainerjQuery.show();
            if (!IsNull(this.$7_1)) {
                this.$7_1.hide();
            }
            this.rootContainer.removeClass('actionHubWall');
            this.setDataState();
        }
    },
    
    setDataState: function ActivityFeeds_UI_ActivityFeedsWall$setDataState() {
        if (!this.$T_1 && !this.$c_1) {
            Wall.UI.Wall.prototype.setDataState.call(this);
        }
    },
    
    setEmptyState: function ActivityFeeds_UI_ActivityFeedsWall$setEmptyState() {
        if (!this.$T_1 && !this.$c_1) {
            Wall.UI.Wall.prototype.setEmptyState.call(this);
        }
    },
    
    setProgressState: function ActivityFeeds_UI_ActivityFeedsWall$setProgressState() {
        if (!this.$T_1 && !this.$c_1) {
            Wall.UI.Wall.prototype.setProgressState.call(this);
        }
    },
    
    deletePost: function ActivityFeeds_UI_ActivityFeedsWall$deletePost(postId) {
        var $v_0 = this.wallContainerjQuery.find(String.format('#{0}', postId));
        var $v_1 = this.findDisplayedPostById(postId);
        var $v_2 = {};
        $v_2['height'] = '10px';
        $v_2['opacity'] = '0';
        var $$t_7 = this;
        $v_0.animate($v_2, 'fast', 'linear', function() {
            $v_0.hide();
            var $v_3 = $$t_7.$1j_1.tmpl($v_1, $$t_7).insertBefore($v_0).show();
            $$t_7.$M_1[postId] = $v_1;
            $$t_7.$1d_1($v_3, postId, true);
            var $v_4 = $$t_7.$$d_$1d_1;
            $v_3.data('undeletePostMessageAnimationCallback', $v_4);
            $$t_7.$k_1.schedule(function() {
                var $v_5 = $v_3.find('a:last')[0];
                $v_5.onblur=undefined;;
                $v_3.removeData('undeletePostMessageAnimationCallback');
            });
            $v_3.find('a:last').focus();
        });
    },
    
    deleteComment: function ActivityFeeds_UI_ActivityFeedsWall$deleteComment(commentId) {
        var $v_0 = this.wallContainerjQuery.find(String.format('#{0}', commentId));
        var $v_1 = this.$P_1.getWallServiceFactory().createComment();
        $v_1.set_commentId(commentId);
        var $v_2 = {};
        $v_2['height'] = '5px';
        $v_2['opacity'] = '0';
        var $$t_6 = this;
        $v_0.animate($v_2, 'fast', 'linear', function() {
            $v_0.hide();
            var $v_3 = $$t_6.$1i_1.tmpl($v_1, $$t_6).insertBefore($v_0).show();
            $$t_6.$H_1[commentId] = $v_1;
            $$t_6.$1d_1($v_3, commentId, true);
            var $v_4 = $$t_6.$$d_$1d_1;
            $v_3.data('undeleteCommentMessageAnimationCallback', $v_4);
            $$t_6.$k_1.schedule(function() {
                $v_3.data('undeleteCommentMessageAnimationCallback', null);
            });
            $v_3.find('a:last').focus();
        });
    },
    
    processError: function ActivityFeeds_UI_ActivityFeedsWall$processError(response) {
        if (!this.wallContainerjQuery.find('.post').first().length) {
            this.setErrorState();
            this.wallContainerjQuery.html(String.format('<div class=\'inlineWallError\'>{0}</div>', Sales.Common.CrmSoapServiceProxy.Utils.EncodingUtils.multilineHtmlEncode(response.get_errorMessage(), true)));
        }
        else {
            alert(response.get_errorMessage());
        }
        this.fireEvent(Wall.Interfaces.EventArguments.ErrorEventArgs, 'Error', new Wall.Interfaces.EventArguments.ErrorEventArgs(response));
    },
    
    setErrorState: function ActivityFeeds_UI_ActivityFeedsWall$setErrorState() {
        if (!this.$T_1 && !this.$c_1) {
            Wall.UI.Wall.prototype.setErrorState.call(this);
            this.wallContainerjQuery.show();
            this.firstRunContentjQuery.hide();
        }
    },
    
    setEmptyTemplateMode: function ActivityFeeds_UI_ActivityFeedsWall$setEmptyTemplateMode(mode) {
        switch (mode) {
            case 0:
                this.rootContainer.find('.firstRunExperienceContent').show();
                this.rootContainer.find('.emptyFilterResponseContent').hide();
                this.rootContainer.find('.recordWallEmptyResponseContent').hide();
                if (this.isFeatureEnabled('FCB.WebClientVisualRefresh')) {
                    if (this.rootContainer.find('.emptyFilterResponseContent').length > 0 || this.rootContainer.find('.recordWallEmptyResponseContent').length > 0) {
                        this.rootContainer.find('.emptyMessage').hide();
                    }
                }
                break;
            case 1:
                if (!this.$6_1) {
                    this.rootContainer.find('.firstRunExperienceContent').hide();
                    this.rootContainer.find('.emptyFilterResponseContent').show();
                    this.rootContainer.find('.recordWallEmptyResponseContent').hide();
                    this.rootContainer.find('.emptyMessageSeparator').hide();
                    if (this.isFeatureEnabled('FCB.WebClientVisualRefresh')) {
                        this.$26_1();
                        this.rootContainer.find('.emptyMessageSeparator').show();
                        if (this.rootContainer.find('.emptyFilterResponseContent').length > 0 || this.rootContainer.find('.recordWallEmptyResponseContent').length > 0) {
                            this.rootContainer.find('.emptyMessage').hide();
                        }
                    }
                }
                else {
                    this.rootContainer.find('.firstRunExperienceContent').hide();
                    this.rootContainer.find('.emptyFilterResponseContent').hide();
                    this.rootContainer.find('.recordWallEmptyResponseContent').show();
                    if (this.isFeatureEnabled('FCB.WebClientVisualRefresh')) {
                        if (!this.rootContainer.find('.emptyFilterResponseContent').length || !this.rootContainer.find('.recordWallEmptyResponseContent').length) {
                            this.rootContainer.find('.emptyMessage').show();
                            this.$26_1();
                            this.rootContainer.find('.emptyMessageSeparator').show();
                        }
                    }
                }
                break;
            default:
                throw Error.argument('mode', 'Invalid mode');
        }
    },
    
    isShowCarouselView: function ActivityFeeds_UI_ActivityFeedsWall$isShowCarouselView() {
        var $v_0 = window.top.SHOWCAROUSEL;
        return $v_0;
    },
    
    undoDeletePost: function ActivityFeeds_UI_ActivityFeedsWall$undoDeletePost(postId) {
        if (((postId) in this.$M_1)) {
            delete this.$M_1[postId];
        }
        var $v_0 = String.format('#undeletePost_{0}', postId);
        this.wallContainerjQuery.find($v_0).blur().stop(true).remove();
        var $v_1 = this.wallContainerjQuery.find(String.format('#{0}', postId));
        ActivityFeeds.UI.ActivityFeedsWall.$1V($v_1);
        $v_1.css('height', 'auto').slideDown('fast');
        $v_1.addClass('focus');
        $v_1.find(String.format('#deleteaction_{0}', postId)).focus();
    },
    
    undoDeleteComment: function ActivityFeeds_UI_ActivityFeedsWall$undoDeleteComment(commentId) {
        if (((commentId) in this.$H_1)) {
            delete this.$H_1[commentId];
        }
        this.wallContainerjQuery.find(String.format('#undeleteComment_{0}', commentId)).stop(true).remove();
        var $v_0 = this.wallContainerjQuery.find(String.format('#{0}', commentId));
        ActivityFeeds.UI.ActivityFeedsWall.$1V($v_0);
        $v_0.css('height', 'auto').slideDown('fast');
        $v_0.addClass('focus');
        $v_0.find(String.format('#deleteaction_{0}', commentId)).focus();
    },
    
    $2D_1: function ActivityFeeds_UI_ActivityFeedsWall$$2D_1($p0) {
        if ((($p0) in this.$M_1)) {
            var $$t_2 = this;
            this.$P_1.deletePost(this.$M_1[$p0], function($p1_0) {
                if ($p1_0.get_isSucceeded()) {
                    $$t_2.fireEvent(Wall.Interfaces.EventArguments.PostDeletedEventArgs, 'PostDeleted', new Wall.Interfaces.EventArguments.PostDeletedEventArgs($p0));
                }
                else {
                    $$t_2.processError($p1_0);
                }
            });
            delete this.$M_1[$p0];
        }
    },
    
    $2C_1: function ActivityFeeds_UI_ActivityFeedsWall$$2C_1($p0) {
        if ((($p0) in this.$H_1)) {
            var $$t_2 = this;
            this.$P_1.deleteComment(this.$H_1[$p0], function($p1_0) {
                if ($p1_0.get_isSucceeded()) {
                    $$t_2.fireEvent(Wall.Interfaces.EventArguments.CommentDeletedEventArgs, 'CommentDeleted', new Wall.Interfaces.EventArguments.CommentDeletedEventArgs($p0));
                }
                else {
                    $$t_2.processError($p1_0);
                }
            });
            delete this.$H_1[$p0];
        }
    },
    
    $1g_1: function ActivityFeeds_UI_ActivityFeedsWall$$1g_1($p0) {
        var $$dict_7 = this.$M_1;
        for (var $$key_8 in $$dict_7) {
            var $v_2 = { key: $$key_8, value: $$dict_7[$$key_8] };
            var $v_3 = ($v_2.value).get_comments();
            if (!IsNull($v_3)) {
                for (var $$arr_3 = $v_3, $$len_4 = $$arr_3.length, $$idx_5 = 0; $$idx_5 < $$len_4; ++$$idx_5) {
                    var $v_4 = $$arr_3[$$idx_5];
                    if ((($v_4.get_commentId()) in this.$H_1)) {
                        delete this.$H_1[$v_4.get_commentId()];
                    }
                }
            }
        }
        var $v_0 = _Dictionary.count(this.$M_1) + _Dictionary.count(this.$H_1);
        if (!$v_0) {
            if (!IsNull($p0)) {
                $p0();
            }
            return;
        }
        var $v_1 = true;
        var $$t_F = this;
        this.$1n_1(Wall.Interfaces.IPost, this.$M_1, function($p1_0) {
            $$t_F.get_wallService().deletePost($p1_0, function($p2_0) {
                $v_0--;
                if ($v_0 <= 0) {
                    $v_0 += 1000;
                    $v_1 = false;
                    if (!IsNull($p0)) {
                        $p0();
                    }
                }
            });
        });
        var $$t_G = this;
        this.$1n_1(Wall.Interfaces.IComment, this.$H_1, function($p1_0) {
            $$t_G.get_wallService().deleteComment($p1_0, function($p2_0) {
                $v_0--;
                if ($v_0 <= 0) {
                    $v_0 += 1000;
                    $v_1 = false;
                    if (!IsNull($p0)) {
                        $p0();
                    }
                }
            });
        });
        var $$t_H = this;
        window.setTimeout(function() {
            if ($v_1) {
                $v_0 += 1000;
                if (!IsNull($p0)) {
                    $p0();
                }
            }
        }, 2000);
    },
    
    $1n_1: function ActivityFeeds_UI_ActivityFeedsWall$$1n_1($p0, $p1, $p2) {
        var $v_0 = [];
        var $$dict_5 = $p1;
        for (var $$key_6 in $$dict_5) {
            var $v_2 = { key: $$key_6, value: $$dict_5[$$key_6] };
            Array.enqueue($v_0, $v_2.value);
        }
        var $v_1 = Array.dequeue($v_0);
        while (!IsNull($v_1)) {
            $p2($v_1);
            $v_1 = Array.dequeue($v_0);
        }
    },
    
    $1d_1: function ActivityFeeds_UI_ActivityFeedsWall$$1d_1($p0, $p1, $p2) {
        ActivityFeeds.UI.ActivityFeedsWall.$1V($p0);
        $p0.stop(true);
        if ($p2 && !$p0.find('a:focus').length) {
            var $v_0 = {};
            $v_0['opacity'] = '0.2';
            var $$t_4 = this;
            ($p0.show(1)).delay(4000).animate($v_0, 3000, 'linear', function() {
                $p0.remove();
                if ($p0.hasClass('deletePostDiv')) {
                    $$t_4.$2D_1($p1);
                }
                else if ($p0.hasClass('deleteCommentDiv')) {
                    $$t_4.$2C_1($p1);
                }
                else {
                }
            });
        }
    },
    
    showLikesFlyout: function ActivityFeeds_UI_ActivityFeedsWall$showLikesFlyout(postId) {
        var $v_0 = this.rootContainer.find(String.format('#{0}', postId));
        var $v_1 = $v_0.find('.likeContainer');
        if ($v_1.css('display') !== 'none') {
            return;
        }
        $v_1.show();
        var $v_2 = $v_0.find('.likeFlyoutRoot');
        var $v_3 = $v_0.find('span.likeCountArea:last');
        var $v_4 = 5;
        var $v_5 = 210;
        var $v_6 = -$v_5 / 2 + $v_3.outerWidth(true) / 2 + $v_3.position().left - $v_2.position().left - $v_4;
        $v_1.css('margin-left', $v_6.toString() + 'px');
        var $v_7 = $v_1.find('.likeUserDataContainer').empty();
        var $v_8 = $v_1.find('.likeProgressIndicator').clone().appendTo($v_7).show();
        var $v_9 = this.rootContainer.find('#likeListDialogTemplate');
        var $v_A = 0;
        var $v_B = false;
        var $$t_K = this;
        var $v_C = function($p1_0) {
            $v_8.hide();
            if ($p1_0.get_isSucceeded()) {
                if ($p1_0.get_users().length > 0) {
                    $v_9.tmpl($p1_0.get_users()).insertBefore($v_8);
                }
                $v_B = $p1_0.get_moreLikes();
            }
        };
        var $$t_L = this;
        var $v_D = function($p1_0) {
            if ($v_7.scrollTop() + $v_7.height() >= $v_7.get(0).scrollHeight - 10 && $v_B) {
                $v_8.show();
                $$t_L.retrieveLikes(postId, ++$v_A, $v_C);
            }
        };
        $v_7.scroll($v_D);
        var $$t_M = this;
        this.$k_1.schedule(function() {
            $v_7.unbind('scroll', $v_D);
        });
        var $$t_N = this;
        window.setTimeout(function() {
            var $v_E = function($p2_0) {
                var $v_F = $P_CRM($p2_0.target);
                if (($p2_0.target !== $v_1.get()[0] && !$v_F.parents('.liked').size()) || $v_F.hasClass('likeCloseFlyout')) {
                    $v_1.hide();
                    $P_CRM(document).unbind('.likeFlyout');
                }
            };
            $P_CRM(document).bind('click.likeFlyout', $v_E);
            $$t_N.$k_1.schedule(function() {
                $P_CRM(document).unbind('click.likeFlyout', $v_E);
            });
        }, 100);
        this.retrieveLikes(postId, $v_A, $v_C);
    },
    
    retrieveLikes: function ActivityFeeds_UI_ActivityFeedsWall$retrieveLikes(parentPostId, pageNumber, retrieveLikesCallback) {
        var $v_0 = this.$P_1.getWallServiceFactory().createRetrieveLikesRequest();
        $v_0.set_parentPostId(parentPostId);
        $v_0.set_pageSize(20);
        $v_0.set_pageNumber(pageNumber);
        var $$t_5 = this;
        this.$P_1.retrieveLikes($v_0, function($p1_0) {
            retrieveLikesCallback($p1_0);
            if ($p1_0.get_isSucceeded()) {
                if ($p1_0.get_users().length > 0) {
                    $$t_5.fireEvent(Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs, 'LikesRetrieved', new Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs($p1_0.get_users()));
                }
            }
            else {
                $$t_5.processError($p1_0);
            }
        });
    },
    
    likePost: function ActivityFeeds_UI_ActivityFeedsWall$likePost(post) {
        var $v_0 = this.rootContainer.find(String.format('#likeaction_{0}', post.get_postId()));
        var $v_1 = 'disabled';
        $v_0.attr($v_1, $v_1);
        var $$t_8 = this;
        this.$P_1.postLike(post.get_postId(), function($p1_0) {
            if ($p1_0.get_isSucceeded()) {
                post.set_likeId($p1_0.get_postLikeId());
                post.set_likeCounter(post.get_likeCounter() + 1);
                var $v_3 = $$t_8.rootContainer.find(String.format('#{0}_likes', post.get_postId()));
                var $v_4 = $$t_8.rootContainer.find('#likeTemplate');
                ($v_4).tmpl(post, $$t_8).appendTo($v_3.empty());
                $v_0.text(ActivityFeeds.Resources.WallService.unlike);
                $v_0.attr('title', ActivityFeeds.Resources.ActivityFeedsUI.unlikeToolTip);
                $v_0.blur();
                $v_0.trigger('change');
                var $v_5 = $$t_8.rootContainer.find(String.format('#{0}', post.get_postId()));
                $v_5.focus();
                Wall.Control.Utils.ScreenReader.say(ActivityFeeds.Resources.ActivityFeedsUI.youLikedThisPost);
            }
            else {
                $$t_8.processError($p1_0);
            }
            $v_0.removeAttr($v_1);
            var $v_2 = $$t_8.wallContainerjQuery.find(String.format('#{0}', post.get_postId()));
            $v_2.addClass('focus');
            $v_0.focus();
        });
    },
    
    deleteLike: function ActivityFeeds_UI_ActivityFeedsWall$deleteLike(post) {
        var $v_0 = this.rootContainer.find(String.format('#likeaction_{0}', post.get_postId()));
        var $v_1 = 'disabled';
        $v_0.attr($v_1, $v_1);
        var $$t_8 = this;
        this.$P_1.deleteLike(post.get_likeId(), function($p1_0) {
            if ($p1_0.get_isSucceeded()) {
                post.set_likeId(null);
                post.set_likeCounter(post.get_likeCounter() - 1);
                var $v_3 = $$t_8.rootContainer.find(String.format('#{0}_likes', post.get_postId()));
                var $v_4 = $$t_8.rootContainer.find('#likeTemplate');
                ($v_4).tmpl(post, $$t_8).appendTo($v_3.empty());
                $v_0.text(ActivityFeeds.Resources.WallService.like);
                $v_0.attr('title', ActivityFeeds.Resources.ActivityFeedsUI.likeToolTip);
                $v_0.blur();
                $v_0.trigger('change');
                var $v_5 = $$t_8.rootContainer.find(String.format('#{0}', post.get_postId()));
                $v_5.focus();
                Wall.Control.Utils.ScreenReader.say(ActivityFeeds.Resources.ActivityFeedsUI.youUnlikedThisPost);
            }
            else {
                $$t_8.processError($p1_0);
            }
            $v_0.removeAttr($v_1);
            var $v_2 = $$t_8.wallContainerjQuery.find(String.format('#{0}', post.get_postId()));
            $v_2.addClass('focus');
            $v_0.focus();
        });
    },
    
    $2M_1: function ActivityFeeds_UI_ActivityFeedsWall$$2M_1() {
        return this.$1Z_1;
    },
    
    $26_1: function ActivityFeeds_UI_ActivityFeedsWall$$26_1() {
        var $v_0 = 0;
        if (!IsNull(this.get_wallService())) {
            $v_0 = (this.get_wallService()).get_selectedPostSourceFilterContext();
        }
        if ($v_0 === 1) {
            this.rootContainer.find('.noPostsText').hide();
            this.rootContainer.find('.noAutoPostsText').show();
        }
        else {
            this.rootContainer.find('.noPostsText').show();
            this.rootContainer.find('.noAutoPostsText').hide();
        }
    },
    
    isFeatureEnabled: function ActivityFeeds_UI_ActivityFeedsWall$isFeatureEnabled(featureName) {
        if (!isNullOrEmptyString(featureName) && !IsNull(window.FeatureControl) && ((featureName) in window.FeatureControl)) {
            return window.FeatureControl[featureName];
        }
        return false;
    },
    
    processData: function ActivityFeeds_UI_ActivityFeedsWall$processData() {
        this.$F_1 = false;
        if (!IsNull(this.$y_1)) {
            this.processRetrievePostsResponse(this.$y_1, this.$1E_1, this.$1F_1, this.$1G_1);
        }
    },
    
    get_shouldDeferDataProcessing: function ActivityFeeds_UI_ActivityFeedsWall$get_shouldDeferDataProcessing() {
        return this.$F_1;
    },
    
    set_shouldDeferDataProcessing: function ActivityFeeds_UI_ActivityFeedsWall$set_shouldDeferDataProcessing(value) {
        this.$F_1 = value;
        return value;
    },
    
    disposeInternal: function ActivityFeeds_UI_ActivityFeedsWall$disposeInternal() {
        var $v_0 = this.get_wallService().get_isAsync();
        this.get_wallService().set_isAsync(false);
        if (!IsNull(this.$G_1)) {
            ActivityFeeds.UI.YammerHelper.disposeYammerIFrame(this.$G_1);
        }
        if (!IsNull(this.$7_1)) {
            ActivityFeeds.UI.ActionHubHelper.disposeActionHubIFrame(this.$7_1);
            this.$7_1 = null;
        }
        try {
            this.$1g_1(null);
        }
        finally {
            this.get_wallService().set_isAsync($v_0);
        }
        $P_CRM(document).unbind('.likeFlyout');
        this.$y_1 = null;
        this.$1E_1 = null;
        this.$1F_1 = null;
        this.$1G_1 = null;
        this.$k_1.dispose();
        Wall.UI.Wall.prototype.disposeInternal.call(this);
    }
}


ActivityFeeds.UI.BulkActionCommand = function ActivityFeeds_UI_BulkActionCommand($sn_arguments, ownerControl) {
    this.$Q_0 = $sn_arguments;
    this.$1N_0 = ownerControl;
    this.$R_0 = Xrm.Page.context;
}
ActivityFeeds.UI.BulkActionCommand.performBulkAction = function ActivityFeeds_UI_BulkActionCommand$performBulkAction(serviceType, action, ownerControl, selectedRecords, entityTypeCode) {
    var $v_0 = {};
    $v_0['serviceType'] = serviceType;
    $v_0['action'] = action;
    $v_0['selectedRecords'] = selectedRecords;
    $v_0['entityTypeCode'] = entityTypeCode;
    ActivityFeeds.UI.BulkActionCommand.$1B = new ActivityFeeds.UI.BulkActionCommand($v_0, ownerControl);
    ActivityFeeds.UI.BulkActionCommand.$1B.execute();
    ActivityFeeds.UI.BulkActionCommand.$1B = null;
}
ActivityFeeds.UI.BulkActionCommand.windowShowModalDialog = function ActivityFeeds_UI_BulkActionCommand$windowShowModalDialog(url, $sn_arguments, width, height, returnFunction) {
    Xrm.Internal.trace.warningT(ActivityFeeds.UI.BulkActionCommand, 'Need to test, that WindowShowModalDialog properly passes value to the returnFunction');
    var $v_0 = new Xrm.DialogOptions();
    $v_0.width = width;
    $v_0.height = height;
    Xrm.Internal.openDialog(url, $v_0, $sn_arguments, null, returnFunction);
}
ActivityFeeds.UI.BulkActionCommand.prototype = {
    $Q_0: null,
    $1N_0: null,
    $R_0: null,
    
    execute: function ActivityFeeds_UI_BulkActionCommand$execute() {
        if (IsNull(this.$Q_0) || isNullOrEmptyString(this.$Q_0['serviceType']) || isNullOrEmptyString(this.$Q_0['action'])) {
            return;
        }
        var $v_0 = this.$Q_0['selectedRecords'];
        var $v_1 = getFallbackLcid(this.$R_0.getUserLcid(), this.$R_0.getOrgLcid());
        var $v_2 = String.format('FollowDialog.{0}.htm', $v_1);
        var $v_3 = String.format('{0}/WebResources/msdyn_/{1}', this.$R_0.getClientUrl(), $v_2);
        var $$t_5 = this;
        ActivityFeeds.UI.BulkActionCommand.windowShowModalDialog($v_3, this.$Q_0, 450, 300, function($p1_0) {
            if ($p1_0 && $p1_0 === -1) {
                return;
            }
            if ($$t_5.$1N_0) {
                $$t_5.$1N_0.refresh();
            }
        });
    }
}


ActivityFeeds.UI.BulkActionService = function ActivityFeeds_UI_BulkActionService($sn_arguments) {
    this.$Q_0 = $sn_arguments;
    this.$1a_0 = $sn_arguments['window'];
    this.$R_0 = GetGlobalContext();
    this.$8_0 = ActivityFeeds.UI.BulkActionService.$2B($sn_arguments['selectedRecords']);
    this.$h_0 = $sn_arguments['action'];
    this.$I_0 = 'prompt';
    this.setEnableButtonStatus(true, true);
}
ActivityFeeds.UI.BulkActionService.onLoadDialog = function ActivityFeeds_UI_BulkActionService$onLoadDialog() {
    var $v_0 = getDialogArguments();
    var $v_1 = $v_0['serviceType'];
    if (isNullOrEmptyString($v_1)) {
    }
    ActivityFeeds.UI.BulkActionService.$S = new (Type.parse($v_1))($v_0);
    ActivityFeeds.UI.BulkActionService.$S.initialize();
}
ActivityFeeds.UI.BulkActionService.$2B = function ActivityFeeds_UI_BulkActionService$$2B($p0) {
    var $v_0 = new Array(0);
    for (var $v_1 = 0; $v_1 < $p0.length; $v_1++) {
        var $v_2 = $p0[$v_1];
        var $v_3 = new Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference();
        $v_3.id = $v_2.Id;
        $v_3.logicalName = 'msdyn_postruleconfig';
        $v_3.name = $v_2.Name;
        $v_0[$v_1] = $v_3;
    }
    return $v_0;
}
ActivityFeeds.UI.BulkActionService.prototype = {
    $I_0: null,
    $1A_0: false,
    $Q_0: null,
    $R_0: null,
    $8_0: null,
    $1a_0: null,
    $h_0: null,
    $W_0: 0,
    $1L_0: 0,
    
    get_action: function ActivityFeeds_UI_BulkActionService$get_action() {
        return this.$h_0;
    },
    
    get_selectedRecords: function ActivityFeeds_UI_BulkActionService$get_selectedRecords() {
        return this.$8_0;
    },
    
    get_globalContext: function ActivityFeeds_UI_BulkActionService$get_globalContext() {
        return this.$R_0;
    },
    
    get_cancelRequested: function ActivityFeeds_UI_BulkActionService$get_cancelRequested() {
        return this.$1A_0;
    },
    
    set_cancelRequested: function ActivityFeeds_UI_BulkActionService$set_cancelRequested(value) {
        var $v_0 = $get('cmdDialogCancel');
        $v_0.disabled = true;
        this.$1A_0 = value;
        return value;
    },
    
    get_state: function ActivityFeeds_UI_BulkActionService$get_state() {
        return this.$I_0;
    },
    
    set_state: function ActivityFeeds_UI_BulkActionService$set_state(value) {
        this.$I_0 = value;
        return value;
    },
    
    initialize: function ActivityFeeds_UI_BulkActionService$initialize() {
        if (IsNull(this.$8_0) || !this.$8_0.length) {
            return;
        }
        this.$37_0();
        this.setupDialogTexts();
    },
    
    onClickOK: function ActivityFeeds_UI_BulkActionService$onClickOK() {
        switch (this.$I_0) {
            case 'prompt':
                this.setEnableButtonStatus(false, true);
                this.$I_0 = 'inprogress';
                this.doAction();
                break;
            case 'complete':
                closeWindow();
                break;
        }
    },
    
    onClickCancel: function ActivityFeeds_UI_BulkActionService$onClickCancel() {
        if (ActivityFeeds.UI.BulkActionService.$S.$I_0 === 'inprogress') {
            ActivityFeeds.UI.BulkActionService.$S.set_cancelRequested(true);
        }
        else {
            window.returnValue = -1;
            closeWindow();
        }
    },
    
    showMessageAndTitles: function ActivityFeeds_UI_BulkActionService$showMessageAndTitles(boldTitle, title, message) {
        if (boldTitle) {
            $P_CRM('#divTitle').text(boldTitle);
        }
        if (title) {
            $P_CRM('#divDescription').text(title);
        }
        if (message) {
            $P_CRM('#divResult').text(message);
        }
    },
    
    doAction: function ActivityFeeds_UI_BulkActionService$doAction() {
        this.performAction();
        this.$I_0 = 'complete';
    },
    
    setEnableButtonStatus: function ActivityFeeds_UI_BulkActionService$setEnableButtonStatus(enabledOK, enableCancel) {
        var $v_0 = $get('butBegin');
        $v_0.disabled = !enabledOK;
        var $v_1 = $get('cmdDialogCancel');
        $v_1.disabled = !enableCancel;
    },
    
    actionFailCallBack: function ActivityFeeds_UI_BulkActionService$actionFailCallBack(errorResponse) {
        var $v_0 = errorResponse.get_organizationServiceFault().get_errorCode();
        switch ($v_0) {
            case -2147220891:
                var $v_1 = errorResponse.get_organizationServiceFault().get_message();
                if (isNullOrEmptyString($v_1)) {
                    $v_1 = CrmSoapServiceProxy.Utils.getErrorMessage(errorResponse);
                }
                this.showMessageAndTitles(null, null, $v_1);
                return false;
        }
        return true;
    },
    
    showProgress: function ActivityFeeds_UI_BulkActionService$showProgress() {
        var $v_0 = $get('tdDialogHeader');
        var $v_1 = $get('tdDialogFooter');
        var $v_2 = $get('divFillBg');
        var $v_3 = $get('divFill');
        var $v_4 = $get('divStatus');
        var $v_5 = $get('divProgress');
        var $v_6 = $get('imgProgress');
        $v_5.style.display = 'block';
        var $v_7 = $get('divMain');
        $v_7.style.display = 'none';
        var $v_8 = (!$v_0) ? 0 : $v_0.scrollHeight;
        var $v_9 = (!$v_1) ? 0 : $v_1.scrollHeight;
        var $v_A = (!$v_2) ? 0 : parseInt($v_2.style.height, 10);
        var $v_B = window.document.body.clientHeight;
        var $v_C = (($v_B - ($v_8 + $v_9)) / 2) + $v_8 - ($v_A / 2);
        this.$W_0 = window.document.body.clientWidth - 40;
        $v_2.style.display = 'inline';
        $v_4.style.display = 'inline';
        $v_3.style.display = 'inline';
        var $v_D = 0;
        if (this.$8_0.length === 1) {
            $v_D = this.$W_0 * 3 / 4;
            this.$1L_0 = this.$W_0 / 4;
        }
        else {
            this.$1L_0 = this.$W_0 / this.$8_0.length;
        }
        this.setFillBarDimensions($v_2, $v_C, this.$W_0);
        this.setFillBarDimensions($v_3, $v_C, $v_D);
        this.setFillBarDimensions($v_4, $v_C, this.$W_0);
        this.setFillBarDimensions($v_6, 0, this.$W_0);
    },
    
    setFillBarDimensions: function ActivityFeeds_UI_BulkActionService$setFillBarDimensions(element, top, width) {
        var $v_0 = $P_CRM(element);
        $v_0.css('top', top.toString());
        $v_0.css('width', width + 'px');
    },
    
    userConfirmedCancel: function ActivityFeeds_UI_BulkActionService$userConfirmedCancel(prompt) {
        var $v_0 = confirm(prompt);
        var $v_1 = $get('cmdDialogCancel');
        $v_1.disabled = false;
        this.$1A_0 = false;
        return $v_0;
    },
    
    handleCancellation: function ActivityFeeds_UI_BulkActionService$handleCancellation(prompt) {
        if (this.get_cancelRequested() && this.userConfirmedCancel(prompt)) {
            closeWindow();
            return true;
        }
        return false;
    },
    
    updateProgressBar: function ActivityFeeds_UI_BulkActionService$updateProgressBar(fill, step) {
        var $v_0 = $get('divFill');
        var $v_1 = $get('divFillBg');
        if (fill) {
            $v_0.style.pixelWidth = $v_1.style.pixelWidth;
        }
        else {
            $v_0.style.pixelWidth = this.$1L_0 * step + 2;
        }
    },
    
    operationComplete: function ActivityFeeds_UI_BulkActionService$operationComplete(errorCount) {
        if (!errorCount) {
            this.$1a_0 = null;
            closeWindow();
        }
        else {
            this.$I_0 = 'complete';
            this.updateProgressBar(true, this.$8_0.length);
            this.hideProgressBar();
            this.setEnableButtonStatus(true, false);
            this.showMessageAndTitles(null, null, ActivityFeeds.Resources.ActivityFeedsUI.enableDisablePostToYammerCompletedWithErrors);
        }
    },
    
    hideProgressBar: function ActivityFeeds_UI_BulkActionService$hideProgressBar() {
        var $v_0 = $get('divProgress');
        $v_0.style.display = 'none';
        var $v_1 = $get('divMain');
        $v_1.style.display = 'block';
    },
    
    $37_0: function ActivityFeeds_UI_BulkActionService$$37_0() {
        var $$t_2 = this;
        $P_CRM('#butBegin').removeAttr('onclick').unbind('click').bind('click', function($p1_0) {
            $$t_2.onClickOK();
        });
        var $$t_3 = this;
        $P_CRM('#cmdDialogCancel').removeAttr('onclick').unbind('click').bind('click', function($p1_0) {
            $$t_3.onClickCancel();
        });
    }
}


ActivityFeeds.UI.Constants = function ActivityFeeds_UI_Constants() {
}
ActivityFeeds.UI.Constants.get_firstRunArrowRtlImageUrl = function ActivityFeeds_UI_Constants$get_firstRunArrowRtlImageUrl() {
    return ActivityFeeds.UI.Constants.$1I;
}


function dispatchWallCommand($p0, $p1, $p2) {
    var $v_0 = ($P_CRM($p0)).closest(String.format('.{0}, .{1}', 'wall', 'recordWall')).first().parents('*').first();
    var $v_1 = $find($v_0.get(0).id);
    $v_1.$1o_3($p1, $p2);
}


ActivityFeeds.UI.DefaultFilterStateTracker = function ActivityFeeds_UI_DefaultFilterStateTracker() {
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_sysDefaultPostSourceFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$get_sysDefaultPostSourceFilter() {
    return (window.YAMMER_IS_CONFIGURED_FOR_ORG) ? 2 : 0;
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultViewFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$get_savedDefaultViewFilter() {
    if (IsNull(ActivityFeeds.UI.DefaultFilterStateTracker.$O)) {
        ActivityFeeds.UI.DefaultFilterStateTracker.$O = new Wall.Service.ObjectModel.WallFilter();
        ActivityFeeds.UI.DefaultFilterStateTracker.$O.set_context('01c866a5-4f14-48eb-a03f-d8ab0bfc50f7');
        ActivityFeeds.UI.DefaultFilterStateTracker.$O.set_filterType('ViewFilter');
    }
    return ActivityFeeds.UI.DefaultFilterStateTracker.$O;
}
ActivityFeeds.UI.DefaultFilterStateTracker.set_savedDefaultViewFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$set_savedDefaultViewFilter($p0) {
    ActivityFeeds.UI.DefaultFilterStateTracker.$O = $p0;
    return $p0;
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultPostSourceFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$get_savedDefaultPostSourceFilter() {
    if (IsNull(ActivityFeeds.UI.DefaultFilterStateTracker.$N)) {
        ActivityFeeds.UI.DefaultFilterStateTracker.$N = new Wall.Service.ObjectModel.WallFilter();
        ActivityFeeds.UI.DefaultFilterStateTracker.$N.set_context(ActivityFeeds.UI.DefaultFilterStateTracker.get_sysDefaultPostSourceFilter());
        ActivityFeeds.UI.DefaultFilterStateTracker.$N.set_filterType('PostSourceFilter');
    }
    return ActivityFeeds.UI.DefaultFilterStateTracker.$N;
}
ActivityFeeds.UI.DefaultFilterStateTracker.set_savedDefaultPostSourceFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$set_savedDefaultPostSourceFilter($p0) {
    ActivityFeeds.UI.DefaultFilterStateTracker.$N = $p0;
    return $p0;
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_$s = function ActivityFeeds_UI_DefaultFilterStateTracker$get_$s() {
    if (!ActivityFeeds.UI.DefaultFilterStateTracker.$C) {
        ActivityFeeds.UI.DefaultFilterStateTracker.$C = $P_CRM('.setDefaultLink');
    }
    return ActivityFeeds.UI.DefaultFilterStateTracker.$C;
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultFilterLinkState = function ActivityFeeds_UI_DefaultFilterStateTracker$get_defaultFilterLinkState() {
    if (!(('data') in ActivityFeeds.UI.DefaultFilterStateTracker.get_$s().data())) {
        return 0;
    }
    return ActivityFeeds.UI.DefaultFilterStateTracker.get_$s().data()['data'];
}
ActivityFeeds.UI.DefaultFilterStateTracker.set_defaultFilterLinkState = function ActivityFeeds_UI_DefaultFilterStateTracker$set_defaultFilterLinkState($p0) {
    ActivityFeeds.UI.DefaultFilterStateTracker.get_$s().data('data', $p0);
    switch ($p0) {
        case 0:
            ActivityFeeds.UI.DefaultFilterStateTracker.get_$s().attr('title', ActivityFeeds.Resources.ActivityFeedsUI.defaultFilterLinkSystemDefaultStateToolTip);
            ActivityFeeds.UI.DefaultFilterStateTracker.$C.addClass('active');
            break;
        case 1:
            ActivityFeeds.UI.DefaultFilterStateTracker.get_$s().attr('title', ActivityFeeds.Resources.ActivityFeedsUI.defaultFilterLinkDefaultSetToolTip);
            ActivityFeeds.UI.DefaultFilterStateTracker.$C.addClass('active');
            break;
        case 2:
            ActivityFeeds.UI.DefaultFilterStateTracker.get_$s().attr('title', ActivityFeeds.Resources.ActivityFeedsUI.defaultFilterLinkDefaultNotSetToolTip);
            ActivityFeeds.UI.DefaultFilterStateTracker.$C.removeClass('active');
            break;
    }
    return $p0;
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultPostSourceFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$get_defaultPostSourceFilter() {
    if (ActivityFeeds.UI.DefaultFilterStateTracker.$U && (('PostSourceFilter') in ActivityFeeds.UI.DefaultFilterStateTracker.$U)) {
        var $v_0 = _Array.filter(Wall.Interfaces.IWallFilter, ActivityFeeds.UI.DefaultFilterStateTracker.$U['PostSourceFilter'], function($p1_0) {
            return (($p1_0).get_context()) === ActivityFeeds.UI.DefaultFilterStateTracker.get_sysDefaultPostSourceFilter();
        });
        return ($v_0.length > 0) ? $v_0[0] : null;
    }
    return null;
}
ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$get_defaultViewFilter() {
    if (ActivityFeeds.UI.DefaultFilterStateTracker.$U && (('ViewFilter') in ActivityFeeds.UI.DefaultFilterStateTracker.$U)) {
        var $v_0 = ActivityFeeds.UI.DefaultFilterStateTracker.$U['ViewFilter'];
        for (var $v_1 = 0; $v_1 < $v_0.length; $v_1++) {
            var $v_2 = $v_0[$v_1];
            var $v_3 = _Array.filter(Wall.Interfaces.IWallFilter, $v_2.get_subFilters(), function($p1_0) {
                return (($p1_0).get_context()) === '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7';
            });
            if ($v_3.length > 0) {
                return $v_3[0];
            }
        }
    }
    return null;
}
ActivityFeeds.UI.DefaultFilterStateTracker.cacheLoadedFilters = function ActivityFeeds_UI_DefaultFilterStateTracker$cacheLoadedFilters($p0) {
    if ($p0 && $p0.length > 0) {
        ActivityFeeds.UI.DefaultFilterStateTracker.$U[$p0[0].get_filterType()] = $p0;
    }
}
ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState = function ActivityFeeds_UI_DefaultFilterStateTracker$updateDefaultFilterLinkState($p0) {
    var $v_0 = $p0.getSelectedWallFilter('ViewFilter');
    var $v_1 = $p0.getSelectedWallFilter('PostSourceFilter');
    if ($v_0 && $v_1 && Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual(ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultViewFilter().get_context(), $v_0.get_context()) && ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultPostSourceFilter().get_context() === $v_1.get_context()) {
        if (Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual(ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultViewFilter().get_context(), '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7') && ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultPostSourceFilter().get_context() === ActivityFeeds.UI.DefaultFilterStateTracker.get_sysDefaultPostSourceFilter()) {
            ActivityFeeds.UI.DefaultFilterStateTracker.set_defaultFilterLinkState(0);
        }
        else {
            ActivityFeeds.UI.DefaultFilterStateTracker.set_defaultFilterLinkState(1);
        }
    }
    else {
        ActivityFeeds.UI.DefaultFilterStateTracker.set_defaultFilterLinkState(2);
    }
}
ActivityFeeds.UI.DefaultFilterStateTracker.setDefaultFilter = function ActivityFeeds_UI_DefaultFilterStateTracker$setDefaultFilter($p0, $p1) {
    var $v_0 = $p0.getSelectedWallFilter('ViewFilter');
    var $v_1 = $p0.getSelectedWallFilter('PostSourceFilter');
    if (Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual(ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultViewFilter().get_context(), $v_0.get_context()) && ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultPostSourceFilter().get_context() === $v_1.get_context()) {
        return;
    }
    $p0.setDefaultFilter($v_0, function($p1_0) {
        if ($p1_0.get_isSucceeded()) {
            if (!$v_0) {
                ActivityFeeds.UI.DefaultFilterStateTracker.$O = new Wall.Service.ObjectModel.WallFilter();
                ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultViewFilter().set_context('01c866a5-4f14-48eb-a03f-d8ab0bfc50f7');
                ActivityFeeds.UI.DefaultFilterStateTracker.$N = new Wall.Service.ObjectModel.WallFilter();
                ActivityFeeds.UI.DefaultFilterStateTracker.get_savedDefaultPostSourceFilter().set_context(ActivityFeeds.UI.DefaultFilterStateTracker.get_sysDefaultPostSourceFilter());
            }
            else {
                ActivityFeeds.UI.DefaultFilterStateTracker.$O = $v_0;
                ActivityFeeds.UI.DefaultFilterStateTracker.$N = $v_1;
            }
            ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState($p0);
        }
        $p1($p1_0);
    });
}
ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterText = function ActivityFeeds_UI_DefaultFilterStateTracker$setViewFilterText($p0) {
    $P_CRM('.viewFiltersInitiator').html(Sales.Common.CrmSoapServiceProxy.Utils.EncodingUtils.htmlEncode($p0.get_text())).attr('title', $p0.get_toolTip()).attr('SelectedViewId', $p0.get_context());
}
ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterFocus = function ActivityFeeds_UI_DefaultFilterStateTracker$setViewFilterFocus($p0) {
    $p0.find('.viewFiltersInitiator').focus();
}
ActivityFeeds.UI.DefaultFilterStateTracker.setPostSourceFilterFocus = function ActivityFeeds_UI_DefaultFilterStateTracker$setPostSourceFilterFocus($p0, $p1) {
    $p0.find('#postsourcefilteraction_' + $p1).focus();
}


ActivityFeeds.UI.KeyboardNavigationController = function ActivityFeeds_UI_KeyboardNavigationController(firstElement, lastElement) {
    this.$$d_$2o_0 = Function.createDelegate(this, this.$2o_0);
    this.$$d_$2n_0 = Function.createDelegate(this, this.$2n_0);
    this.$l_0 = firstElement;
    this.$13_0 = lastElement;
    this.start();
    this.$l_0.focus();
}
ActivityFeeds.UI.KeyboardNavigationController.prototype = {
    $l_0: null,
    $13_0: null,
    
    start: function ActivityFeeds_UI_KeyboardNavigationController$start() {
        this.$l_0.keydown(this.$$d_$2n_0);
        this.$13_0.keydown(this.$$d_$2o_0);
    },
    
    stop: function ActivityFeeds_UI_KeyboardNavigationController$stop() {
        this.$13_0.unbind('keydown', this.$$d_$2o_0);
        this.$l_0.unbind('keydown', this.$$d_$2n_0);
    },
    
    $2n_0: function ActivityFeeds_UI_KeyboardNavigationController$$2n_0($p0) {
        if (Wall.Control.Utils.jQueryEventHelper.onlyTabAndShiftKeysArePressed($p0)) {
            this.$13_0.focus();
            $p0.preventDefault();
        }
    },
    
    $2o_0: function ActivityFeeds_UI_KeyboardNavigationController$$2o_0($p0) {
        if (Wall.Control.Utils.jQueryEventHelper.onlyTabKeyIsPressed($p0)) {
            this.$l_0.focus();
            $p0.preventDefault();
        }
    }
}


ActivityFeeds.UI.PostToYammerService = function ActivityFeeds_UI_PostToYammerService($sn_arguments) {
    ActivityFeeds.UI.PostToYammerService.initializeBase(this, [ $sn_arguments ]);
    this.$J_1 = 0;
    this.$10_1 = 0;
    this.$1D_1 = new CrmSoapServiceProxy.CrmSoapService(this.$R_0);
}
ActivityFeeds.UI.PostToYammerService.prototype = {
    $J_1: 0,
    $10_1: 0,
    $1h_1: 0,
    $1D_1: null,
    
    setupDialogTexts: function ActivityFeeds_UI_PostToYammerService$setupDialogTexts() {
        if (this.$h_0.toLowerCase() === 'enable') {
            document.title = ActivityFeeds.Resources.ActivityFeedsUI.confirmEnablePostToYammerWindowTitle;
            this.showMessageAndTitles(ActivityFeeds.Resources.ActivityFeedsUI.confirmEnablePostToYammerTitleBold, String.format(ActivityFeeds.Resources.ActivityFeedsUI.confirmEnablePostToYammerTitle, this.$8_0.length), ActivityFeeds.Resources.ActivityFeedsUI.confirmEnablePostToYammerMessage);
        }
        else {
            document.title = ActivityFeeds.Resources.ActivityFeedsUI.confirmDisablePostToYammerWindowTitle;
            this.showMessageAndTitles(ActivityFeeds.Resources.ActivityFeedsUI.confirmDisablePostToYammerTitleBold, String.format(ActivityFeeds.Resources.ActivityFeedsUI.confirmDisablePostToYammerTitle, this.$8_0.length), ActivityFeeds.Resources.ActivityFeedsUI.confirmDisablePostToYammerMessage);
        }
    },
    
    performAction: function ActivityFeeds_UI_PostToYammerService$performAction() {
        this.showProgress();
        if (this.$h_0.toLowerCase() === 'enable'.toLowerCase()) {
            this.$1f_1();
        }
        else if (this.$h_0.toLowerCase() === 'disable'.toLowerCase()) {
            this.$1e_1();
        }
    },
    
    actionFailCallBack: function ActivityFeeds_UI_PostToYammerService$actionFailCallBack(errorResponse) {
        this.$10_1++;
        return ActivityFeeds.UI.BulkActionService.prototype.actionFailCallBack.call(this, errorResponse);
    },
    
    $1f_1: function ActivityFeeds_UI_PostToYammerService$$1f_1() {
        var $v_0 = String.format(ActivityFeeds.Resources.ActivityFeedsUI.confirmCancelFollowUnfollowOperation, this.$8_0.length - this.$J_1);
        if (this.handleCancellation($v_0)) {
            return;
        }
        this.updateProgressBar(false, this.$J_1);
        if (this.$J_1 >= this.$8_0.length) {
            this.operationComplete(this.$10_1);
            return;
        }
        var $v_1 = this.$8_0[this.$J_1++];
        var $v_2 = new CrmSoapServiceProxy.ObjectModel.PostRuleConfig();
        $v_2.set_id($v_1.id);
        $v_2.set_postToYammer(true);
        var $$t_5 = this, $$t_6 = this;
        this.$1D_1.update($v_2).then(function($p1_0) {
            $$t_5.$1h_1++;
            $$t_5.$1f_1();
        }, function($p1_0) {
            if ($$t_6.actionFailCallBack($p1_0)) {
                $$t_6.$1f_1();
            }
            else {
                $$t_6.hideProgressBar();
                $$t_6.$I_0 = 'complete';
                $$t_6.setEnableButtonStatus(false, true);
            }
        });
    },
    
    $1e_1: function ActivityFeeds_UI_PostToYammerService$$1e_1() {
        var $v_0 = String.format(ActivityFeeds.Resources.ActivityFeedsUI.confirmCancelFollowUnfollowOperation, this.$8_0.length - this.$J_1);
        if (this.handleCancellation($v_0)) {
            return;
        }
        this.updateProgressBar(false, this.$J_1);
        if (this.$J_1 >= this.$8_0.length) {
            this.operationComplete(this.$10_1);
            return;
        }
        var $v_1 = this.$8_0[this.$J_1++];
        var $v_2 = new CrmSoapServiceProxy.ObjectModel.PostRuleConfig();
        $v_2.set_id($v_1.id);
        $v_2.set_postToYammer(false);
        var $$t_5 = this, $$t_6 = this;
        this.$1D_1.update($v_2).then(function($p1_0) {
            $$t_5.$1h_1++;
            $$t_5.$1e_1();
        }, function($p1_0) {
            if ($$t_6.actionFailCallBack($p1_0)) {
                $$t_6.$1e_1();
            }
            else {
                $$t_6.hideProgressBar();
                $$t_6.$I_0 = 'complete';
                $$t_6.setEnableButtonStatus(false, true);
            }
        });
    }
}


ActivityFeeds.UI.ProfileImageUpdater = function ActivityFeeds_UI_ProfileImageUpdater() {
    this.$$d_$35_0 = Function.createDelegate(this, this.$35_0);
    this.$$d_$28_0 = Function.createDelegate(this, this.$28_0);
    this.$$d_$2j_0 = Function.createDelegate(this, this.$2j_0);
    this.$$d_$2l_0 = Function.createDelegate(this, this.$2l_0);
    this.$$d_$2k_0 = Function.createDelegate(this, this.$2k_0);
    this.$$d_$2i_0 = Function.createDelegate(this, this.$2i_0);
    this.$$d_$2h_0 = Function.createDelegate(this, this.$2h_0);
    this.$$d_$2m_0 = Function.createDelegate(this, this.$2m_0);
    var $v_0 = GetGlobalContext();
    this.$1P_0 = new CrmSoapServiceProxy.ProfileService($v_0);
    this.$X_0 = {};
    this.$x_0 = Sales.Common.CrmSoapServiceProxy.Utils.Utils.removeBeginEndBracket($v_0.getUserId()).toLowerCase();
}
ActivityFeeds.UI.ProfileImageUpdater.get_instance = function ActivityFeeds_UI_ProfileImageUpdater$get_instance() {
    if (IsNull(ActivityFeeds.UI.ProfileImageUpdater.$S)) {
        ActivityFeeds.UI.ProfileImageUpdater.$S = new ActivityFeeds.UI.ProfileImageUpdater();
    }
    return ActivityFeeds.UI.ProfileImageUpdater.$S;
}
ActivityFeeds.UI.ProfileImageUpdater.$1r = function ActivityFeeds_UI_ProfileImageUpdater$$1r($p0) {
    var $v_0 = new (Sales.Common.Framework.List$1.$$(String))();
    Array.forEach($p0, function($p1_0) {
        var $v_1 = $p1_0;
        $v_0.add($v_1.get_createdBy().get_id());
    });
    return $v_0;
}
ActivityFeeds.UI.ProfileImageUpdater.prototype = {
    $X_0: null,
    $1P_0: null,
    $x_0: null,
    $q_0: null,
    
    registerProfilePage: function ActivityFeeds_UI_ProfileImageUpdater$registerProfilePage(profilePage) {
        this.$q_0 = profilePage;
        this.$q_0.add_profileImageChanged(this.$$d_$2m_0);
    },
    
    registerWallPage: function ActivityFeeds_UI_ProfileImageUpdater$registerWallPage(wallPage) {
        var $v_0 = wallPage.$0_0;
        $v_0.add_commentCreated(this.$$d_$2h_0);
        $v_0.add_commentsRefreshed(this.$$d_$2i_0);
        $v_0.add_postCreated(this.$$d_$2k_0);
        $v_0.add_postsRefreshed(this.$$d_$2l_0);
        $v_0.add_likesRetrieved(this.$$d_$2j_0);
    },
    
    imageUploadCallback: function ActivityFeeds_UI_ProfileImageUpdater$imageUploadCallback(imageSource) {
        if (!_String.isNullOrEmpty(imageSource)) {
            var $v_0 = CrmSoapServiceProxy.ObjectModel.ProfileImage.fromSourceAndUserID(imageSource, this.$x_0);
            var $v_1 = new (Sales.Common.Framework.List$1.$$(CrmSoapServiceProxy.ObjectModel.ProfileImage))();
            $v_1.add($v_0);
            this.$28_0($v_1.toArray());
        }
    },
    
    $2m_0: function ActivityFeeds_UI_ProfileImageUpdater$$2m_0($p0, $p1) {
        if (IsNull($p1.$u_1) || $p1.$u_1 === '') {
            return;
        }
        var $v_0 = new (Sales.Common.Framework.List$1.$$(String))();
        $v_0.add($p1.$u_1);
        this.$1P_0.getProfileImagesForMultipleUsers($v_0, this.$$d_$28_0, null);
    },
    
    $2h_0: function ActivityFeeds_UI_ProfileImageUpdater$$2h_0($p0, $p1) {
        var $v_0 = $p1.get_comment().get_createdBy().get_id();
        var $v_1 = new (Sales.Common.Framework.List$1.$$(String))();
        $v_1.add($v_0);
        this.$14_0($v_1);
    },
    
    $2i_0: function ActivityFeeds_UI_ProfileImageUpdater$$2i_0($p0, $p1) {
        var $v_0 = ActivityFeeds.UI.ProfileImageUpdater.$1r($p1.get_comments());
        this.$14_0($v_0);
    },
    
    $2k_0: function ActivityFeeds_UI_ProfileImageUpdater$$2k_0($p0, $p1) {
        var $v_0 = $p1.get_post().get_createdBy().get_id();
        var $v_1 = new (Sales.Common.Framework.List$1.$$(String))();
        $v_1.add($v_0);
        this.$14_0($v_1);
    },
    
    $2l_0: function ActivityFeeds_UI_ProfileImageUpdater$$2l_0($p0, $p1) {
        if (!IsNull(this.$q_0)) {
            if (Wall.Control.Utils.Browser.getCurrentBrowser().get_isIE8OrLower()) {
                var $$t_5 = this;
                window.setTimeout(function() {
                    $$t_5.$q_0.onProfileImageChanged();
                }, 5);
            }
            else {
                this.$q_0.onProfileImageChanged();
            }
        }
        var $v_0 = new (Sales.Common.Framework.List$1.$$(String))();
        var $$t_6 = this;
        Array.forEach($p1.get_posts(), function($p1_0) {
            var $v_1 = $p1_0;
            $v_0.add($v_1.get_createdBy().get_id());
            $v_0.addRange(ActivityFeeds.UI.ProfileImageUpdater.$1r($v_1.get_comments()).toArray());
        });
        this.$14_0($v_0);
    },
    
    $2j_0: function ActivityFeeds_UI_ProfileImageUpdater$$2j_0($p0, $p1) {
        var $v_0 = new (Sales.Common.Framework.List$1.$$(String))();
        var $$t_5 = this;
        Array.forEach($p1.get_users(), function($p1_0) {
            var $v_1 = $p1_0;
            $v_0.add($v_1.get_reference().get_id());
        });
        this.$14_0($v_0);
    },
    
    $28_0: function ActivityFeeds_UI_ProfileImageUpdater$$28_0($p0) {
        if (IsNull($p0)) {
            throw Error.create('Argument \'profileImages\' cannot be null');
        }
        var $v_0;
        if (!$p0.length) {
            $v_0 = CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultImage();
        }
        else {
            $v_0 = $p0[0];
        }
        this.$X_0[$v_0.get_userId()] = $v_0;
        var $v_1 = $P_CRM('#userImage');
        $v_1.attr('src', $v_0.get_uri());
        var $v_2 = $P_CRM('div.userThumbnail img.' + this.$x_0);
        if ($v_0 === CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultImage()) {
            $v_2.attr('src', CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultImageSmall().get_uri());
        }
        else {
            $v_2.attr('src', $v_0.get_uri());
        }
    },
    
    $14_0: function ActivityFeeds_UI_ProfileImageUpdater$$14_0($p0) {
        var $v_0 = _Array.removeDuplicates(String, $p0.toArray());
        var $v_1 = new (Sales.Common.Framework.List$1.$$(String))();
        var $$t_5 = this;
        Array.forEach($v_0, function($p1_0) {
            var $v_2 = $p1_0;
            if ($v_2 !== $$t_5.$x_0 && (($v_2) in $$t_5.$X_0)) {
                if ($$t_5.$X_0[$v_2] !== CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultImage()) {
                    $$t_5.$23_0($v_2);
                }
            }
            else {
                $$t_5.$X_0[$v_2] = CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultImage();
                $v_1.add($v_2);
            }
        });
        if ($v_1.get_count() > 0) {
            this.$1P_0.getProfileImagesForMultipleUsers($v_1, this.$$d_$35_0, null);
        }
    },
    
    $35_0: function ActivityFeeds_UI_ProfileImageUpdater$$35_0($p0) {
        var $v_0 = {};
        var $$t_5 = this;
        Array.forEach($p0, function($p1_0) {
            var $v_1 = $p1_0;
            if (!(($v_1.get_userId()) in $v_0)) {
                var $v_2 = $v_1.get_userId();
                $$t_5.$X_0[$v_2] = $v_1;
                $$t_5.$23_0($v_2);
                $v_0[$v_1.get_userId()] = $v_1;
            }
        });
    },
    
    $23_0: function ActivityFeeds_UI_ProfileImageUpdater$$23_0($p0) {
        var $v_0 = (this.$X_0[$p0]).get_uri();
        var $v_1 = $P_CRM('div.userThumbnail img.' + $p0);
        $v_1.attr('src', $v_0);
    }
}


ActivityFeeds.UI.UserRecordProfilePage = function ActivityFeeds_UI_UserRecordProfilePage() {
    ActivityFeeds.UI.UserRecordProfilePage.initializeBase(this);
    this.queryString = new ActivityFeeds.UI.WallPageQueryString(window.location);
    this.$r_1 = Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference(this.queryString.get_id(), this.queryString.get_typeName());
    if (this.$r_1.logicalName !== 'systemuser') {
        $P_CRM('#userProfile').remove();
    }
    else {
        this.onProfileImageChanged();
        this.createLinkToEditProfileImage();
    }
}
ActivityFeeds.UI.UserRecordProfilePage.prototype = {
    queryString: null,
    $r_1: null,
    
    onProfileImageChanged: function ActivityFeeds_UI_UserRecordProfilePage$onProfileImageChanged() {
        if (this.$r_1.logicalName === 'systemuser') {
            var $v_0 = this.$r_1.id;
            this.notifyProfileImageChanged($v_0);
        }
    },
    
    shouldHaveLinkToEditProfileImage: function ActivityFeeds_UI_UserRecordProfilePage$shouldHaveLinkToEditProfileImage() {
        return Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual(this.userId, this.$r_1.id) && ActivityFeeds.UI.ProfilePage.prototype.shouldHaveLinkToEditProfileImage.call(this);
    }
}


ActivityFeeds.UI.UserFollowingProfilePage = function ActivityFeeds_UI_UserFollowingProfilePage() {
    ActivityFeeds.UI.UserFollowingProfilePage.initializeBase(this);
    this.createLinkToEditProfileImage();
}
ActivityFeeds.UI.UserFollowingProfilePage.prototype = {
    
    onProfileImageChanged: function ActivityFeeds_UI_UserFollowingProfilePage$onProfileImageChanged() {
        this.notifyProfileImageChanged(this.userId);
    }
}


function loadScript(url, element, usePreFetch) {
    var $v_0 = new ActivityFeeds.UI.Loaders.ScriptLoader();
    $v_0.loadContent(url, element, usePreFetch);
}
function loadStyle(url, element, usePreFetch) {
    var $v_0 = new ActivityFeeds.UI.Loaders.StyleLoader();
    $v_0.loadContent(url, element, usePreFetch);
}
function loadLocalizedScript(url, element, GlobalContext, usePrefetch) {
    if (IsNull(usePrefetch)) {
        usePrefetch = true;
    }
    var $v_0 = window.top.VERSION_STAMP;
    var $v_1 = String.format('{0}?ver={1}', getLocalizedFileName(url, GlobalContext.getUserLcid(), GlobalContext.getOrgLcid()), $v_0);
    loadScript($v_1, element, usePrefetch);
}
function loadLocalizedStyle(url, element, GlobalContext, usePrefetch) {
    if (IsNull(usePrefetch)) {
        usePrefetch = true;
    }
    loadStyle(getLocalizedFileName(url, GlobalContext.getUserLcid(), GlobalContext.getOrgLcid()), element, usePrefetch);
}
function loadContent(url, successCallback) {
    var $v_0 = new Sales.Common.Framework.Loaders.ContentLoader();
    $v_0.loadContent(url, 'html', successCallback);
}
function applyRtlStyle() {
    if (isRTL()) {
        var $v_0 = $P_CRM(document.body);
        if (!$v_0.hasClass('rtl')) {
            $v_0.addClass('rtl');
        }
        if (GetGlobalContext().getUserLcid() === 1037 && !$v_0.hasClass('noFlipQ')) {
            $v_0.addClass('noFlipQ');
        }
    }
}
function addBrowserTweekStyles() {
    var $v_0 = Wall.Control.Utils.Browser.getCurrentBrowser();
    var $v_1 = $P_CRM(document.body);
    if ($v_0.get_agent() === 1 && $v_0.get_version() === 7 && $v_0.get_documentMode() <= 7) {
        if (!$v_1.hasClass('ie7')) {
            $v_1.addClass('ie7');
        }
    }
    if ($v_0.get_isMobileSafari() && $v_0.get_deviceMajorVersion() === 7) {
        if (!$v_1.hasClass('os7')) {
            $v_1.addClass('os7');
        }
    }
}
function applyHighContrastStyle(imageUrl) {
    if (detectHighContrastMode(imageUrl)) {
        var $v_0 = $P_CRM(document.body);
        if (!$v_0.hasClass('highContrast')) {
            $v_0.addClass('highContrast');
        }
    }
}
function generateFwdLink(linkId) {
    var $v_0 = GetGlobalContext().getUserLcid();
    var $v_1 = '0x' + $v_0.toString(16);
    return String.format('http://go.microsoft.com/fwlink/?LinkID={0}&clcid={1}', linkId, $v_1);
}
function insertFirstRunLinks() {
    $P_CRM('a.firstRunLink').each(function($p1_0, $p1_1) {
        var $v_0 = parseInt($p1_1.getAttribute('fwdlinkid'));
        var $v_1 = generateFwdLink($v_0);
        $p1_1.setAttribute('href', $v_1);
    });
}
function addTearOffStyle() {
    var $v_0 = '_hc';
    var $v_1 = parseQueryString(window.parent.location);
    if ((($v_0) in $v_1) && ($v_1[$v_0] === 'true' || $v_1[$v_0] === '1')) {
        var $v_2 = $P_CRM(document.body);
        if (!$v_2.hasClass('tornOffPage')) {
            $v_2.addClass('tornOffPage');
        }
    }
}
function addBrowserSpecificStyle() {
    var $v_0 = Wall.Control.Utils.Browser.getCurrentBrowser();
    var $v_1 = $v_0.get_name().toLowerCase();
    var $v_2 = $P_CRM(document.body);
    if (!$v_2.hasClass($v_1)) {
        $v_2.addClass($v_1);
    }
    if ($P_CRM.browser.webkit) {
        if (!$v_2.hasClass('webkit')) {
            $v_2.addClass('webkit');
        }
    }
    if ($v_0.get_isMobile()) {
        if (!$v_2.hasClass('mobile')) {
            $v_2.addClass('mobile');
        }
    }
    if ($v_0.get_isMobileSafari()) {
        window.UseTabletExperience = true;
    }
}
function ActivityFeedsUIDummy() {
    return true;
}


function reverseIfIE7andRtl(objects) {
    if (IsNull(objects) || !isRTL() || !(Wall.Control.Utils.Browser.getCurrentBrowser().get_agent() === 1 && Wall.Control.Utils.Browser.getCurrentBrowser().get_version() === 7)) {
        return objects;
    }
    (objects).reverse();
    return objects;
}
function getWallActions(wall, actionType, context) {
    if (_Type.hasMethod(wall, 'getWallActions')) {
        return wall.getWallActions(actionType, context);
    }
    else if (_Type.hasField(wall, 'parent')) {
        wall = wall.parent;
        if (wall) {
            return getWallActions(wall, actionType, context);
        }
    }
    return new Array(0);
}
function formatDate(dateToFormat, formattedDate) {
    return Wall.Control.Utils.DateUtils.formatDateAsReadableString(dateToFormat, formattedDate);
}
function formatLikes(post) {
    var $v_0 = (_String.isNullOrEmpty(post.get_likeId())) ? post.get_likeCounter() : post.get_likeCounter() - 1;
    var $v_1 = String.format('<span class=\'likeCountArea\'>{0}</span>', $v_0);
    var $v_2 = '';
    if (_String.isNullOrEmpty(post.get_likeId()) && $v_0 === 1) {
        $v_2 = ActivityFeeds.Resources.ActivityFeedsUI.onePersonLikes;
    }
    else if (_String.isNullOrEmpty(post.get_likeId()) && $v_0 > 1) {
        $v_2 = ActivityFeeds.Resources.ActivityFeedsUI.multiplePeopleLike;
    }
    else if (!_String.isNullOrEmpty(post.get_likeId()) && $v_0 === 1) {
        $v_2 = ActivityFeeds.Resources.ActivityFeedsUI.youAndAnotherLikes;
    }
    else {
        $v_2 = ActivityFeeds.Resources.ActivityFeedsUI.youAndOthersLike;
    }
    return String.format($v_2, $v_1);
}
function formatOnRecordWallSentence(entityReference) {
    return String.format(ActivityFeeds.Resources.ActivityFeedsUI.onRecordWallSentence, formatNameWithWindowOpenLink(entityReference));
}
function formatProfileImageWithWindowOpenLink(entityReference) {
    if (IsNull(entityReference)) {
        return '';
    }
    var $v_0 = String.format('<img class=\"{0}\" alt=\"Avatar\" src=\"{1}\" />', Sales.Common.CrmSoapServiceProxy.Utils.EncodingUtils.htmlAttributeEncode(entityReference.get_id()), CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultProfileSmallImageUrl());
    return createWindowOpenLink(entityReference, $v_0, { tabindex: '-1' });
}
function formatProfileImageForCurrentUserWithWindowOpenLink() {
    var $v_0 = GetGlobalContext();
    var $v_1 = Sales.Common.CrmSoapServiceProxy.Utils.Utils.removeBeginEndBracket($v_0.getUserId().toLowerCase());
    var $v_2 = new Wall.Service.ObjectModel.EntityReference();
    $v_2.set_id($v_1);
    $v_2.set_logicalName('systemuser');
    return formatProfileImageWithWindowOpenLink($v_2);
}
function getWallCellWidth() {
    var $v_0 = ((document.body.clientWidth > 883) ? 649 : document.body.clientWidth - 234);
    if ($v_0 < 470) {
        $v_0 = 470;
    }
    return $v_0 + 'px';
}
function getWallCellWidthNoUserProfile() {
    var $v_0 = ((document.body.clientWidth > 883) ? 649 : document.body.clientWidth);
    if ($v_0 < 470) {
        $v_0 = 470;
    }
    return $v_0 + 'px';
}
function applyDocumentStyles() {
    applyRtlStyle();
    addBrowserTweekStyles();
    applyHighContrastStyle(ActivityFeeds.UI.Constants.$1I);
    addTearOffStyle();
    addBrowserSpecificStyle();
    ActivityFeeds.UI.YammerHelper.addYammerCssClassIfConfigured();
}
function applyHtmlOverflowHiddenHackForFirefox() {
    if (Wall.Control.Utils.Browser.getCurrentBrowser().get_agent() === 2) {
        $P_CRM('html').css('overflow', 'hidden');
    }
}
function openTearOffWall() {
    var $v_0 = 'TearWall';
    var $v_1 = new ActivityFeeds.UI.WallPageQueryString(window.location);
    if (!$v_1.$L_0) {
        var $v_2 = '/main.aspx?page=Workplace&area=nav_personalwall&_hc=true';
        var $v_3 = GetGlobalContext().getClientUrl() + $v_2;
        var $v_4;
        var $v_5 = GetGlobalContext();
        if (!IsNull($v_5) && !IsNull($v_5.getOrgUniqueName())) {
            $v_4 = $v_5.getOrgUniqueName() + $v_0;
        }
        else {
            $v_4 = $v_0;
        }
        var $v_6 = 'location=1,menubar=0,status=0,titlebar=0,toolbar=0,fullscreen=0,width=780,height=600,resizable=1';
        window.open($v_3, $v_4, $v_6);
    }
    else {
    }
}
function useRtlArrowIfNecessary() {
    if (isRTL()) {
        $P_CRM('img#firstRunArrow').attr('src', ActivityFeeds.UI.Constants.$1I);
    }
}


ActivityFeeds.UI.WallCommands = function ActivityFeeds_UI_WallCommands() {
}


ActivityFeeds.UI.LikeParamObject = function ActivityFeeds_UI_LikeParamObject() {
}
ActivityFeeds.UI.LikeParamObject.prototype = {
    PostId: null,
    PageNumber: 0
}


ActivityFeeds.UI.WallCommandDispatcher = function ActivityFeeds_UI_WallCommandDispatcher(wall, wallService) {
    this.$0_0 = wall;
    this.$A_0 = this.$0_0.rootContainer;
    this.$1_0 = wallService;
}
ActivityFeeds.UI.WallCommandDispatcher.$2f = function ActivityFeeds_UI_WallCommandDispatcher$$2f() {
    var $v_0 = GetGlobalContext();
    var $v_1 = Sales.Common.CrmSoapServiceProxy.Utils.Utils.parseGuid($v_0.getUserId());
    var $v_2 = $v_0.getClientUrl();
    Wall.Control.Utils.WindowUtils.openWindow(String.format('{1}/main.aspx?etn=msdyn_wallsavedqueryusersettings&pagetype=entitylist&viewid=%7bA32881B6-300B-E111-A619-00155D9D3C11%7d&extraqs=?type%3dmsdyn_wallsavedqueryusersettings%26oid%3d{0}%26relName%3dmsdyn_systemuser_wallsavedqueryusersettings_userid%26oetn%3dsystemuser', Sales.Common.CrmSoapServiceProxy.Utils.EncodingUtils.urlEncode($v_1), $v_2), '_blank', 780, 600, null);
}
ActivityFeeds.UI.WallCommandDispatcher.$1c = function ActivityFeeds_UI_WallCommandDispatcher$$1c($p0) {
    if (_String.isNullOrEmpty($p0)) {
        return $p0;
    }
    if ($p0.endsWith('\n')) {
        $p0 = _String.remove($p0, $p0.length - 1);
    }
    if ($p0.endsWith('\r')) {
        $p0 = _String.remove($p0, $p0.length - 1);
    }
    return $p0;
}
ActivityFeeds.UI.WallCommandDispatcher.prototype = {
    $A_0: null,
    $0_0: null,
    $1_0: null,
    
    dispatchCommand: function ActivityFeeds_UI_WallCommandDispatcher$dispatchCommand(commandName, parameters) {
        if (_String.isNullOrEmpty(commandName)) {
            throw Error.create('commandName is undefined');
        }
        if (this.$0_0.get_isDisabled()) {
            return;
        }
        commandName = commandName.toLowerCase();
        switch (commandName) {
            case 'post':
                var $v_0 = parameters;
                var $v_1 = $P_CRM($v_0);
                var $v_2 = ActivityFeeds.UI.WallCommandDispatcher.$1c($v_1.getValueWithoutWatermark());
                this.$2x_0($v_2, $v_0);
                break;
            case 'refreshall':
                this.$30_0();
                break;
            case 'showallcomments':
                this.$39_0(parameters);
                break;
            case 'comment':
                var $v_3 = parameters;
                var $v_4 = $v_3.TextBox;
                var $v_5 = ActivityFeeds.UI.WallCommandDispatcher.$1c($v_4.value);
                this.$2w_0($v_3.PostId, $v_4, $v_5);
                break;
            case 'commentaction':
            case 'likeaction':
            case 'retrievelikesaction':
            case 'deleteaction':
            case 'deletecommentaction':
            case 'genericaction':
                var $v_6 = parameters;
                switch (commandName) {
                    case 'commentaction':
                        this.$25_0(($v_6.get_context()).get_postId(), true);
                        Wall.Control.Utils.ScreenReader.say(Wall.Control.Resources.WallControl.typeACommentAndPressTheEnterKey);
                        break;
                    case 'likeaction':
                        this.$3A_0(($v_6.get_context()));
                        break;
                    case 'retrievelikesaction':
                        var $v_7 = parameters;
                        this.$0_0.showLikesFlyout($v_7.PostId);
                        break;
                    case 'deleteaction':
                        this.$0_0.deletePost(($v_6.get_context()).get_postId());
                        break;
                    case 'deletecommentaction':
                        this.$0_0.deleteComment(($v_6.get_context()).get_commentId());
                        break;
                    case 'genericaction':
                        if ($v_6.get_callback()) {
                            $v_6.get_callback()($v_6);
                        }
                        break;
                    default:
                        throw Error.create('invalid commandName');
                }
                break;
            case 'postsourcefilteraction':
                var $v_8 = parameters;
                this.$32_0($v_8);
                break;
            case 'tearoff':
                openTearOffWall();
                break;
            case 'viewsubfilteraction':
            case 'viewfilteraction':
                var $v_9 = (parameters)[0];
                var $v_A = (parameters)[1];
                this.$33_0($v_A, $v_9);
                break;
            case 'setsystemdefaultfiltersaction':
                this.$36_0();
                break;
            case 'setdefaultaction':
                this.$34_0();
                break;
            case 'modifyuserfilters':
                ActivityFeeds.UI.WallCommandDispatcher.$2f();
                break;
            case 'undodeletepost':
                this.$3D_0(parameters);
                break;
            case 'undodeletecomment':
                this.$3C_0(parameters);
                break;
            case 'learnmore':
                this.$2c_0(parameters);
                break;
            default:
                throw Error.create('invalid commandName');
        }
    },
    
    $36_0: function ActivityFeeds_UI_WallCommandDispatcher$$36_0() {
        this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter());
        this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultPostSourceFilter());
        ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
        ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterText(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter());
        this.$1R_0();
        this.$0_0.refreshAll();
        this.$0_0.refreshWallFilter('PostSourceFilter');
    },
    
    $34_0: function ActivityFeeds_UI_WallCommandDispatcher$$34_0() {
        var $$t_1 = this;
        ActivityFeeds.UI.DefaultFilterStateTracker.setDefaultFilter(this.$1_0, function($p1_0) {
            if (!$p1_0.get_isSucceeded()) {
                $$t_1.$2z_0($p1_0.get_errorMessage());
            }
        });
    },
    
    $3C_0: function ActivityFeeds_UI_WallCommandDispatcher$$3C_0($p0) {
        this.$0_0.undoDeleteComment($p0);
    },
    
    $3D_0: function ActivityFeeds_UI_WallCommandDispatcher$$3D_0($p0) {
        this.$0_0.undoDeletePost($p0);
    },
    
    $33_0: function ActivityFeeds_UI_WallCommandDispatcher$$33_0($p0, $p1) {
        var $$t_4 = this;
        var $v_0 = _Array.filter(Wall.Interfaces.IWallFilter, $p1.get_subFilters(), function($p1_0) {
            return Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual(($p1_0).get_context(), $p0);
        })[0];
        this.$1_0.selectWallFilter($v_0);
        ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
        ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterText($v_0);
        this.$1R_0();
        this.$0_0.refreshAll();
        ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterFocus(this.$A_0);
    },
    
    $32_0: function ActivityFeeds_UI_WallCommandDispatcher$$32_0($p0) {
        this.$1_0.selectWallFilter($p0);
        ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
        if (window.IS_ACTIONHUB_ENABLED && !this.$0_0.$6_1 && $p0.get_filterType() === 'PostSourceFilter') {
            if ($p0.get_context() === 3) {
                this.$0_0.setActionHubWallMode(true);
                this.$0_0.refreshActionHubWall();
                this.$0_0.refreshWallFilter('PostSourceFilter');
                ActivityFeeds.UI.DefaultFilterStateTracker.setPostSourceFilterFocus(this.$A_0, $p0.get_context().toString());
                $(parent.$P_CRM('#containerID')).slideUp();
                this.$A_0.find('.filterAndRefreshContainer.secondary, .filterAndRefreshContainer.secondary .viewFiltersInitiatorContainer, .filterAndRefreshContainer.secondary .viewFiltersInitiator').hide();
            }
            else {
                this.$0_0.setActionHubWallMode(false);
                if (window.YAMMER_IS_CONFIGURED_FOR_ORG && $p0.get_context() === 2) {
                    this.$0_0.setWallMode(true);
                    this.$0_0.refreshWallFilter('PostSourceFilter');
                    ActivityFeeds.UI.DefaultFilterStateTracker.setPostSourceFilterFocus(this.$A_0, $p0.get_context().toString());
                    this.$A_0.find('.filterAndRefreshContainer.secondary, .filterAndRefreshContainer.secondary .viewFiltersInitiatorContainer, .filterAndRefreshContainer.secondary .viewFiltersInitiator').hide();
                }
                else {
                    if (window.YAMMER_IS_CONFIGURED_FOR_ORG && $p0.get_context() === 1) {
                        this.$A_0.find('.filterAndRefreshContainer.secondary, .filterAndRefreshContainer.secondary .viewFiltersInitiatorContainer, .filterAndRefreshContainer.secondary .viewFiltersInitiator').show();
                    }
                    this.$1R_0();
                    this.$j_0();
                    this.$0_0.refreshNotes();
                    this.$0_0.refreshWallFilter('PostSourceFilter');
                    ActivityFeeds.UI.DefaultFilterStateTracker.setPostSourceFilterFocus(this.$A_0, $p0.get_context().toString());
                    this.$0_0.setWallMode(false);
                }
                var $v_0 = $(parent.$P_CRM('#containerID'));
                if ($v_0 && $v_0[0].style.display === 'none') {
                    Mscrm.Performance.PerformanceMarkerManager.get_instance().addMarker('Action Card Carousel Refresh in Dashboard',Mscrm.Performance.PerformanceMarkerType.majorEvent);;
                    var $v_1 = $(parent.$P_CRM('#iFrmActionCards'));
                    if ($v_1.attr('src') === 'about:blank') {
                        $v_1.attr('src', $v_1.attr('data-src').toString());
                    }
                    else {
                        $v_1.contents().find('[id ^= card]').filter('.actionhubcontrol').remove();
                        window.ORG_TIMEZONE_OFFSET = window.top.ORG_TIMEZONE_OFFSET;
                        parent.frames['actionCardsCarousel'].Mscrm.ActionHubControl.ActionHubControlWall.setCarouselView(true);
                        parent.frames['actionCardsCarousel'].Mscrm.ActionHubControl.ActionHubControlWall.retrieveActionCards();
                    }
                }
                if (this.$0_0.isShowCarouselView()) {
                    $(parent.$P_CRM('#containerID')).show();
                }
            }
        }
        else {
            this.$0_0.setActionHubWallMode(false);
            if (window.YAMMER_IS_CONFIGURED_FOR_ORG && $p0.get_filterType() === 'PostSourceFilter' && $p0.get_context() === 2) {
                this.$0_0.setWallMode(true);
                this.$0_0.refreshWallFilter('PostSourceFilter');
                ActivityFeeds.UI.DefaultFilterStateTracker.setPostSourceFilterFocus(this.$A_0, $p0.get_context().toString());
                this.$A_0.find('.filterAndRefreshContainer.secondary, .filterAndRefreshContainer.secondary .viewFiltersInitiatorContainer, .filterAndRefreshContainer.secondary .viewFiltersInitiator').hide();
            }
            else {
                if (window.YAMMER_IS_CONFIGURED_FOR_ORG && $p0.get_filterType() === 'PostSourceFilter' && !this.$0_0.$6_1 && $p0.get_context() === 1) {
                    this.$A_0.find('.filterAndRefreshContainer.secondary, .filterAndRefreshContainer.secondary .viewFiltersInitiatorContainer, .filterAndRefreshContainer.secondary .viewFiltersInitiator').show();
                }
                this.$1R_0();
                this.$j_0();
                this.$0_0.refreshAll();
                this.$0_0.refreshWallFilter('PostSourceFilter');
                ActivityFeeds.UI.DefaultFilterStateTracker.setPostSourceFilterFocus(this.$A_0, $p0.get_context().toString());
                this.$0_0.setWallMode(false);
            }
        }
    },
    
    $3A_0: function ActivityFeeds_UI_WallCommandDispatcher$$3A_0($p0) {
        if ($p0.get_likeId()) {
            this.$0_0.deleteLike($p0);
        }
        else {
            this.$0_0.likePost($p0);
        }
    },
    
    $2w_0: function ActivityFeeds_UI_WallCommandDispatcher$$2w_0($p0, $p1, $p2) {
        if (!_String.isNullOrEmpty($p2) && !_String.isNullOrEmpty($p2.trim())) {
            var $v_0 = $P_CRM($p1);
            var $v_1 = ActivityFeeds.UI.WallCommandDispatcher.$1c($v_0.getReplacedMentionTags());
            this.$0_0.postComment($p0, $v_1);
        }
        else {
            $p1.value = '';
        }
    },
    
    $39_0: function ActivityFeeds_UI_WallCommandDispatcher$$39_0($p0) {
        this.$0_0.refreshComments($p0, -1, _DateTime.empty);
        this.$25_0($p0, false);
    },
    
    $30_0: function ActivityFeeds_UI_WallCommandDispatcher$$30_0() {
        this.$j_0();
        this.$0_0.refreshAll();
    },
    
    $2x_0: function ActivityFeeds_UI_WallCommandDispatcher$$2x_0($p0, $p1) {
        if (!_String.isNullOrEmpty($p0) && !_String.isNullOrEmpty($p0.trim())) {
            var $v_0 = $P_CRM($p1);
            $p0 = $v_0.getReplacedMentionTags();
            var $v_1 = this.$1_0.getSelectedWallFilter('PostSourceFilter');
            if (!(this.$1_0).get_wallType()) {
                var $v_2 = this.$1_0.getSelectedWallFilter('ViewFilter');
                if (ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultPostSourceFilter() && ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter() && !IsNull($v_1) && ($v_2.get_context() !== '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7' || $v_1.get_context() === 1)) {
                    if ($v_2.get_context() !== '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7') {
                        this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter());
                        ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterText(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter());
                        this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultPostSourceFilter());
                        this.$0_0.refreshWallFilter('PostSourceFilter');
                        ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
                    }
                    this.$1x_0($v_1);
                    var $v_3 = null;
                    var $$t_8 = this;
                    $v_3 = function($p1_0, $p1_1) {
                        $$t_8.$j_0();
                        $$t_8.$0_0.postMessage($p0);
                        $$t_8.$0_0.remove_postsRefreshed($v_3);
                    };
                    this.$0_0.add_postsRefreshed($v_3);
                    this.$0_0.refreshAll();
                }
                else {
                    this.$j_0();
                    this.$0_0.postMessage($p0);
                }
            }
            else {
                this.$1x_0($v_1);
                this.$j_0();
                this.$0_0.postMessage($p0);
            }
        }
    },
    
    $1x_0: function ActivityFeeds_UI_WallCommandDispatcher$$1x_0($p0) {
        if (!IsNull($p0) && $p0.get_context() === 1) {
            this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultPostSourceFilter());
            this.$0_0.refreshWallFilter('PostSourceFilter');
            ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
        }
    },
    
    $j_0: function ActivityFeeds_UI_WallCommandDispatcher$$j_0() {
        ($P_CRM($get(this.$0_0.get_wallContainerId())).find('textarea')).removeTextAreaAutoResize();
    },
    
    $1R_0: function ActivityFeeds_UI_WallCommandDispatcher$$1R_0() {
        ActivityFeeds.UI.WallPage.updateEmptyTemplateAccordingToSelectedFilter(this.$0_0);
    },
    
    $25_0: function ActivityFeeds_UI_WallCommandDispatcher$$25_0($p0, $p1) {
        var $v_0 = this.$A_0.find(String.format('#{0}_replyArea', $p0));
        var $v_1 = $v_0.find('textarea');
        if (!_String.isNullOrEmpty($v_1.text())) {
            $v_1.focus();
            if (Wall.Control.Utils.Browser.getCurrentBrowser().get_agent() === 1) {
                Wall.Control.Utils.TextRangeUtils.setCaretPosition($v_1.get(0), $v_1.text().length);
            }
            return;
        }
        var $$t_5 = this;
        $v_0.show('slow', function() {
            ($v_1).textAreaMaxLength();
            ($v_1).textAreaAutoResize();
            var $v_2 = new TextAreaMentionsOptions([ 'postButton', null, 'overflowScrollContainer', $$t_5.$0_0.$2M_1() ]);
            ($v_1).textAreaMentions($v_2);
            if ($p1) {
                window.setTimeout(function() {
                    $v_1.focus();
                }, 100);
            }
            ($v_1).textAreaSetWatermark(new TextAreaWatermarkOptions([ 'watermarkText', ActivityFeeds.Resources.ActivityFeedsUI.commentTextBoxWatermarkText ]));
        });
        this.$A_0.find(String.format('#{0}', $p0)).addClass('hascomments');
    },
    
    $2c_0: function ActivityFeeds_UI_WallCommandDispatcher$$2c_0($p0) {
        ActivityFeeds.UI.ProfilePage.setLearnMoreLink(this.$0_0.$T_1, $p0);
    },
    
    $2z_0: function ActivityFeeds_UI_WallCommandDispatcher$$2z_0($p0) {
        alert($p0);
    },
    
    dispose: function ActivityFeeds_UI_WallCommandDispatcher$dispose() {
    }
}


ActivityFeeds.UI.ProfilePage = function ActivityFeeds_UI_ProfilePage() {
    this.$19_0 = new Sys.EventHandlerList();
    this.$1J_0 = true;
    var $v_0 = GetGlobalContext();
    this.userId = Sales.Common.CrmSoapServiceProxy.Utils.Utils.removeBeginEndBracket($v_0.getUserId()).toLowerCase();
    this.profileService = new CrmSoapServiceProxy.ProfileService($v_0);
    ActivityFeeds.UI.ProfileImageUpdater.get_instance().registerProfilePage(this);
    this.$a_0 = $P_CRM('#changeProfileImageLink');
    if (Wall.Control.Utils.Browser.getCurrentBrowser().get_isIE8OrLower()) {
        var $$t_2 = this;
        window.setTimeout(function() {
            $$t_2.$21_0();
        }, 3);
    }
    else {
        this.$21_0();
    }
    var $$t_3 = this;
    Wall.Control.Utils.WindowUtils.add_onWindowUnload(function($p1_0) {
        unsubscribeAllEvents($$t_3.$a_0);
        $$t_3.$a_0.remove();
    });
}
ActivityFeeds.UI.ProfilePage.setLearnMoreLink = function ActivityFeeds_UI_ProfilePage$setLearnMoreLink(isYammerWall, element) {
    var $v_0 = (isYammerWall) ? 275605 : 226842;
    var $v_1 = generateFwdLink($v_0);
    element.href = $v_1;
}
ActivityFeeds.UI.ProfilePage.prototype = {
    profileService: null,
    userId: null,
    profileImage: null,
    $a_0: null,
    $1J_0: false,
    
    get_ignorePrivilegeDeniedError: function ActivityFeeds_UI_ProfilePage$get_ignorePrivilegeDeniedError() {
        return this.$1J_0;
    },
    
    set_ignorePrivilegeDeniedError: function ActivityFeeds_UI_ProfilePage$set_ignorePrivilegeDeniedError(value) {
        this.$1J_0 = value;
        return value;
    },
    
    add_profileImageChanged: function ActivityFeeds_UI_ProfilePage$add_profileImageChanged(value) {
        this.$19_0.addHandler('ProfileImageChanged', value);
    },
    
    remove_profileImageChanged: function ActivityFeeds_UI_ProfilePage$remove_profileImageChanged(value) {
        this.$19_0.removeHandler('ProfileImageChanged', value);
    },
    
    $21_0: function ActivityFeeds_UI_ProfilePage$$21_0() {
        var $v_0 = $get('userImage');
        if (!IsNull($v_0)) {
            if (_String.isNullOrEmpty($v_0.src)) {
                $v_0.src = CrmSoapServiceProxy.ObjectModel.ProfileImage.get_defaultProfileImageUrl();
            }
            $P_CRM($v_0).css('visibility', 'visible');
            var $v_1 = $v_0.parentNode;
            $v_1.removeChild($v_0);
            var $v_2 = document.createElement('DIV');
            $v_2.appendChild($v_0.cloneNode(true));
            $P_CRM(createWindowOpenLink(Wall.Service.ObjectModel.EntityReference.createEntityReference(this.userId, 'systemuser'), $v_2.innerHTML, { tabindex: '9', title: ActivityFeeds.Resources.ActivityFeedsUI.openUserProfileToolTip })).insertBefore($v_1.firstChild);
        }
    },
    
    notifyProfileImageChanged: function ActivityFeeds_UI_ProfilePage$notifyProfileImageChanged(userId) {
        _Event.fireEvent(ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs, this.$19_0, 'ProfileImageChanged', this, new ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs(userId));
    },
    
    createLinkToEditProfileImage: function ActivityFeeds_UI_ProfilePage$createLinkToEditProfileImage() {
        if (!this.shouldHaveLinkToEditProfileImage()) {
            this.$a_0.hide();
            return;
        }
        var $$t_6 = this;
        var $v_0 = function() {
            var $v_1 = Mscrm.CrmUri.create('/_grid/cmds/dlg_imageupload.aspx');
            $v_1.get_query()['entityId'] = $$t_6.userId;
            $v_1.get_query()['entityName'] = 'systemuser';
            $v_1.get_query()['attributeName'] = 'entityimage';
            var $v_2 = 390;
            var $v_3 = 456;
            var $v_4 = Mscrm.Utilities.createCallbackFunctionObject('imageUploadCallback', ActivityFeeds.UI.ProfileImageUpdater.get_instance(), null, false);
            var $v_5 = new Mscrm.CrmDialog($v_1, null, $v_3, $v_2, null);
            $v_5.setCallbackReference($v_4);
            $v_5.show();
        };
        this.$a_0.unbind('click');
        this.$a_0.click($v_0);
    },
    
    shouldHaveLinkToEditProfileImage: function ActivityFeeds_UI_ProfilePage$shouldHaveLinkToEditProfileImage() {
        var $v_0 = Wall.Control.Utils.Browser.getCurrentBrowser();
        if ($v_0.get_agent() === 4 && $v_0.get_isMobile()) {
            return false;
        }
        return true;
    }
}


ActivityFeeds.UI.WallPageOptions = function ActivityFeeds_UI_WallPageOptions() {
}
ActivityFeeds.UI.WallPageOptions.prototype = {
    wallPage: null,
    wallPageMinWidth: 0,
    entityId: null,
    typeName: null,
    entityName: null,
    isCreateForm: false,
    handleResize: false,
    isRefreshForm: false,
    wallTabIndex: 0,
    overflowContainer: null,
    preloadRequest: null
}


ActivityFeeds.UI.WallPage = function ActivityFeeds_UI_WallPage($p0) {
    this.$$d_$1w_0 = Function.createDelegate(this, this.$1w_0);
    this.$$d_$3F_0 = Function.createDelegate(this, this.$3F_0);
    this.$$d_$2r_0 = Function.createDelegate(this, this.$2r_0);
    this.$$d_$2s_0 = Function.createDelegate(this, this.$2s_0);
    this.$$d_$2p_0 = Function.createDelegate(this, this.$2p_0);
    this.$$d_$2t_0 = Function.createDelegate(this, this.$2t_0);
    this.$$d_$2q_0 = Function.createDelegate(this, this.$2q_0);
    this.$$d_$2u_0 = Function.createDelegate(this, this.$2u_0);
    this.$$d_$2v_0 = Function.createDelegate(this, this.$2v_0);
    this.$Y_0 = -1;
    this.$f_0 = $p0;
    this.$B_0 = $p0.entityId;
    this.$9_0 = $p0.typeName;
    this.$1S_0 = $p0.wallPage;
    this.$Y_0 = $p0.wallTabIndex;
    var $v_0 = GetGlobalContext();
    if ($p0.isCreateForm) {
        this.$d_0 = true;
    }
    this.$K_0 = _String.isNullOrEmpty($p0.typeName);
    this.$3_0 = this.$1S_0.find('#activityFeedsWall');
    this.$D_0 = this.$3_0.find('#wallContainer');
    if (window.YAMMER_IS_CONFIGURED_FOR_ORG) {
        this.$w_0 = this.$3_0.find('.yammerEmbed');
    }
    if (window.IS_ACTIONHUB_ENABLED) {
        this.$i_0 = this.$3_0.find('.actionHubEmbed');
    }
    var $v_1 = null;
    if (this.$K_0) {
        this.$3_0.attr('class', 'wall');
    }
    else {
        $P_CRM(document).keydown(ActivityFeeds.UI.WallPage.$1b);
        var $v_3 = (!IsNull($p0.entityName)) ? $p0.entityName : Xrm.Page.data.entity.getPrimaryAttributeValue();
        if (!this.$d_0) {
            $v_1 = Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference(this.$B_0, this.$9_0, $v_3);
        }
        this.$3_0.attr('class', 'recordWall');
    }
    this.$C_0 = this.$3_0.find('.setDefaultLink');
    var $$t_7 = this;
    this.$C_0.bind('mousedown.WallPage', function($p1_0) {
        $$t_7.$C_0.removeClass('enableHover');
    });
    var $$t_8 = this;
    this.$C_0.bind('mouseleave.WallPage', function($p1_0) {
        $$t_8.$C_0.addClass('enableHover');
    });
    this.$1O_0 = this.$3_0.find('.postButton');
    this.$E_0 = this.$3_0.find('.postTextBox');
    (this.$E_0).textAreaMaxLength();
    (this.$E_0).textAreaAutoResize();
    (this.$E_0).textAreaSetWatermark(new TextAreaWatermarkOptions([ 'watermarkText', ActivityFeeds.Resources.ActivityFeedsUI.postTextBoxWatermarkText ]));
    this.$E_0.attr('title', ActivityFeeds.Resources.ActivityFeedsUI.postTextBoxWatermarkText);
    if (this.$E_0.length > 0) {
        this.$E_0[0].setAttribute('aria-label', ActivityFeeds.Resources.ActivityFeedsUI.postTextBoxWatermarkText);
    }
    this.$1_0 = new Wall.Service.WallService($v_0, $v_1);
    this.$0_0 = new ActivityFeeds.UI.ActivityFeedsWall(this.$3_0, this.$1_0, (this.$K_0) ? 0 : 1, 'header', 'postTemplate', 'commentTemplate', 'wallContainer', '.postTextBox', 'progressTemplate', 'firstRunContent', 'showMoreLinkTemplate', $p0.overflowContainer, this.$d_0);
    this.$0_0.set_pageSize((this.$K_0) ? 20 : 10);
    var $v_2 = new TextAreaMentionsOptions([ 'postButton', this.$1O_0, 'overflowScrollContainer', $p0.overflowContainer ]);
    if (!IsNull($p0.wallPage) && $p0.wallPage.length > 0) {
        (this.$E_0).setMentionsId($p0.wallPage[0].id);
    }
    (this.$E_0).textAreaMentions($v_2);
    this.$0_0.add_postsRefreshing(this.$$d_$2v_0);
    this.$0_0.add_postsRefreshed(this.$$d_$2u_0);
    this.$0_0.add_commentsRefreshed(this.$$d_$2q_0);
    this.$1C_0 = this.$3_0.find('#createdPostIdHiddenField')[0];
    this.$0_0.add_postCreated(this.$$d_$2t_0);
    this.$0_0.add_commentCreated(this.$$d_$2p_0);
    this.$0_0.add_filtersRefreshed(this.$$d_$2s_0);
    this.$0_0.add_error(this.$$d_$2r_0);
    Wall.Extensions.PresenceControl.instantiatePresenceControl(this.$0_0);
    var $$t_9 = this;
    $P_CRM(function() {
        if ($$t_9.$16_0) {
            return;
        }
        ActivityFeeds.UI.YammerHelper.displayOAuthTokenExpiredAlert($$t_9.$3_0, $p0.isRefreshForm);
        if (!$p0.isRefreshForm) {
            window.setTimeout(function() {
                $$t_9.$E_0.filter(':visible').filter(':enabled').focus();
            }, 100);
        }
        $$t_9.$t_0($$t_9.$3_0);
        $$t_9.$22_0(_DateTime.get_now());
        $$t_9.$1Q_0(false);
        $$t_9.$2e_0();
        if ($p0.handleResize) {
            window.setTimeout(function() {
                $P_CRM(window).resize($$t_9.$$d_$3F_0);
                $$t_9.$1y_0();
            }, 250);
        }
    });
    Wall.Control.Utils.WindowUtils.add_onWindowUnload(this.$$d_$1w_0);
    Wall.Control.Utils.WallUtils.enableTextSelection();
}
ActivityFeeds.UI.WallPage.createPersonalWallPage = function ActivityFeeds_UI_WallPage$createPersonalWallPage() {
    var $v_0 = new ActivityFeeds.UI.WallPageOptions();
    $v_0.wallPage = $P_CRM(document.body);
    $v_0.wallPageMinWidth = 724;
    $v_0.handleResize = true;
    $v_0.wallTabIndex = -1;
    $v_0.overflowContainer = $v_0.wallPage.parents((Wall.Control.Utils.Browser.getCurrentBrowser().get_agent() === 1) ? ((Wall.Control.Utils.Browser.getCurrentBrowser().get_isIE7()) ? 'body' : 'html') : 'body').first();
    var $v_1 = new ActivityFeeds.UI.WallPage($v_0);
    return $v_1;
}
ActivityFeeds.UI.WallPage.createRecordWallPageInIFrame = function ActivityFeeds_UI_WallPage$createRecordWallPageInIFrame() {
    var $v_0 = new ActivityFeeds.UI.WallPageOptions();
    $v_0.wallPage = $P_CRM('.recordWallTable');
    var $v_1 = new ActivityFeeds.UI.WallPageQueryString(window.location);
    $v_0.entityId = $v_1.get_id();
    $v_0.typeName = $v_1.get_typeName();
    $v_0.isCreateForm = $v_1.get_isCreateForm();
    $v_0.handleResize = true;
    $v_0.wallTabIndex = -1;
    $v_0.overflowContainer = $v_0.wallPage.find('#activityFeedsWall').first();
    var $v_2 = new ActivityFeeds.UI.WallPage($v_0);
    ActivityFeeds.UI.WallPage.$24($v_2);
    ActivityFeeds.UI.WallPage.$1m($v_2);
    return $v_2;
}
ActivityFeeds.UI.WallPage.createRecordWallPage = function ActivityFeeds_UI_WallPage$createRecordWallPage(entityId, entityType, entityName, wallRootContainer, wallTabIndex, preloadRequest) {
    var $v_0 = new ActivityFeeds.UI.WallPageOptions();
    $v_0.wallPage = wallRootContainer;
    $v_0.entityId = entityId;
    $v_0.typeName = entityType;
    $v_0.entityName = entityName;
    $v_0.isCreateForm = _String.isNullOrWhiteSpace(entityId);
    $v_0.handleResize = false;
    $v_0.isRefreshForm = true;
    $v_0.wallTabIndex = wallTabIndex;
    $v_0.overflowContainer = $v_0.wallPage.parents('.tabsContent').first();
    $v_0.preloadRequest = preloadRequest;
    var $v_1 = new ActivityFeeds.UI.WallPage($v_0);
    ActivityFeeds.UI.WallPage.$24($v_1);
    ActivityFeeds.UI.WallPage.$1m($v_1);
    return $v_1;
}
ActivityFeeds.UI.WallPage.$2b = function ActivityFeeds_UI_WallPage$$2b() {
    var $v_0 = 'rofContainer';
    var $v_1 = window.parent.document.getElementById($v_0);
    return !IsNull($v_1);
}
ActivityFeeds.UI.WallPage.$1m = function ActivityFeeds_UI_WallPage$$1m($p0) {
    if (Wall.Control.Utils.Browser.getCurrentBrowser().get_isMobileSafari()) {
        if (window.IS_WEBCLIENT_VISUAL_REFRESH_ENABLED) {
            $p0.$1T_0 = 0;
        }
        else {
            $p0.$1T_0 = 50;
        }
        var $v_0 = $p0.$1S_0;
        $v_0.css((isRTL()) ? 'padding-left' : 'padding-right', $p0.$1T_0 + 'px');
    }
}
ActivityFeeds.UI.WallPage.$24 = function ActivityFeeds_UI_WallPage$$24($p0) {
    if (!$p0.$K_0 && Wall.Control.Utils.Browser.getCurrentBrowser().get_isMobileSafari()) {
        var $v_0 = (ActivityFeeds.UI.WallPage.$2b()) ? 586 : 538;
        $p0.$3_0.find('.wallScrollContainer').width($v_0);
    }
}
ActivityFeeds.UI.WallPage.updateEmptyTemplateAccordingToSelectedFilter = function ActivityFeeds_UI_WallPage$updateEmptyTemplateAccordingToSelectedFilter(wall) {
    var $v_0 = wall.get_wallService();
    if ($v_0.get_isSystemDefaultFilterSelected() && !wall.$6_1) {
        if (!window.YAMMER_IS_CONFIGURED_FOR_ORG && !window.IS_ACTIONHUB_ENABLED) {
            wall.setEmptyTemplateMode(0);
        }
        else {
            wall.setEmptyTemplateMode(1);
        }
    }
    else {
        wall.setEmptyTemplateMode(1);
    }
}
ActivityFeeds.UI.WallPage.$1b = function ActivityFeeds_UI_WallPage$$1b($p0) {
    if (Wall.Control.Utils.jQueryEventHelper.getCtrlKey($p0)) {
        var $v_0 = Wall.Control.Utils.jQueryEventHelper.getKeyCode($p0);
        switch ($v_0) {
            case 188:
                ActivityFeeds.UI.WallPage.$2y();
                break;
            case 190:
                ActivityFeeds.UI.WallPage.$2g();
                break;
        }
    }
}
ActivityFeeds.UI.WallPage.$2g = function ActivityFeeds_UI_WallPage$$2g() {
    try {
        window.parent.$get('crmForm').control.nextRecord();
    }
    catch ($$e_0) {
    }
}
ActivityFeeds.UI.WallPage.$2y = function ActivityFeeds_UI_WallPage$$2y() {
    try {
        window.parent.$get('crmForm').control.previousRecord();
    }
    catch ($$e_0) {
    }
}
ActivityFeeds.UI.WallPage.prototype = {
    $K_0: false,
    $0_0: null,
    $1_0: null,
    $1H_0: true,
    $1S_0: null,
    $3_0: null,
    $w_0: null,
    $i_0: null,
    $D_0: null,
    $C_0: null,
    $1C_0: null,
    $E_0: null,
    $1O_0: null,
    $f_0: null,
    $1T_0: 0,
    $d_0: false,
    $B_0: null,
    $9_0: null,
    
    get_isDisabled: function ActivityFeeds_UI_WallPage$get_isDisabled() {
        return this.$d_0;
    },
    
    get_isPersonalWall: function ActivityFeeds_UI_WallPage$get_isPersonalWall() {
        return this.$K_0;
    },
    
    get_wallService: function ActivityFeeds_UI_WallPage$get_wallService() {
        return this.$1_0;
    },
    
    get_wall: function ActivityFeeds_UI_WallPage$get_wall() {
        return this.$0_0;
    },
    
    get_entityId: function ActivityFeeds_UI_WallPage$get_entityId() {
        return this.$B_0;
    },
    
    get_entityType: function ActivityFeeds_UI_WallPage$get_entityType() {
        return this.$9_0;
    },
    
    $2e_0: function ActivityFeeds_UI_WallPage$$2e_0() {
        if (this.$K_0) {
            this.$0_0.refreshWallFilters();
        }
        else {
            this.$0_0.refreshWallFilter('PostSourceFilter');
            if (!IsNull(this.$f_0.preloadRequest)) {
                var $$t_0 = this.$0_0;
                this.$f_0.preloadRequest.done(($$t_0.$$d_loadPosts || ($$t_0.$$d_loadPosts = Function.createDelegate($$t_0, $$t_0.loadPosts))));
            }
            else {
                this.$0_0.refreshAll();
            }
        }
    },
    
    $t_0: function ActivityFeeds_UI_WallPage$$t_0($p0) {
        if (this.$Y_0 > 0) {
            if (window.YAMMER_IS_CONFIGURED_FOR_ORG && this.$0_0.$T_1) {
                $p0.find('iframe').filter(':not([tabIndex=\"-1\"])').attr('tabIndex', this.$Y_0.toString());
            }
            else {
                $p0.find('a, textarea, input, button').filter(':not([tabIndex=\"-1\"])').attr('tabIndex', this.$Y_0.toString());
            }
        }
    },
    
    updateRegardingEntity: function ActivityFeeds_UI_WallPage$updateRegardingEntity(entityId, entityType, entityName) {
        if (this.$K_0) {
            throw Error.notImplemented('UpdateRegardingEntity is not implemented for Personal wall');
        }
        var $v_0 = Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference(entityId, entityType, entityName);
        this.$d_0 = _String.isNullOrWhiteSpace(entityId);
        this.$0_0.setDisabledState(this.$d_0);
        this.$B_0 = entityId;
        this.$9_0 = entityType;
        this.$1_0.updateRegardingEntity($v_0);
        this.$0_0.refreshAll();
    },
    
    refreshViewFilters: function ActivityFeeds_UI_WallPage$refreshViewFilters() {
        (this.$3_0.find('.viewFiltersInitiator')).disposeFlatMenu();
        this.$0_0.refreshWallFilter('ViewFilter');
    },
    
    $3F_0: function ActivityFeeds_UI_WallPage$$3F_0($p0) {
        this.$1y_0();
    },
    
    $1y_0: function ActivityFeeds_UI_WallPage$$1y_0() {
        if (!this.$K_0) {
            var $v_0 = $P_CRM(document.body).height() - 2;
            if ($v_0 < 358) {
                $v_0 = 358;
            }
            this.$3_0.height($v_0);
            var $v_1 = $v_0 - this.$3_0.find('.wallFilter.filters').outerHeight(true);
            this.$D_0.height($v_1);
            if (window.YAMMER_IS_CONFIGURED_FOR_ORG) {
                this.$w_0.height($v_1);
                this.$w_0.find('iframe').first().height($v_1);
            }
            if (window.IS_ACTIONHUB_ENABLED) {
                this.$i_0.height($v_1);
                this.$i_0.find('iframe').first().height($v_1);
            }
        }
    },
    
    $22_0: function ActivityFeeds_UI_WallPage$$22_0($p0) {
        this.$3_0.attr('BeforeWallRequestTime', String.format('{0:yyyy-MM-ddTHH:mm:ss.fff}', $p0));
        window.self.WallLoadStartTime = new Date().getTime();
    },
    
    $1z_0: function ActivityFeeds_UI_WallPage$$1z_0($p0) {
        this.$3_0.attr('AfterWallRefreshTime', String.format('{0:yyyy-MM-ddTHH:mm:ss.fff}', $p0));
    },
    
    $1Q_0: function ActivityFeeds_UI_WallPage$$1Q_0($p0) {
        this.$3_0.attr('IsWallRenderingComplete', $p0.toString());
        if ($p0) {
            window.self.WallPostRenderTime = new Date().getTime();
        }
    },
    
    $2v_0: function ActivityFeeds_UI_WallPage$$2v_0($p0, $p1) {
        if (!this.$1H_0) {
            this.$22_0(_DateTime.get_now());
            this.$1Q_0(false);
        }
    },
    
    $2u_0: function ActivityFeeds_UI_WallPage$$2u_0($p0, $p1) {
        if ($p1.get_posts().length > 0) {
            this.$t_0(this.$D_0);
            var $v_0 = Wall.Control.Utils.WallUtils.mapPostsTojQueryIds($p1.get_posts());
            var $v_1 = this.$D_0.find($v_0);
            $v_1.trackChildFocus(new ChildFocusTrackerOptions([ 'container', this.$D_0 ]));
            var $v_2 = $v_1.find('.comment,.replyArea');
            $v_2.trackChildFocus(new ChildFocusTrackerOptions([ 'container', this.$D_0 ]));
        }
        this.$1z_0(_DateTime.get_now());
        this.$1Q_0(true);
    },
    
    $2q_0: function ActivityFeeds_UI_WallPage$$2q_0($p0, $p1) {
        if ($p1.get_comments().length > 0) {
            this.$3_0.find('#' + $p1.get_comments()[0].get_commentId()).find('a:not(:hidden)').filter('[tabindex!=\'-1\']').first().focus();
            for (var $$arr_2 = $p1.get_comments(), $$len_3 = $$arr_2.length, $$idx_4 = 0; $$idx_4 < $$len_3; ++$$idx_4) {
                var $v_0 = $$arr_2[$$idx_4];
                this.$t_0((this.$D_0.find('#' + $v_0.get_commentId())).trackChildFocus(new ChildFocusTrackerOptions([ 'container', this.$D_0 ])));
            }
        }
    },
    
    $2t_0: function ActivityFeeds_UI_WallPage$$2t_0($p0, $p1) {
        this.$1C_0.value = $p1.get_post().get_postId() + ':post';
        this.$t_0((this.$D_0.find('#' + $p1.get_post().get_postId())).trackChildFocus(new ChildFocusTrackerOptions([ 'container', this.$D_0 ])));
        (this.$E_0).resetMentions();
        Wall.Control.Utils.ScreenReader.say(Wall.Control.Resources.WallControl.yourMessageWasPosted);
    },
    
    $2p_0: function ActivityFeeds_UI_WallPage$$2p_0($p0, $p1) {
        this.$1C_0.value = $p1.get_comment().get_commentId() + ':comment';
        this.$t_0((this.$D_0.find('#' + $p1.get_comment().get_commentId())).trackChildFocus(new ChildFocusTrackerOptions([ 'container', this.$D_0 ])));
        (this.$D_0.find('#' + $p1.get_comment().get_parentPost().get_postId() + 'PostTextBox')).resetMentions();
        Wall.Control.Utils.ScreenReader.say(Wall.Control.Resources.WallControl.yourCommentWasPosted);
    },
    
    $2s_0: function ActivityFeeds_UI_WallPage$$2s_0($p0, $p1) {
        this.$t_0(this.$3_0.find('.wallFilter'));
        ActivityFeeds.UI.DefaultFilterStateTracker.cacheLoadedFilters($p1.get_filters());
        if ($p1.get_filterType() === 'ViewFilter') {
            (this.$3_0.find('.viewFiltersInitiator')).flatMenu();
            if (this.$1H_0 && $p1.get_filters() && $p1.get_filters().length > 0) {
                var $v_0 = new (Sales.Common.Framework.List$1.$$(Wall.Interfaces.IWallFilter))();
                for (var $$arr_3 = $p1.get_filters(), $$len_4 = $$arr_3.length, $$idx_5 = 0; $$idx_5 < $$len_4; ++$$idx_5) {
                    var $v_2 = $$arr_3[$$idx_5];
                    $v_0.addRange($v_2.get_subFilters());
                }
                var $$t_E = this;
                var $v_1 = $v_0.filter(function($p1_0) {
                    return $p1_0.get_isSelected();
                });
                if ($v_1.get_count() > 0) {
                    var $v_3 = $v_1.get_item(0);
                    this.$1_0.selectWallFilter($v_3);
                    ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterText($v_3);
                    ActivityFeeds.UI.DefaultFilterStateTracker.$O = $v_3;
                    var $v_4 = $v_3.get_postSource().get_value();
                    var $$t_F = this;
                    var $v_5 = _Array.filter(Wall.Interfaces.IWallFilter, this.$1_0.getWallFilters('PostSourceFilter', null), function($p1_0) {
                        return (($p1_0).get_context()) === $v_4;
                    });
                    if ($v_5.length > 0) {
                        var $v_6 = $v_5[0];
                        ActivityFeeds.UI.DefaultFilterStateTracker.$N = $v_6;
                        if (window.IS_ACTIONHUB_ENABLED) {
                            if ($v_6.get_context() === 3) {
                                this.$0_0.setActionHubWallMode(true);
                                $(parent.$P_CRM('#containerID')).hide();
                            }
                            else {
                                this.$20_0();
                            }
                        }
                        if (!window.YAMMER_IS_CONFIGURED_FOR_ORG || $v_6.get_context() === 3) {
                            this.$1_0.selectWallFilter($v_6);
                            this.$0_0.refreshWallFilter('PostSourceFilter');
                        }
                    }
                    else {
                        this.$20_0();
                    }
                    $('#header').attr('style','display:block;');
                    if ($v_3.get_wallDataCache()) {
                        this.$1_0.set_wallDataCache($v_3.get_wallDataCache());
                    }
                }
                ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
                ActivityFeeds.UI.WallPage.updateEmptyTemplateAccordingToSelectedFilter(this.$0_0);
                this.$0_0.refreshAll();
                this.$1H_0 = false;
            }
        }
    },
    
    $20_0: function ActivityFeeds_UI_WallPage$$20_0() {
        if (window.IS_ACTIONHUB_ENABLED) {
            var $v_0 = $(parent.$P_CRM('#iFrmActionCards'));
            if ((!$v_0.length)) {
                $v_0 = $P_CRM('#iFrmActionCards');
            }
            if (($v_0.attr('src') === 'about:blank') || ($v_0.attr('iscarousalrefreshbyrefreshall') === 'true')) {
                $v_0.attr('src', $v_0[0].getAttribute('data-src').toString());
            }
            else {
                window.ORG_TIMEZONE_OFFSET = window.top.ORG_TIMEZONE_OFFSET;
                parent.frames['actionCardsCarousel'].Mscrm.ActionHubControl.ActionHubControlWall.setCarouselView(true);
                parent.frames['actionCardsCarousel'].Mscrm.ActionHubControl.ActionHubControlWall.retrieveActionCards();
            }
        }
    },
    
    $2r_0: function ActivityFeeds_UI_WallPage$$2r_0($p0, $p1) {
        var $v_0 = $p1.get_response();
        if (Wall.Service.Messages.RetrievePostsResponse.isInstanceOfType($p1.get_response()) && !IsNull($v_0)) {
            this.$1z_0(_DateTime.get_now());
            this.$1Q_0(false);
            if ($v_0.get_postSource() || ($v_0.get_view() && $v_0.get_view().id !== '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7')) {
                this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter());
                ActivityFeeds.UI.DefaultFilterStateTracker.setViewFilterText(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultViewFilter());
                this.$1_0.selectWallFilter(ActivityFeeds.UI.DefaultFilterStateTracker.get_defaultPostSourceFilter());
                this.$0_0.refreshWallFilter('PostSourceFilter');
                ActivityFeeds.UI.DefaultFilterStateTracker.updateDefaultFilterLinkState(this.$1_0);
                this.$0_0.refreshAll();
            }
        }
    },
    
    $1w_0: function ActivityFeeds_UI_WallPage$$1w_0($p0) {
        (this.$3_0.find('.viewFiltersInitiator')).disposeFlatMenu();
        unsubscribeAllEvents(this.$E_0);
        unsubscribeAllEvents(this.$1O_0);
        var $v_0 = this.$3_0.find('.viewFiltersInitiator');
        unsubscribeAllEvents($v_0);
        var $v_1 = this.$3_0.find('.setDefaultLink');
        unsubscribeAllEvents($v_1);
        if (this.$f_0.isRefreshForm) {
            var $v_2 = this.$3_0.find('#OAuthExpiredAlertImageInTabsHeader');
            $v_2.unbind('mouseenter');
            $v_2.unbind('mouseleave');
        }
        if (this.$f_0.handleResize) {
            $P_CRM(window).unbind('resize', this.$$d_$3F_0);
        }
        $P_CRM(document).unbind('keydown', ActivityFeeds.UI.WallPage.$1b);
        Wall.Control.Utils.WindowUtils.remove_onWindowUnload(this.$$d_$1w_0);
    },
    
    $16_0: false,
    
    dispose: function ActivityFeeds_UI_WallPage$dispose() {
        if (this.$16_0) {
            return;
        }
        this.$16_0 = true;
        this.$1w_0(null);
        if (!this.$0_0.get_isDisposed()) {
            this.$3B_0();
        }
        this.$0_0.dispose();
        this.$1_0.dispose();
        $P_CRM(document).unbind('keydown', ActivityFeeds.UI.WallPage.$1b);
        $P_CRM(window).unbind('resize', this.$$d_$3F_0);
        this.$C_0.unbind('.WallPage');
        if (!IsNull(this.$w_0)) {
            this.$w_0.remove();
        }
        if (!IsNull(this.$i_0)) {
            this.$i_0.remove();
        }
        this.$f_0 = null;
    },
    
    $3B_0: function ActivityFeeds_UI_WallPage$$3B_0() {
        this.$0_0.remove_postsRefreshing(this.$$d_$2v_0);
        this.$0_0.remove_postsRefreshed(this.$$d_$2u_0);
        this.$0_0.remove_commentsRefreshed(this.$$d_$2q_0);
        this.$0_0.remove_postCreated(this.$$d_$2t_0);
        this.$0_0.remove_commentCreated(this.$$d_$2p_0);
        this.$0_0.remove_filtersRefreshed(this.$$d_$2s_0);
        this.$0_0.remove_error(this.$$d_$2r_0);
    }
}


ActivityFeeds.UI.WallPageQueryString = function ActivityFeeds_UI_WallPageQueryString(windowLocation) {
    this.$5_0 = parseQueryString(windowLocation);
    this.$L_0 = !IsNull(this.$5_0) && _Dictionary.count(this.$5_0) > 0 && !IsNull(this.$5_0['typename']);
    if (!this.$L_0 && (('data') in this.$5_0)) {
        this.$5_0 = parseQueryStringValue(this.$5_0['data']);
        this.$L_0 = !IsNull(this.$5_0) && _Dictionary.count(this.$5_0) > 0 && !IsNull(this.$5_0['typename']);
    }
}
ActivityFeeds.UI.WallPageQueryString.$1q = function ActivityFeeds_UI_WallPageQueryString$$1q($p0) {
    if (!IsNull($p0)) {
        var $v_0 = $p0['hideuserprofile'];
        if (!IsNull($v_0) && ($v_0 === '1' || $v_0.toLowerCase() === 'true')) {
            return true;
        }
    }
    return false;
}
ActivityFeeds.UI.WallPageQueryString.prototype = {
    $5_0: null,
    $L_0: false,
    
    get_isQueryStringSet: function ActivityFeeds_UI_WallPageQueryString$get_isQueryStringSet() {
        return this.$L_0;
    },
    
    get_isCreateForm: function ActivityFeeds_UI_WallPageQueryString$get_isCreateForm() {
        return this.$L_0 && IsNull(this.get_id());
    },
    
    get_type: function ActivityFeeds_UI_WallPageQueryString$get_type() {
        return (this.$L_0 && !IsNull(this.$5_0['type'])) ? parseInt(this.$5_0['type']) : -1;
    },
    
    get_typeName: function ActivityFeeds_UI_WallPageQueryString$get_typeName() {
        return (this.$L_0 && !IsNull(this.$5_0['typename'])) ? this.$5_0['typename'] : null;
    },
    
    get_id: function ActivityFeeds_UI_WallPageQueryString$get_id() {
        if (!this.$L_0 || IsNull(this.$5_0['id'])) {
            return null;
        }
        var $v_0 = this.$5_0['id'];
        return Sales.Common.CrmSoapServiceProxy.Utils.Utils.parseGuid($v_0);
    },
    
    get_hideUserProfile: function ActivityFeeds_UI_WallPageQueryString$get_hideUserProfile() {
        if (ActivityFeeds.UI.WallPageQueryString.$1q(this.$5_0)) {
            return true;
        }
        else {
            var $v_0 = this.$5_0['data'];
            if (!isNullOrEmptyString($v_0)) {
                return ActivityFeeds.UI.WallPageQueryString.$1q(parseQueryStringValue(this.$5_0['data']));
            }
        }
        return false;
    }
}


ActivityFeeds.UI.YammerHelper = function ActivityFeeds_UI_YammerHelper() {
}
ActivityFeeds.UI.YammerHelper.get_isYammerInstalled = function ActivityFeeds_UI_YammerHelper$get_isYammerInstalled() {
    return window.YAMMER_IS_INSTALLED;
}
ActivityFeeds.UI.YammerHelper.get_isYammerConfiguredForOrganization = function ActivityFeeds_UI_YammerHelper$get_isYammerConfiguredForOrganization() {
    return window.YAMMER_IS_CONFIGURED_FOR_ORG;
}
ActivityFeeds.UI.YammerHelper.get_isYammerOAuthTokenExpired = function ActivityFeeds_UI_YammerHelper$get_isYammerOAuthTokenExpired() {
    return window.YAMMER_TOKEN_EXPIRED;
}
ActivityFeeds.UI.YammerHelper.get_canUserConfigureYammer = function ActivityFeeds_UI_YammerHelper$get_canUserConfigureYammer() {
    return window.YAMMER_HAS_CONFIGURE_PRIVILEGE;
}
ActivityFeeds.UI.YammerHelper.get_postMethod = function ActivityFeeds_UI_YammerHelper$get_postMethod() {
    return window.YAMMER_POST_METHOD;
}
ActivityFeeds.UI.YammerHelper.addYammerCssClassIfConfigured = function ActivityFeeds_UI_YammerHelper$addYammerCssClassIfConfigured(jQueryObjectToApplyAttribute) {
    if (window.YAMMER_IS_INSTALLED && window.YAMMER_IS_CONFIGURED_FOR_ORG) {
        jQueryObjectToApplyAttribute = jQueryObjectToApplyAttribute || $P_CRM(document.body);
        jQueryObjectToApplyAttribute.addClass('yammer');
    }
}
ActivityFeeds.UI.YammerHelper.showYammerInIE = function ActivityFeeds_UI_YammerHelper$showYammerInIE(tabContainer) {
    var $v_0 = (Mscrm.CrmBrowser.get_currentBrowser().get_agent() === 6) || Mscrm.CrmBrowser.get_currentBrowser().get_isIE11();
    if ($v_0 && window.YAMMER_IS_INSTALLED && window.YAMMER_IS_CONFIGURED_FOR_ORG && tabContainer && !tabContainer.hasClass('active')) {
        tabContainer.addClass('YammerIEFix');
    }
}
ActivityFeeds.UI.YammerHelper.displayOAuthTokenExpiredAlert = function ActivityFeeds_UI_YammerHelper$displayOAuthTokenExpiredAlert(wallElementJQuery, isRefreshForm) {
    if (window.YAMMER_IS_INSTALLED) {
        var $v_0;
        if (isRefreshForm) {
            $v_0 = wallElementJQuery.parents('.tabsControl').find('#OAuthExpiredAlertImageInTabsHeader');
            ActivityFeeds.UI.YammerHelper.$38(wallElementJQuery, $v_0);
        }
        else {
            $v_0 = wallElementJQuery.find('#OAuthExpiredAlertImage');
        }
        if (window.YAMMER_TOKEN_EXPIRED) {
            $v_0.addClass('OAuthTokenExpired');
            var $v_1 = wallElementJQuery.find('.OAuthTokenExpiredAlertText > .OAuthExpiredAlertAdminText');
            var $v_2 = wallElementJQuery.find('.OAuthTokenExpiredAlertText > .OAuthExpiredAlertUserText');
            if (window.YAMMER_HAS_CONFIGURE_PRIVILEGE) {
                $v_1.show();
                $v_2.hide();
            }
            else {
                $v_1.hide();
                $v_2.show();
            }
        }
        else {
            $v_0.removeClass('OAuthTokenExpired');
        }
    }
}
ActivityFeeds.UI.YammerHelper.$38 = function ActivityFeeds_UI_YammerHelper$$38($p0, $p1) {
    var $v_0 = $p0.find('.OAuthTokenExpiredAlertText');
    $p1.mouseenter(function($p1_0) {
        $v_0.addClass('RefreshFormOAuthAlert');
    }).mouseleave(function($p1_0) {
        $v_0.removeClass('RefreshFormOAuthAlert');
    });
}
ActivityFeeds.UI.YammerHelper.refreshYammerIFrame = function ActivityFeeds_UI_YammerHelper$refreshYammerIFrame(yammerEmbedObject, wallType, wallEntityReference) {
    if (!window.YAMMER_IS_CONFIGURED_FOR_ORG) {
        return;
    }
    var $v_0 = !wallType;
    var $v_1 = ($v_0 || IsNull(wallEntityReference)) ? ActivityFeeds.UI.YammerHelper.$Z($v_0, null, null, null) : ActivityFeeds.UI.YammerHelper.$Z($v_0, wallEntityReference.get_logicalName(), wallEntityReference.get_id(), wallEntityReference.get_name());
    yammerEmbedObject.find('iframe').attr('src', $v_1);
}
ActivityFeeds.UI.YammerHelper.injectYammerIFrame = function ActivityFeeds_UI_YammerHelper$injectYammerIFrame(yammerEmbedObject, wallType, wallEntityReference) {
    var $v_0 = !wallType;
    var $v_1 = ($v_0 || IsNull(wallEntityReference)) ? ActivityFeeds.UI.YammerHelper.$Z($v_0, null, null, null) : ActivityFeeds.UI.YammerHelper.$Z($v_0, wallEntityReference.get_logicalName(), wallEntityReference.get_id(), wallEntityReference.get_name());
    var $v_2 = String.format('<iframe frameborder=\'0\' src=\'{0}\'></iframe>', $v_1);
    yammerEmbedObject.empty();
    yammerEmbedObject.html($v_2);
}
ActivityFeeds.UI.YammerHelper.disposeYammerIFrame = function ActivityFeeds_UI_YammerHelper$disposeYammerIFrame(yammerEmbedObject) {
    var $v_0 = yammerEmbedObject.find('iframe');
    if ($v_0.length > 0) {
        var $v_1 = $v_0[0];
        ActivityFeeds.UI.YammerHelper.$27($v_1);
    }
}
ActivityFeeds.UI.YammerHelper.$27 = function ActivityFeeds_UI_YammerHelper$$27($p0) {
    if ($p0.stop) {
        $p0.stop();
    }
    $p0.src = 'about:blank';
}
ActivityFeeds.UI.YammerHelper.$Z = function ActivityFeeds_UI_YammerHelper$$Z($p0, $p1, $p2, $p3) {
    var $v_0 = GetGlobalContext().getClientUrl() + '/tools/yammer/yammerembed.aspx';
    $v_0 += '?CRMWRPCToken=';
    $v_0 += CrmEncodeDecode.CrmUrlEncode(YAMMER_YAMMEREMBED_WRPCTOKEN);
    $v_0 += '&CRMWRPCTokenTimeStamp=';
    $v_0 += CrmEncodeDecode.CrmUrlEncode(YAMMER_YAMMEREMBED_TIMESTAMP);
    if ($p0) {
        return $v_0;
    }
    $v_0 += '&etn=' + CrmEncodeDecode.CrmUrlEncode($p1);
    $p2 = ActivityFeeds.UI.YammerHelper.$3E($p2);
    if (!isNullOrEmptyString($p2)) {
        $v_0 += '&id=' + CrmEncodeDecode.CrmUrlEncode($p2);
    }
    if (!isNullOrEmptyString($p3)) {
        $v_0 += '&title=' + CrmEncodeDecode.CrmUrlEncode($p3.trim());
    }
    return $v_0;
}
ActivityFeeds.UI.YammerHelper.$3E = function ActivityFeeds_UI_YammerHelper$$3E($p0) {
    if (isNullOrEmptyString($p0)) {
        return null;
    }
    var $v_0 = new RegExp('^(?:(?:\\{|%7b){0,1}((?:[0-9a-fA-F]){8}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){4}-(?:[0-9a-fA-F]){12})(?:\\}|%7d){0,1})$');
    var $v_1 = $v_0.exec($p0);
    if (IsNull($v_1) || $v_1.length < 2) {
        return null;
    }
    return '{' + $v_1[1].toLowerCase() + '}';
}


ActivityFeeds.UI.ActionHubHelper = function ActivityFeeds_UI_ActionHubHelper() {
}
ActivityFeeds.UI.ActionHubHelper.get_isActionHubEnabled = function ActivityFeeds_UI_ActionHubHelper$get_isActionHubEnabled() {
    return window.IS_ACTIONHUB_ENABLED;
}
ActivityFeeds.UI.ActionHubHelper.refreshActionHubIFrame = function ActivityFeeds_UI_ActionHubHelper$refreshActionHubIFrame(actionHubEmbedObject, wallType, wallEntityReference) {
    var $v_0 = !wallType;
    if (!window.IS_ACTIONHUB_ENABLED || !$v_0) {
        return;
    }
    var $v_1 = actionHubEmbedObject.find('iframe');
    if ($v_1.is(':visible')) {
        if ($v_1.attr('src') === 'about:blank') {
            var $v_2 = ActivityFeeds.UI.ActionHubHelper.$Z($v_0, null, null, null);
            actionHubEmbedObject.find('iframe').attr('src', $v_2);
        }
        else {
            $v_1.contents().find('[id ^= card]').filter('.actionhubcontrol').remove();
            window.ORG_TIMEZONE_OFFSET = window.top.ORG_TIMEZONE_OFFSET;
            frames['actionCards'].Mscrm.ActionHubControl.ActionHubControlWall.setCarouselView(false);
            frames['actionCards'].Mscrm.ActionHubControl.ActionHubControlWall.retrieveActionCards();
        }
    }
}
ActivityFeeds.UI.ActionHubHelper.injectActionHubIFrame = function ActivityFeeds_UI_ActionHubHelper$injectActionHubIFrame(actionHubEmbedObject, wallType, wallEntityReference) {
    var $v_0 = !wallType;
    var $v_1 = 'iFrmActionCards';
    var $v_2 = ($v_0 || IsNull(wallEntityReference)) ? ActivityFeeds.UI.ActionHubHelper.$Z($v_0, null, null, null) : ActivityFeeds.UI.ActionHubHelper.$Z($v_0, wallEntityReference.get_logicalName(), wallEntityReference.get_id(), wallEntityReference.get_name());
    var $v_3 = String.format('<script type=\"text/javascript\"> Mscrm.Performance.PerformanceMarkerManager.get_instance().addMarker(\'Inject Action Hub Iframe\',Mscrm.Performance.PerformanceMarkerType.majorEvent);</script><iframe id=\'{0}\' frameborder=\'0\' name=\'actionCards\' src=\'about:blank\' data-src=\'{1}\'></iframe>', $v_1, $v_2);
    actionHubEmbedObject.empty();
    actionHubEmbedObject.html($v_3);
}
ActivityFeeds.UI.ActionHubHelper.disposeActionHubIFrame = function ActivityFeeds_UI_ActionHubHelper$disposeActionHubIFrame(actionHubEmbedObject) {
    var $v_0 = actionHubEmbedObject.find('iframe');
    if ($v_0.length > 0) {
        var $v_1 = $v_0[0];
        ActivityFeeds.UI.ActionHubHelper.$27($v_1);
    }
}
ActivityFeeds.UI.ActionHubHelper.$27 = function ActivityFeeds_UI_ActionHubHelper$$27($p0) {
    if ($p0.stop) {
        $p0.stop();
    }
    $p0.src = 'about:blank';
}
ActivityFeeds.UI.ActionHubHelper.$Z = function ActivityFeeds_UI_ActionHubHelper$$Z($p0, $p1, $p2, $p3) {
    var $v_0 = GetGlobalContext().getClientUrl() + '/_controls/actionhubcontrol/actionhubcontrolPersonalWall.aspx?pagemode=iframe&isDashboard=True';
    return $v_0;
}


Type.registerNamespace('ActivityFeeds.UI.Profile');

ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs = function ActivityFeeds_UI_Profile_ProfileImageChangedEventArgs(userId) {
    ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs.initializeBase(this);
    this.$u_1 = userId;
}
ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs.prototype = {
    $u_1: null,
    
    get_userId: function ActivityFeeds_UI_Profile_ProfileImageChangedEventArgs$get_userId() {
        return this.$u_1;
    }
}


Type.registerNamespace('ActivityFeeds.UI.jQueryExtensions');

function FlatMenuOptions(nameValuePairs) {
    Mscrm.JQueryPluginRegistrationHelper.initializeFieldsFromObjectCollections(this, nameValuePairs);
}


function TextAreaMentionsOptions(nameValuePairs) {
    Mscrm.JQueryPluginRegistrationHelper.initializeFieldsFromObjectCollections(this, nameValuePairs);
}


function TextAreaMaxLengthOptions(nameValuePairs) {
    Mscrm.JQueryPluginRegistrationHelper.initializeFieldsFromObjectCollections(this, nameValuePairs);
}


function FlatMenuPlugin() {
}
FlatMenuPlugin.$$cctor = function FlatMenuPlugin$$$cctor() {
    ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper.registerPlugin(FlatMenuPlugin);
}
FlatMenuPlugin.flatMenu = function FlatMenuPlugin$flatMenu(customOptions) {
    return this.each(function($p1_0, $p1_1) {
        var $v_0 = $P_CRM(this);
        var $v_1;
        if (!IsNull(customOptions) && !IsNull(customOptions.menuRootSelector)) {
            $v_1 = customOptions.menuRootSelector;
        }
        else if (!IsNull($p1_1.getAttribute('MenuRootSelector'))) {
            $v_1 = $p1_1.getAttribute('MenuRootSelector');
        }
        else {
            throw Error.create('MenuRootSelector is not defined');
        }
        var $v_2 = $P_CRM($v_1);
        if (!$v_2.length) {
            throw Error.create('MenuRootSelector is invalid');
        }
        $v_2.data('FlatMenuInitiator', $v_0);
        $v_0.data('FlatMenuRoot', $v_2);
        var $v_3 = true;
        if (!IsNull(customOptions) && !IsNull(customOptions.autoCloseMenu)) {
            $v_3 = customOptions.autoCloseMenu;
        }
        else if (!IsNull($p1_1.getAttribute('AutoCloseMenu'))) {
            var $v_4 = $p1_1.getAttribute('AutoCloseMenu');
            if (!_String.isNullOrEmpty($v_4) && ($v_4.toLowerCase() === '0' || $v_4 === 'false')) {
                $v_3 = true;
            }
        }
        $v_0.bind('click.FlatMenu', function($p2_0) {
            if ($v_2.css('display') === 'none') {
                ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.showMenu($v_0, $v_2);
            }
        }).bind('keydown.FlatMenu', function($p2_0) {
            var $v_5 = Wall.Control.Utils.jQueryEventHelper.getKeyCode($p2_0);
            switch ($v_5) {
                case 32:
                case 40:
                case 13:
                    ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.showMenu($v_0, $v_2);
                    $v_2.find('li>a').first().focus();
                    $p2_0.preventDefault();
                    $p2_0.stopPropagation();
                    break;
            }
        });
        $v_2.find('li>a').each(function($p2_0, $p2_1) {
            var $v_6 = $P_CRM($p2_1);
            $v_6.bind('keydown.FlatMenu', function($p3_0) {
                var $v_7 = ($v_6).parent('li');
                var $v_8 = Wall.Control.Utils.jQueryEventHelper.getKeyCode($p3_0);
                switch ($v_8) {
                    case 32:
                        $v_6.click();
                        $p3_0.preventDefault();
                        $p3_0.stopPropagation();
                        break;
                    case 9:
                        $v_7.removeClass('activekeyboard');
                        break;
                    case 38:
                        $p3_0.preventDefault();
                        $p3_0.stopPropagation();
                        $v_7.removeClass('activekeyboard');
                        ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.getPreviousMenuLink($v_6).focus();
                        break;
                    case 40:
                        $p3_0.preventDefault();
                        $p3_0.stopPropagation();
                        $v_7.removeClass('activekeyboard');
                        ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.getNextMenuLink($v_6).focus();
                        break;
                    case 39:
                    case 37:
                        $p3_0.preventDefault();
                        $p3_0.stopPropagation();
                        var $v_9 = $v_2.find('.menuSection');
                        var $v_A = $v_9.length;
                        var $v_B = $v_9.index(($v_7).parent('.menuSection').first()[0]);
                        if ($v_B < $v_A - 1 && $v_8 === 39 || $v_B > 0 && $v_8 === 37) {
                            var $v_C = ($v_7).parent('ul:first').find('li').index($v_7.get(0));
                            var $v_D = $v_9[$v_B + (($v_8 === 39) ? 1 : -1)];
                            var $v_E = $P_CRM($v_D).find('li').length;
                            $v_7.removeClass('activekeyboard');
                            var $v_F = Math.min($v_E - 1, $v_C);
                            $P_CRM($P_CRM($v_D).find('li')[$v_F]).find('a:first').focus();
                        }
                        break;
                }
            }).bind('focus.FlatMenu', function($p3_0) {
                ($P_CRM($p3_0.target)).parent('li').addClass('activekeyboard');
            }).bind('click.FlatMenu', function($p3_0) {
                if ($v_3) {
                    window.setTimeout(function() {
                        ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.hideMenu($v_0, $v_2);
                    }, 1);
                }
            });
        });
    });
}
FlatMenuPlugin.closeFlatMenu = function FlatMenuPlugin$closeFlatMenu() {
    return this.each(function($p1_0, $p1_1) {
        var $v_0 = $P_CRM(this);
        if ((('FlatMenuInitiator') in $v_0.data())) {
            var $v_1 = ($v_0.data()['FlatMenuInitiator']);
            ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.hideMenu($v_1, $v_0);
        }
    });
}
FlatMenuPlugin.disposeFlatMenu = function FlatMenuPlugin$disposeFlatMenu() {
    return this.each(function($p1_0, $p1_1) {
        var $v_0 = $P_CRM(this);
        if ((('FlatMenuRoot') in $v_0.data())) {
            var $v_1 = $v_0.data()['FlatMenuRoot'];
            ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.hideMenu($v_0, $v_1, false);
            $v_1.find('li>a').unbind('.FlatMenu').removeData();
            $v_0.unbind('.FlatMenu').removeData();
            $v_1.hide().removeData();
            $P_CRM(document).unbind('.FlatMenu');
        }
    });
}


ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper = function ActivityFeeds_UI_jQueryExtensions_FlatMenuPluginHelper() {
}
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.showMenu = function ActivityFeeds_UI_jQueryExtensions_FlatMenuPluginHelper$showMenu($p0, $p1) {
    $P_CRM(document).bind('keypress.FlatMenu', function($p1_0) {
        var $v_4 = Wall.Control.Utils.jQueryEventHelper.getKeyCode($p1_0);
        switch ($v_4) {
            case 27:
                ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.hideMenu($p0, $p1);
                break;
        }
    }).bind('mousedown.FlatMenu', function($p1_0) {
        if ($P_CRM($p1_0.target).parents().index($p1.get(0)) < 0) {
            ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.hideMenu($p0, $p1);
        }
    });
    $p0.addClass('active');
    var $v_0 = $p0.position().top + $p0.height();
    var $v_1 = $p0.position().left;
    $p1.css('top', $v_0 + 'px');
    $p1.css('left', $v_1 + 'px');
    $p1.fadeIn('fast');
    if (isRTL()) {
        $p1.css('left', $v_1 + $p0.outerWidth() - $p1.outerWidth() + 'px');
    }
    var $v_2 = 0;
    var $v_3 = $p1.find('.menuPane').each(function($p1_0, $p1_1) {
        var $v_5 = $P_CRM($p1_1).height();
        if ($P_CRM($p1_1).height() > $v_2) {
            $v_2 = $v_5;
        }
        return true;
    });
    $v_3.css('height', $v_2 + 'px');
}
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.hideMenu = function ActivityFeeds_UI_jQueryExtensions_FlatMenuPluginHelper$hideMenu($p0, $p1, $p2) {
    $p0.removeClass('active');
    ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.removeActiveMarks($p1);
    $p1.fadeOut('fast');
    $P_CRM(document).unbind('.FlatMenu');
    if (IsNull($p2) || $p2) {
        $p0.filter(':visible').filter(':enabled').focus();
    }
}
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.removeActiveMarks = function ActivityFeeds_UI_jQueryExtensions_FlatMenuPluginHelper$removeActiveMarks($p0) {
    $p0.find('li').removeClass('activekeyboard').removeClass('active');
}
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.getNextMenuLink = function ActivityFeeds_UI_jQueryExtensions_FlatMenuPluginHelper$getNextMenuLink($p0) {
    var $v_0 = ($p0).parent('li').parent('ul').children('li').children('a');
    var $v_1 = $v_0.index($p0.get(0));
    if ($v_1 + 1 >= $v_0.length) {
        return $P_CRM($v_0[$v_1]);
    }
    return $P_CRM($v_0[$v_1 + 1]);
}
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.getPreviousMenuLink = function ActivityFeeds_UI_jQueryExtensions_FlatMenuPluginHelper$getPreviousMenuLink($p0) {
    var $v_0 = ($p0).parent('li').parent('ul').children('li').children('a');
    var $v_1 = $v_0.index($p0.get(0));
    if (!$v_1) {
        return $P_CRM($v_0[0]);
    }
    return $P_CRM($v_0[$v_1 - 1]);
}


ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper = function ActivityFeeds_UI_jQueryExtensions_SafeJQueryPluginRegistrationHelper() {
}
ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper.registerPlugin = function ActivityFeeds_UI_jQueryExtensions_SafeJQueryPluginRegistrationHelper$registerPlugin($p0) {
    if (typeof(Mscrm.JQueryPluginRegistrationHelper) !== 'undefined') {
        Mscrm.JQueryPluginRegistrationHelper.registerPlugin($p0);
    }
}


function TextAreaMentionsPlugin() {
}
TextAreaMentionsPlugin.$$cctor = function TextAreaMentionsPlugin$$$cctor() {
    ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper.registerPlugin(TextAreaMentionsPlugin);
}
TextAreaMentionsPlugin.textAreaMentions = function TextAreaMentionsPlugin$textAreaMentions(options) {
    var $v_0 = Xrm.Internal.startMetricsStopwatch('TextAreaMentions');
    $v_0.start();
    var $v_1 = this.filter('textarea').each(function($p1_0, $p1_1) {
        var $v_2 = $P_CRM($p1_1);
        ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2W($v_2, options);
    });
    $v_0.stop();
    return $v_1;
}
TextAreaMentionsPlugin.getReplacedMentionTags = function TextAreaMentionsPlugin$getReplacedMentionTags() {
    return ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2Q(this);
}
TextAreaMentionsPlugin.resetMentions = function TextAreaMentionsPlugin$resetMentions() {
    ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$31(this);
}
TextAreaMentionsPlugin.isMentioning = function TextAreaMentionsPlugin$isMentioning() {
    return ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2Z(this);
}
TextAreaMentionsPlugin.setMentionsId = function TextAreaMentionsPlugin$setMentionsId(mentionsId) {
    this.attr(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$1Y, mentionsId);
}


ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper() {
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$b($p0) {
    var $v_0 = $p0.getAttribute(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$1Y);
    if (!_String.isNullOrWhiteSpace($v_0)) {
        return $p0.id + '_' + $v_0;
    }
    else {
        return $p0.id;
    }
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2Z = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$2Z($p0) {
    var $v_0 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0.get(0));
    return ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p($v_0) && (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_0]).get_isMentioning();
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2W = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$2W($p0, $p1) {
    if (IsNull($p0)) {
        throw Error.create('A text area was not supplied.');
    }
    if ($p0.length !== 1) {
        throw Error.create('Only one instance of a mention enabled text area is allowed.');
    }
    var $v_0 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0[0]);
    var $v_1;
    var $v_2 = $v_1 = null;
    var $v_3 = $p0.get()[0];
    var $v_4 = 250;
    if (!IsNull($p1) && !IsNull($p1.textMaxLength)) {
        $v_4 = $p1.textMaxLength;
    }
    else if (!IsNull($v_3.getAttribute('MaxLength'))) {
        $v_4 = parseInt($v_3.getAttribute('MaxLength'));
    }
    else if (!IsNull($v_3.getAttribute('MaximumLength'))) {
        $v_4 = parseInt($v_3.getAttribute('MaximumLength'));
    }
    if (!IsNull($p1)) {
        if (!IsNull($p1.postButton)) {
            $v_2 = $p1.postButton;
        }
        if (!IsNull($p1.overflowScrollContainer)) {
            $v_1 = $p1.overflowScrollContainer;
        }
    }
    ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_0] = new ActivityFeeds.Mentions.Models.MruMenuViewModel($p0, $v_2, $v_1, $v_4);
    $p0.bind('keydown.mention', ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2R);
    $p0.bind('keyup.mention', ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2T);
    $p0.bind('keypress.mention', ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2S);
    $p0.bind('cut.mention paste.mention click.mention', function() {
        (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_0]).refreshMruList();
    });
    Wall.Control.Utils.WindowUtils.add_onWindowUnload(function($p1_0) {
        $p0.unbind('.mention');
        ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_0] = null;
    });
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2Q = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$2Q($p0) {
    var $v_0 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0[0]);
    return (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p($v_0)) ? (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_0]).get_replacedPostText() : $p0.val();
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$31 = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$31($p0) {
    var $v_0 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0[0]);
    if (!ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p($v_0)) {
        return;
    }
    (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_0]).reset();
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2S = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$2S($p0) {
    var $v_0 = parseInt($p0.which);
    var $v_1 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0.currentTarget);
    if (!ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p($v_1)) {
        return;
    }
    switch ($v_0) {
        case 64:
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).showMruMenu();
            break;
        case 13:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning()) {
                return;
            }
            $p0.preventDefault();
            $p0.stopPropagation();
            break;
    }
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2T = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$2T($p0) {
    var $v_0 = parseInt($p0.which);
    var $v_1 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0.currentTarget);
    if (!ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p($v_1)) {
        return;
    }
    var $v_2 = $P_CRM($p0.currentTarget);
    var $v_3 = $v_2.attr('alt');
    if (!_String.isNullOrEmpty($v_3)) {
        $v_2.attr('title', $v_3);
    }
    switch ($v_0) {
        case 27:
            break;
        case 9:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning() || Wall.Control.Utils.jQueryEventHelper.getAltKey($p0)) {
                return;
            }
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_recentlyViewedItems().length) {
                if (!IsNull((ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_postButton())) {
                    (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_postButton().focus();
                }
                (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).hideMruMenu();
                return;
            }
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).resolveMention();
            break;
        case 13:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning()) {
                return;
            }
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).resolveMention();
            $p0.stopPropagation();
            break;
        case 40:
        case 38:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning()) {
                (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).refreshMruList();
            }
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).traverseMentions($p0);
            break;
        case 36:
        case 35:
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).traverseMentions($p0);
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).refreshMruList();
            break;
        case 16:
            break;
        default:
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).refreshMruList();
            break;
    }
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2R = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$2R($p0) {
    var $v_0 = parseInt($p0.which);
    var $v_1 = ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$b($p0.currentTarget);
    if (!ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p($v_1)) {
        return;
    }
    switch ($v_0) {
        case 27:
            $p0.preventDefault();
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).hideMruMenu();
            break;
        case 9:
        case 13:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning()) {
                return;
            }
            $p0.stopImmediatePropagation();
            $p0.stopPropagation();
            $p0.preventDefault();
            break;
        case 40:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning()) {
                return;
            }
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).selectNextMruItem();
            $p0.preventDefault();
            break;
        case 38:
            if (!(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).get_isMentioning()) {
                return;
            }
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).selectPreviousMruItem();
            $p0.preventDefault();
            break;
        case 37:
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).traverseMentions($p0);
            break;
        case 39:
            (ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$v_1]).traverseMentions($p0);
            break;
    }
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$p = function ActivityFeeds_UI_jQueryExtensions_TextAreaMentionsPluginHelper$$p($p0) {
    return (($p0) in ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2) && !IsNull(ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2[$p0]);
}


function TextAreaMaxLengthPlugin() {
}
TextAreaMaxLengthPlugin.$$cctor = function TextAreaMaxLengthPlugin$$$cctor() {
    ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper.registerPlugin(TextAreaMaxLengthPlugin);
}
TextAreaMaxLengthPlugin.textAreaMaxLength = function TextAreaMaxLengthPlugin$textAreaMaxLength(customOptions) {
    var $v_0 = Xrm.Internal.startMetricsStopwatch('TextAreaMaxLength');
    $v_0.start();
    var $v_1 = this.filter('textarea').each(function($p1_0, $p1_1) {
        var $v_2 = $P_CRM(this);
        var $v_3 = TextAreaMaxLengthPlugin.$2I(customOptions, $p1_1);
        var $v_4 = TextAreaMaxLengthPlugin.$2O(customOptions, $p1_1);
        var $v_5 = TextAreaMaxLengthPlugin.$2N($v_4, $v_2);
        var $v_6 = TextAreaMaxLengthPlugin.$2G(customOptions, $p1_1);
        var $v_7 = TextAreaMaxLengthPlugin.$2H(customOptions, $p1_1);
        var $v_8 = TextAreaMaxLengthPlugin.$2L(customOptions, $p1_1);
        var $v_9 = TextAreaMaxLengthPlugin.$2K(customOptions, $p1_1);
        var $v_A = TextAreaMaxLengthPlugin.$2P(customOptions, $p1_1);
        var $v_B = TextAreaMaxLengthPlugin.$2J(customOptions, $p1_1);
        var $v_C = function($p2_0) {
            window.setTimeout(function() {
                ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.$1k($v_6, $v_7, $v_8, $v_9, $v_3, $v_2, $v_A, $v_B, $v_5);
            }, 1);
        };
        $v_2.keydown(function($p2_0) {
            var $v_D = Wall.Control.Utils.jQueryEventHelper.getKeyCode($p2_0);
            if ($v_D === 13 && $v_2.val().length > $v_3) {
                $p2_0.stopPropagation();
                $p2_0.preventDefault();
                return;
            }
            if ($v_D === 13) {
                $v_C($p2_0);
            }
        });
        $v_2.bind('paste', function($p2_0) {
            window.setTimeout(function() {
                ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.$1k($v_6, $v_7, $v_8, $v_9, $v_3, $v_2, $v_A, $v_B, $v_5);
            }, 10);
        });
        $v_2.keyup($v_C);
        $v_2.change($v_C);
        $v_2.blur($v_C);
        ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.$1k($v_6, $v_7, $v_8, $v_9, $v_3, $v_2, $v_A, $v_B, $v_5);
    });
    $v_0.stop();
    return $v_1;
}
TextAreaMaxLengthPlugin.$2J = function TextAreaMaxLengthPlugin$$2J($p0, $p1) {
    var $v_0 = null;
    if (!IsNull($p0) && !IsNull($p0.noCharactersLeftLabelId)) {
        $v_0 = $p0.noCharactersLeftLabelId;
    }
    else if (!IsNull($p1.getAttribute('NoCharactersLeftLabelSelector'))) {
        $v_0 = $p1.getAttribute('NoCharactersLeftLabelSelector');
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2P = function TextAreaMaxLengthPlugin$$2P($p0, $p1) {
    var $v_0 = null;
    if (!IsNull($p0) && !IsNull($p0.postButtonId)) {
        $v_0 = $p0.postButtonId;
    }
    else if (!IsNull($p1.getAttribute('PostButtonSelector'))) {
        $v_0 = $p1.getAttribute('PostButtonSelector');
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2K = function TextAreaMaxLengthPlugin$$2K($p0, $p1) {
    var $v_0 = null;
    if (!IsNull($p0) && !IsNull($p0.nonMaxCharactersLeftCss)) {
        $v_0 = $p0.nonMaxCharactersLeftCss;
    }
    else if (!IsNull($p1.getAttribute('NonMaxCharactersLeftCss'))) {
        $v_0 = $p1.getAttribute('NonMaxCharactersLeftCss');
    }
    else {
        $v_0 = 'nonMaxCharactersLeft';
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2L = function TextAreaMaxLengthPlugin$$2L($p0, $p1) {
    var $v_0 = null;
    if (!IsNull($p0) && !IsNull($p0.noCharactersLeftCss)) {
        $v_0 = $p0.noCharactersLeftCss;
    }
    else if (!IsNull($p1.getAttribute('NoCharactersLeftCss'))) {
        $v_0 = $p1.getAttribute('NoCharactersLeftCss');
    }
    else {
        $v_0 = 'noCharactersLeft';
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2H = function TextAreaMaxLengthPlugin$$2H($p0, $p1) {
    var $v_0 = null;
    if (!IsNull($p0) && !IsNull($p0.charactersLeftTemplate)) {
        $v_0 = $p0.charactersLeftTemplate;
    }
    else if (!IsNull($p1.getAttribute('CharactersLeftTemplate'))) {
        $v_0 = $p1.getAttribute('CharactersLeftTemplate');
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2G = function TextAreaMaxLengthPlugin$$2G($p0, $p1) {
    var $v_0 = null;
    if (!IsNull($p0) && !IsNull($p0.charactersLeftLabelId)) {
        $v_0 = $p0.charactersLeftLabelId;
    }
    else if (!IsNull($p1.getAttribute('CharactersLeftLabelSelector'))) {
        $v_0 = $p1.getAttribute('CharactersLeftLabelSelector');
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2N = function TextAreaMaxLengthPlugin$$2N($p0, $p1) {
    var $v_0 = null;
    if (!_String.isNullOrWhiteSpace($p0)) {
        $v_0 = ($p1).closest($p0);
    }
    if (IsNull($v_0) || !$v_0.length) {
        $v_0 = $P_CRM(document.body);
        Xrm.Internal.trace.warning('TextAreaMaxLengthPlugin', 'Can\'t find parent container. Using document.body');
    }
    return $v_0;
}
TextAreaMaxLengthPlugin.$2I = function TextAreaMaxLengthPlugin$$2I($p0, $p1) {
    if (!IsNull($p0) && !IsNull($p0.maxLength)) {
        return $p0.maxLength;
    }
    else if (!IsNull($p1.getAttribute('MaxLength'))) {
        return parseInt($p1.getAttribute('MaxLength'));
    }
    else if (!IsNull($p1.getAttribute('MaximumLength'))) {
        return parseInt($p1.getAttribute('MaximumLength'));
    }
    else {
        throw Error.create('MaxLength is not defined');
    }
}
TextAreaMaxLengthPlugin.$2O = function TextAreaMaxLengthPlugin$$2O($p0, $p1) {
    if (!IsNull($p0) && !IsNull($p0.parentContainerId)) {
        return $p0.parentContainerId;
    }
    else if (!IsNull($p1.getAttribute('ParentContainerSelector'))) {
        return $p1.getAttribute('ParentContainerSelector');
    }
    else if (!IsNull($p1.getAttribute('ParentContainerSelector'))) {
        return $p1.getAttribute('ParentContainerSelector');
    }
    return null;
}
TextAreaMaxLengthPlugin.isOverMaxLengthLimit = function TextAreaMaxLengthPlugin$isOverMaxLengthLimit() {
    return ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.$2a(this);
}


ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper = function ActivityFeeds_UI_jQueryExtensions_TextAreaMaxLengthPluginHelper() {
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.$2a = function ActivityFeeds_UI_jQueryExtensions_TextAreaMaxLengthPluginHelper$$2a($p0) {
    return (('TextAreaMaxLengthPlugin') in $p0.data()) && $p0.data()['TextAreaMaxLengthPlugin'];
}
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.$1k = function ActivityFeeds_UI_jQueryExtensions_TextAreaMaxLengthPluginHelper$$1k($p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8) {
    var $v_0 = $p5.val().length;
    if ($p5.hasClass('watermark')) {
        $v_0 = 0;
    }
    var $v_1 = $p4 - $v_0;
    $p5.data('TextAreaMaxLengthPlugin', $v_1 < 0);
    if (!IsNull($p0)) {
        var $v_2 = $p8.find($p0);
        $v_2.html(String.format((!IsNull($p1)) ? $p1 : '{0}', $v_1));
        if (!IsNull($p2)) {
            $v_2.toggleClass($p2, $v_1 < 0);
        }
        if (!IsNull($p3)) {
            $v_2.toggleClass($p3, $v_1 < $p4);
        }
    }
    if (!_String.isNullOrEmpty($p7) && !IsNull($p2)) {
        var $v_3 = $p8.find($p7);
        $v_3.toggleClass($p2, $v_1 < 0);
    }
    if (!_String.isNullOrEmpty($p6)) {
        var $v_4 = $p8.find($p6);
        if ($v_1 >= 0) {
            $v_4.removeAttr('disabled');
            $v_4.removeClass('disabled');
        }
        else {
            $v_4.addClass('disabled');
            $v_4.attr('disabled', 'disabled');
        }
    }
}


Type.registerNamespace('ActivityFeeds.UI.Loaders');

ActivityFeeds.UI.Loaders.BaseLoader = function ActivityFeeds_UI_Loaders_BaseLoader() {
}
ActivityFeeds.UI.Loaders.BaseLoader.get_$2U = function ActivityFeeds_UI_Loaders_BaseLoader$get_$2U() {
    var $v_0 = document.getElementsByTagName('HEAD');
    return $v_0[0];
}
ActivityFeeds.UI.Loaders.BaseLoader.prototype = {
    
    get_additionalAttributes: function ActivityFeeds_UI_Loaders_BaseLoader$get_additionalAttributes() {
        return {};
    },
    
    loadContent: function ActivityFeeds_UI_Loaders_BaseLoader$loadContent($p0, $p1, $p2) {
        if (!IsNull($p2) && $p2) {
            try {
                var $v_0 = new XMLHttpRequest();
                $v_0.open('GET', $p0, false);
                $v_0.send(null);
                if ($v_0.status !== 200) {
                }
            }
            catch ($v_1) {
            }
        }
        if (IsNull($p1)) {
            $p1 = this.createIncludeElement();
            $p1.setAttribute(this.get_urlAttributeName(), $p0);
            ActivityFeeds.UI.Loaders.BaseLoader.get_$2U().appendChild($p1);
        }
        else {
            $p1.setAttribute(this.get_urlAttributeName(), $p0);
        }
    },
    
    createIncludeElement: function ActivityFeeds_UI_Loaders_BaseLoader$createIncludeElement() {
        var $v_0 = document.createElement(this.get_tagName());
        var $$dict_2 = this.get_additionalAttributes();
        for (var $$key_3 in $$dict_2) {
            var $v_1 = { key: $$key_3, value: $$dict_2[$$key_3] };
            $v_0.setAttribute($v_1.key, $v_1.value);
        }
        return $v_0;
    }
}


ActivityFeeds.UI.Loaders.ScriptLoader = function ActivityFeeds_UI_Loaders_ScriptLoader() {
    ActivityFeeds.UI.Loaders.ScriptLoader.initializeBase(this);
}
ActivityFeeds.UI.Loaders.ScriptLoader.prototype = {
    
    get_additionalAttributes: function ActivityFeeds_UI_Loaders_ScriptLoader$get_additionalAttributes() {
        return { type: 'text/javascript' };
    },
    
    get_tagName: function ActivityFeeds_UI_Loaders_ScriptLoader$get_tagName() {
        return 'script';
    },
    
    get_urlAttributeName: function ActivityFeeds_UI_Loaders_ScriptLoader$get_urlAttributeName() {
        return 'src';
    }
}


ActivityFeeds.UI.Loaders.StyleLoader = function ActivityFeeds_UI_Loaders_StyleLoader() {
    ActivityFeeds.UI.Loaders.StyleLoader.initializeBase(this);
}
ActivityFeeds.UI.Loaders.StyleLoader.prototype = {
    
    get_additionalAttributes: function ActivityFeeds_UI_Loaders_StyleLoader$get_additionalAttributes() {
        return { rel: 'stylesheet', type: 'text/css' };
    },
    
    get_tagName: function ActivityFeeds_UI_Loaders_StyleLoader$get_tagName() {
        return 'link';
    },
    
    get_urlAttributeName: function ActivityFeeds_UI_Loaders_StyleLoader$get_urlAttributeName() {
        return 'href';
    }
}


ActivityFeeds.UI.ActivityFeedsControl.registerClass('ActivityFeeds.UI.ActivityFeedsControl', Mscrm.CrmUIControl, Mscrm.IDeferredDataProcessingControl);
ActivityFeeds.UI.ActivityFeedsWall.registerClass('ActivityFeeds.UI.ActivityFeedsWall', Wall.UI.Wall, Wall.Service.Interfaces.IActivityFeedsWall, Wall.Interfaces.IWall, Sys.IDisposable, Mscrm.IDeferredDataProcessingControl);
ActivityFeeds.UI.BulkActionCommand.registerClass('ActivityFeeds.UI.BulkActionCommand');
ActivityFeeds.UI.BulkActionService.registerClass('ActivityFeeds.UI.BulkActionService');
ActivityFeeds.UI.Constants.registerClass('ActivityFeeds.UI.Constants');
ActivityFeeds.UI.DefaultFilterStateTracker.registerClass('ActivityFeeds.UI.DefaultFilterStateTracker');
ActivityFeeds.UI.KeyboardNavigationController.registerClass('ActivityFeeds.UI.KeyboardNavigationController');
ActivityFeeds.UI.PostToYammerService.registerClass('ActivityFeeds.UI.PostToYammerService', ActivityFeeds.UI.BulkActionService);
ActivityFeeds.UI.ProfileImageUpdater.registerClass('ActivityFeeds.UI.ProfileImageUpdater');
ActivityFeeds.UI.ProfilePage.registerClass('ActivityFeeds.UI.ProfilePage');
ActivityFeeds.UI.UserRecordProfilePage.registerClass('ActivityFeeds.UI.UserRecordProfilePage', ActivityFeeds.UI.ProfilePage);
ActivityFeeds.UI.UserFollowingProfilePage.registerClass('ActivityFeeds.UI.UserFollowingProfilePage', ActivityFeeds.UI.ProfilePage);
ActivityFeeds.UI.WallCommands.registerClass('ActivityFeeds.UI.WallCommands');
ActivityFeeds.UI.LikeParamObject.registerClass('ActivityFeeds.UI.LikeParamObject');
ActivityFeeds.UI.WallCommandDispatcher.registerClass('ActivityFeeds.UI.WallCommandDispatcher', null, Sys.IDisposable);
ActivityFeeds.UI.WallPageOptions.registerClass('ActivityFeeds.UI.WallPageOptions');
ActivityFeeds.UI.WallPage.registerClass('ActivityFeeds.UI.WallPage', null, Sys.IDisposable);
ActivityFeeds.UI.WallPageQueryString.registerClass('ActivityFeeds.UI.WallPageQueryString');
ActivityFeeds.UI.YammerHelper.registerClass('ActivityFeeds.UI.YammerHelper');
ActivityFeeds.UI.ActionHubHelper.registerClass('ActivityFeeds.UI.ActionHubHelper');
ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs.registerClass('ActivityFeeds.UI.Profile.ProfileImageChangedEventArgs', Sys.EventArgs);
FlatMenuOptions.registerClass('FlatMenuOptions');
TextAreaMentionsOptions.registerClass('TextAreaMentionsOptions');
TextAreaMaxLengthOptions.registerClass('TextAreaMaxLengthOptions');
FlatMenuPlugin.registerClass('FlatMenuPlugin');
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.registerClass('ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper');
ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper.registerClass('ActivityFeeds.UI.jQueryExtensions.SafeJQueryPluginRegistrationHelper');
TextAreaMentionsPlugin.registerClass('TextAreaMentionsPlugin');
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.registerClass('ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper');
TextAreaMaxLengthPlugin.registerClass('TextAreaMaxLengthPlugin');
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.registerClass('ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper');
ActivityFeeds.UI.Loaders.BaseLoader.registerClass('ActivityFeeds.UI.Loaders.BaseLoader');
ActivityFeeds.UI.Loaders.ScriptLoader.registerClass('ActivityFeeds.UI.Loaders.ScriptLoader', ActivityFeeds.UI.Loaders.BaseLoader);
ActivityFeeds.UI.Loaders.StyleLoader.registerClass('ActivityFeeds.UI.Loaders.StyleLoader', ActivityFeeds.UI.Loaders.BaseLoader);
ActivityFeeds.UI.BulkActionCommand.$1B = null;
ActivityFeeds.UI.BulkActionService.divTitleId = 'divTitle';
ActivityFeeds.UI.BulkActionService.divDescriptionId = 'divDescription';
ActivityFeeds.UI.BulkActionService.divResultId = 'divResult';
ActivityFeeds.UI.BulkActionService.okButton = 'butBegin';
ActivityFeeds.UI.BulkActionService.cancelButton = 'cmdDialogCancel';
ActivityFeeds.UI.BulkActionService.progressBarId = 'divProgress';
ActivityFeeds.UI.BulkActionService.divFill = 'divFill';
ActivityFeeds.UI.BulkActionService.divFillBg = 'divFillBg';
ActivityFeeds.UI.BulkActionService.tdDialogHeader = 'tdDialogHeader';
ActivityFeeds.UI.BulkActionService.tdDialogFooter = 'tdDialogFooter';
ActivityFeeds.UI.BulkActionService.divStatus = 'divStatus';
ActivityFeeds.UI.BulkActionService.divMain = 'divMain';
ActivityFeeds.UI.BulkActionService.imgProgress = 'imgProgress';
ActivityFeeds.UI.BulkActionService.statePrompt = 'prompt';
ActivityFeeds.UI.BulkActionService.stateInProgress = 'inprogress';
ActivityFeeds.UI.BulkActionService.stateComplete = 'complete';
ActivityFeeds.UI.BulkActionService.$S = null;
ActivityFeeds.UI.Constants.divUserFollowButton = 'divUserFollowButton';
ActivityFeeds.UI.Constants.divRecordFollowButton = 'divRecordFollowButton';
ActivityFeeds.UI.Constants.recordFollowButton = 'recordFollowButton';
ActivityFeeds.UI.Constants.userFollowButton = 'userFollowButton';
ActivityFeeds.UI.Constants.followButtonState = 'FollowButtonState';
ActivityFeeds.UI.Constants.$1I = Mscrm.CrmUri.create('$webresource:/msdyn_/Images/firstRunArrowRtl.png').toString();
ActivityFeeds.UI.DefaultFilterStateTracker.defaultFilterLinkActiveCssClass = 'active';
ActivityFeeds.UI.DefaultFilterStateTracker.$C = null;
ActivityFeeds.UI.DefaultFilterStateTracker.$U = {};
ActivityFeeds.UI.DefaultFilterStateTracker.$O = null;
ActivityFeeds.UI.DefaultFilterStateTracker.$N = null;
ActivityFeeds.UI.ProfileImageUpdater.$S = null;
ActivityFeeds.UI.WallCommands.postCommandName = 'post';
ActivityFeeds.UI.WallCommands.refreshAllCommandName = 'refreshall';
ActivityFeeds.UI.WallCommands.commentCommandName = 'comment';
ActivityFeeds.UI.WallCommands.showAllComments = 'showallcomments';
ActivityFeeds.UI.WallCommands.genericActionCommandName = 'genericaction';
ActivityFeeds.UI.WallCommands.commentActionCommandName = 'commentaction';
ActivityFeeds.UI.WallCommands.likeActionCommandName = 'likeaction';
ActivityFeeds.UI.WallCommands.deleteActionCommandName = 'deleteaction';
ActivityFeeds.UI.WallCommands.deleteCommentActionCommandName = 'deletecommentaction';
ActivityFeeds.UI.WallCommands.postSourceFilterCommandName = 'postsourcefilteraction';
ActivityFeeds.UI.WallCommands.tearOffCommandName = 'tearoff';
ActivityFeeds.UI.WallCommands.retrieveLikesActionCommandName = 'retrievelikesaction';
ActivityFeeds.UI.WallCommands.viewFilterCommandName = 'viewfilteraction';
ActivityFeeds.UI.WallCommands.viewSubFilterCommandName = 'viewsubfilteraction';
ActivityFeeds.UI.WallCommands.setDefaultCommandName = 'setdefaultaction';
ActivityFeeds.UI.WallCommands.setSystemDefaultFiltersCommandName = 'setsystemdefaultfiltersaction';
ActivityFeeds.UI.WallCommands.modifyUserFiltersCommandName = 'modifyuserfilters';
ActivityFeeds.UI.WallCommands.undoDeletePostCommandName = 'undodeletepost';
ActivityFeeds.UI.WallCommands.undoDeleteCommentCommandName = 'undodeletecomment';
ActivityFeeds.UI.WallCommands.learnMoreCommandName = 'learnmore';
ActivityFeeds.UI.ProfilePage.changeProfileImageLinkId = '#changeProfileImageLink';
ActivityFeeds.UI.ProfilePage.profileImageId = 'userImage';
ActivityFeeds.UI.ProfilePage.userProfileDivId = '#userProfile';
ActivityFeeds.UI.ProfilePage.editProfileDialogDivId = '#editProfileDialog';
ActivityFeeds.UI.WallPage.wallId = 'activityFeedsWall';
ActivityFeeds.UI.WallPage.personalWallCssClass = 'wall';
ActivityFeeds.UI.WallPage.recordWallCssClass = 'recordWall';
FlatMenuPlugin.$$cctor();
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.menuRootSelectorAttributeName = 'MenuRootSelector';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.autoCloseMenuAttributeName = 'AutoCloseMenu';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.menuSctionJQuerySelector = '.menuSection';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.menuPaneJQuerySelector = '.menuPane';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.flatMenuInitiatorDataKey = 'FlatMenuInitiator';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.flatMenuRootDataKey = 'FlatMenuRoot';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.activeMenuItemClassName = 'active';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.activeMenuItemFromKeyboardClassName = 'activekeyboard';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.eventNamespace = '.FlatMenu';
ActivityFeeds.UI.jQueryExtensions.FlatMenuPluginHelper.menuWidth = 155;
TextAreaMentionsPlugin.$$cctor();
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$1Y = 'MentionsId';
ActivityFeeds.UI.jQueryExtensions.TextAreaMentionsPluginHelper.$2 = {};
TextAreaMaxLengthPlugin.$$cctor();
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.maxLengthAttributeName = 'MaxLength';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.maximumLengthAttributeName = 'MaximumLength';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.charactersLeftLabelSelectorAttributeName = 'CharactersLeftLabelSelector';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.charactersLeftTemplateAttributeName = 'CharactersLeftTemplate';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.noCharactersLeftCssAttributeName = 'NoCharactersLeftCss';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.noCharactersLeftDefaultCss = 'noCharactersLeft';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.nonMaxCharactersLeftCssAttributeName = 'NonMaxCharactersLeftCss';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.nonMaxCharactersLeftDefaultCss = 'nonMaxCharactersLeft';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.postButtonSelectorAttributeName = 'PostButtonSelector';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.disableAttributeName = 'disabled';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.noCharactersLeftLabelSelectorAttributeName = 'NoCharactersLeftLabelSelector';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.parentContainerSelectorAttributeName = 'ParentContainerSelector';
ActivityFeeds.UI.jQueryExtensions.TextAreaMaxLengthPluginHelper.enterKeyCode = 13;
//@ sourceMappingURL=file:///d:/dbs/sh/dccm2/0227_160625/cmd/23/Target/retail/amd64/.srcmap
