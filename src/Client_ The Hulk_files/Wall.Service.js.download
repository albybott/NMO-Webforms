Type.registerNamespace('Wall.Service');

Wall.Service.WallType = function() {}
Wall.Service.WallType.prototype = {
    personalWall: 0, 
    recordWall: 1
}
Wall.Service.WallType.registerEnum('Wall.Service.WallType', false);


Wall.Service.WallService = function Wall_Service_WallService(GlobalContext, wallEntityReference) {
    this.$5_0 = {};
    this.$6_0 = GlobalContext;
    this.$0_0 = new CrmSoapServiceProxy.CrmSoapService(GlobalContext);
    this.$9_0 = wallEntityReference;
    this.$A_0 = new Wall.Service.WallServiceFactory(GlobalContext, Wall.Service.Convertors.EntityReferenceConvertor.serviceToWall(wallEntityReference));
    if (!IsNull(GlobalContext.getUserName())) {
        this.$A_0.$1_0.set_name(GlobalContext.getUserName());
    }
    else {
        var $$t_4 = this, $$t_5 = this;
        CrmSoapServiceProxy.Profile.SystemUserCache.getSystemUserById(GlobalContext.getUserId(), function($p1_0) {
            $$t_4.$A_0.$1_0.set_name($p1_0.get_fullName());
        }, function($p1_0) {
        });
    }
}
Wall.Service.WallService.$N = function Wall_Service_WallService$$N($p0, $p1) {
    var $v_0 = _Array.filter(CrmSoapServiceProxy.ObjectModel.WallSavedQueryUserSettings, $p1, function($p1_0) {
        return Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual(($p1_0).get_id(), $p0);
    });
    if ($v_0.length > 0) {
        return $v_0[0];
    }
    return null;
}
Wall.Service.WallService.$J = function Wall_Service_WallService$$J($p0) {
    if ($p0 >= 0) {
        return new (_Nullable$1.$$(CrmSoapServiceProxy.ObjectModel.PostSource))($p0);
    }
    return null;
}
Wall.Service.WallService.prototype = {
    $0_0: null,
    $6_0: null,
    $A_0: null,
    $9_0: null,
    $3_0: null,
    
    get_isSystemDefaultFilterSelected: function Wall_Service_WallService$get_isSystemDefaultFilterSelected() {
        var $v_0 = this.getSelectedWallFilter('PostSourceFilter');
        var $v_1 = this.getSelectedWallFilter('ViewFilter');
        if (window.YAMMER_IS_CONFIGURED_FOR_ORG) {
            return (!$v_0 || ($v_0.get_context()) === 2) && (!$v_1 || Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual($v_1.get_context(), '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7'));
        }
        else if (window.IS_ACTIONHUB_ENABLED && !this.get_wallType()) {
            return (!$v_0 || ($v_0.get_context()) === 3) && (!$v_1 || Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual($v_1.get_context(), '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7'));
        }
        else {
            return (!$v_0 || !($v_0.get_context())) && (!$v_1 || Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual($v_1.get_context(), '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7'));
        }
    },
    
    get_wallEntityReference: function Wall_Service_WallService$get_wallEntityReference() {
        return Wall.Service.Convertors.EntityReferenceConvertor.serviceToWall(this.$9_0);
    },
    
    get_selectedPostSourceFilterContext: function Wall_Service_WallService$get_selectedPostSourceFilterContext() {
        return this.$E_0();
    },
    
    get_wallType: function Wall_Service_WallService$get_wallType() {
        return (IsNull(this.$9_0)) ? 0 : 1;
    },
    
    get_wallDataCache: function Wall_Service_WallService$get_wallDataCache() {
        return this.$3_0;
    },
    
    set_wallDataCache: function Wall_Service_WallService$set_wallDataCache(value) {
        this.$3_0 = value;
        return value;
    },
    
    get_isAsync: function Wall_Service_WallService$get_isAsync() {
        return this.$0_0.get_isAsync();
    },
    
    set_isAsync: function Wall_Service_WallService$set_isAsync(value) {
        this.$0_0.set_isAsync(value);
        return value;
    },
    
    updateRegardingEntity: function Wall_Service_WallService$updateRegardingEntity(wallEntityReference) {
        this.$3_0 = null;
        this.$9_0 = wallEntityReference;
        this.$A_0 = new Wall.Service.WallServiceFactory(this.$6_0, Wall.Service.Convertors.EntityReferenceConvertor.serviceToWall(wallEntityReference));
    },
    
    retrievePosts: function Wall_Service_WallService$retrievePosts(retrievePostsRequest, retrievePostsCallback) {
        if (!IsNull(this.$3_0)) {
            var $$t_F = this;
            Xrm.XrmPerformance.measureTime('AF_CachedData_Render', function() {
                return retrievePostsCallback($$t_F.$3_0);
            });
            this.$3_0 = null;
            Xrm.Tracing.XrmTraceHelper.traceLog(this, 'responded with cached posts');
            return;
        }
        var $v_0 = this.$O_0();
        var $v_1;
        var $v_2 = this.$E_0();
        if ($v_0 && $v_0.id === this.$6_0.getUserId()) {
            $v_1 = Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference(this.$6_0.getUserId(), 'systemuser');
        }
        else {
            $v_1 = this.$9_0;
        }
        if (IsNull($v_1)) {
            if ($v_0 && $v_0.id !== '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7') {
                var $v_3 = Xrm.Internal.startMetricsStopwatch('ActivityFeeds_RetrievePosts_RetrieveWallByView');
                $v_3.start();
                var $$t_G = this, $$t_H = this;
                this.$0_0.retrieveWallByView($v_0, retrievePostsRequest.get_pageSize(), retrievePostsRequest.get_pageNumber(), 2, retrievePostsRequest.get_pagingCookie(), $v_2, function($p1_0) {
                    $v_3.stop();
                    var $v_4 = Xrm.Internal.startMetricsStopwatch('AF_RetrieveWallByView_Render');
                    $v_4.start();
                    retrievePostsCallback($$t_G.$I_0($p1_0, $v_0, $v_2));
                    $v_4.stop();
                }, function($p1_0) {
                    $v_3.stop();
                    retrievePostsCallback($$t_H.$K_0($p1_0, $v_0, $v_2, $p1_0.get_textStatus(), $p1_0.get_error(), 11));
                });
            }
            else {
                Xrm.Tracing.XrmTraceHelper.traceLog(this, 'retrieving user wall...');
                Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_RetrievePosts_RetrieveUserWall');
                var $$t_I = this, $$t_J = this;
                this.$0_0.retrieveUserWall(retrievePostsRequest.get_pageSize(), retrievePostsRequest.get_pageNumber(), 2, retrievePostsRequest.get_startDate(), retrievePostsRequest.get_endDate(), $v_2, function($p1_0) {
                    Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_RetrievePosts_RetrieveUserWall_End');
                    Xrm.Tracing.XrmTraceHelper.traceLog($$t_I, 'user wall data retrieved');
                    var $v_5 = Xrm.Internal.startMetricsStopwatch('AF_RetrieveUserWall_Render');
                    $v_5.start();
                    retrievePostsCallback($$t_I.$I_0($p1_0, $v_0, $v_2));
                    $v_5.stop();
                }, function($p1_0) {
                    Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_RetrievePosts_RetrieveUserWall_Error');
                    Xrm.Tracing.XrmTraceHelper.traceError($$t_J, 'failed to retrieve user wall data');
                    retrievePostsCallback($$t_J.$K_0($p1_0, $v_0, $v_2, $p1_0.get_textStatus(), $p1_0.get_error(), 0));
                });
            }
        }
        else {
            Xrm.Tracing.XrmTraceHelper.traceLog(this, 'retrieving record wall...');
            Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_RetrievePosts_RetrieveRecordWall');
            var $$t_K = this, $$t_L = this;
            this.$0_0.retrieveRecordWall($v_1, retrievePostsRequest.get_pageSize(), retrievePostsRequest.get_pageNumber(), 2, retrievePostsRequest.get_startDate(), retrievePostsRequest.get_endDate(), $v_2, function($p1_0) {
                Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_RetrievePosts_RetrieveRecordWall_End');
                Xrm.Tracing.XrmTraceHelper.traceLog($$t_K, 'record wall data retrieved');
                var $v_6 = Xrm.Internal.startMetricsStopwatch('AF_RetrieveRecordWall_Render');
                $v_6.start();
                retrievePostsCallback($$t_K.$I_0($p1_0, $v_0, $v_2));
                $v_6.stop();
            }, function($p1_0) {
                Xrm.Internal.setPerfMarkerTimestamp('ActivityFeeds_RetrievePosts_RetrieveRecordWall_Error');
                Xrm.Tracing.XrmTraceHelper.traceError($$t_L, 'failed to retrieve record wall data');
                retrievePostsCallback($$t_L.$K_0($p1_0, $v_0, $v_2, $p1_0.get_textStatus(), $p1_0.get_error(), 0));
            });
        }
    },
    
    retrieveAllPosts: function Wall_Service_WallService$retrieveAllPosts(retrievePostsRequest, retrievePostsCallback) {
        throw Error.notImplemented('The method or operation is not implemented.');
    },
    
    $I_0: function Wall_Service_WallService$$I_0($p0, $p1, $p2) {
        var $v_0 = new Wall.Service.Messages.RetrievePostsResponse();
        $v_0.$2_2 = $p2;
        $v_0.$D_2 = $p1;
        if (!$p0 || !$p0.entities || !$p0.entities.length) {
            $v_0.set_posts(new Array(0));
        }
        else {
            $v_0.set_posts(Wall.Service.Convertors.PostConvertor.serviceToWallCollection($p0.entities));
            $v_0.set_morePosts($p0.moreRecords);
            $v_0.set_pagingCookie($p0.pagingCookie);
            var $$t_8 = this;
            Array.forEach($v_0.get_posts(), function($p1_0) {
                var $v_1 = $p1_0;
                $v_1.set_text($$t_8.formatPostTextForRendering($v_1.get_text()));
                if ($v_1.get_comments()) {
                    $v_1.get_comments().reverse();
                    Array.forEach($v_1.get_comments(), function($p2_0) {
                        var $v_2 = $p2_0;
                        $v_2.set_text($$t_8.formatCommentTextForRendering($v_2.get_text()));
                    });
                }
            });
        }
        return $v_0;
    },
    
    $K_0: function Wall_Service_WallService$$K_0($p0, $p1, $p2, $p3, $p4, $p5) {
        var $v_0 = new Wall.Service.Messages.RetrievePostsResponse();
        $v_0.set_errorMessage(this.$4_0($p0, $p5));
        $v_0.$D_2 = $p1;
        $v_0.$2_2 = $p2;
        return $v_0;
    },
    
    retrieveComments: function Wall_Service_WallService$retrieveComments(retrieveCommentsRequest, retrieveCommentsCallback) {
        var $v_0 = (retrieveCommentsRequest.get_pageSize() > 0) ? String.format('count=\'{0}\'', retrieveCommentsRequest.get_pageSize()) : '';
        var $v_1 = '<fetch version=\"1.0\" output-format=\"xml-platform\" mapping=\"logical\" distinct=\"false\" ' + $v_0 + ' page=\'1\' returntotalrecordcount=\'true\' >' + '<entity name=\"postcomment\">' + '<attribute name=\"postcommentid\" />' + '<attribute name=\"text\" />' + '<attribute name=\"createdon\" />' + '<attribute name=\"postid\" />' + '<attribute name=\"createdby\" />' + '<order attribute=\"createdon\" descending=\"true\" />' + '<filter type=\"and\">' + '<condition attribute=\"postid\" operator=\"eq\" value=\"' + Sales.Common.CrmSoapServiceProxy.Utils.EncodingUtils.htmlEncode(retrieveCommentsRequest.get_parentPostId()) + '\" />' + '</filter>' + '</entity>' + '</fetch>';
        var $v_2 = Xrm.Internal.startMetricsStopwatch('ActivityFeeds_RetrieveComments');
        $v_2.start();
        var $$t_C = this, $$t_D = this;
        this.$0_0.retrieveMultiple($v_1, CrmSoapServiceProxy.ObjectModel.PostComment).then(function($p1_0) {
            $v_2.stop();
            var $v_3 = Xrm.Internal.startMetricsStopwatch('AF_RetrieveComments_Render');
            $v_3.start();
            $p1_0.entities.reverse();
            var $v_4 = new Wall.Service.Messages.RetrieveCommentsResponse();
            $v_4.set_comments(Wall.Service.Convertors.PostCommentConvertor.serviceToWallCollection($p1_0.entities));
            Array.forEach($v_4.get_comments(), function($p2_0) {
                var $v_5 = $p2_0;
                $v_5.set_text($$t_C.formatCommentTextForRendering($v_5.get_text()));
            });
            $v_4.set_totalCommentCount($p1_0.totalRecordCount);
            retrieveCommentsCallback($v_4);
            $v_3.stop();
        }, function($p1_0) {
            $v_2.stop();
            var $v_6 = new Wall.Service.Messages.RetrieveCommentsResponse();
            $v_6.set_errorMessage($$t_D.$4_0($p1_0, 1));
            retrieveCommentsCallback($v_6);
        });
    },
    
    retrieveLikes: function Wall_Service_WallService$retrieveLikes(retrieveLikesRequest, retrieveLikesCallback) {
        var $v_0 = (retrieveLikesRequest.get_pageSize() > 0) ? String.format('count=\'{0}\' ', retrieveLikesRequest.get_pageSize()) : '';
        var $v_1 = (retrieveLikesRequest.get_pageNumber() > 0) ? String.format('page=\'{0}\' ', retrieveLikesRequest.get_pageNumber()) : '';
        var $v_2 = '<fetch version=\"1.0\" output-format=\"xml-platform\" mapping=\"logical\" distinct=\"true\" ' + $v_0 + $v_1 + 'returntotalrecordcount=\'true\'>' + '<entity name=\"systemuser\">' + '<attribute name=\"fullname\"/>' + '<attribute name=\"internalemailaddress\"/>' + '<attribute name=\"title\"/>' + '<attribute name=\"systemuserid\"/>' + '<order descending=\"false\" attribute=\"fullname\"/>' + '<link-entity name=\"postlike\" alias=\"aa\" to=\"systemuserid\" from=\"createdby\">' + '<filter type=\"and\">' + '<condition attribute=\"postid\" value=\"{' + Sales.Common.CrmSoapServiceProxy.Utils.EncodingUtils.htmlEncode(retrieveLikesRequest.get_parentPostId()) + '}\" operator=\"eq\"/>' + '</filter>' + '</link-entity>' + '</entity>' + '</fetch>';
        var $$t_9 = this, $$t_A = this;
        this.$0_0.retrieveMultiple($v_2, Sales.Common.CrmSoapServiceProxy.ObjectModel.SystemUser).then(function($p1_0) {
            var $v_3 = new Wall.Service.Messages.RetrieveLikesResponse();
            $p1_0.entities.reverse();
            $v_3.users = Wall.Service.Convertors.SystemUserConvertor.serviceToWallCollection($p1_0.entities);
            $v_3.moreLikes = $p1_0.moreRecords;
            $v_3.pageNumber = retrieveLikesRequest.get_pageNumber() + 1;
            $v_3.parentPostId = retrieveLikesRequest.get_parentPostId();
            retrieveLikesCallback($v_3);
        }, function($p1_0) {
            var $v_4 = new Wall.Service.Messages.RetrieveLikesResponse();
            $v_4.set_errorMessage($$t_A.$4_0($p1_0, 8));
            retrieveLikesCallback($v_4);
        });
    },
    
    postMessage: function Wall_Service_WallService$postMessage(post, postCallback) {
        var $v_0 = Wall.Service.Convertors.PostConvertor.wallToService(post);
        $v_0.set_id(null);
        var $$t_7 = this, $$t_8 = this;
        this.$0_0.create($v_0).then(function($p1_0) {
            var $v_1 = new Wall.Service.Messages.CreatePostResponse();
            $v_1.set_postId($p1_0.id);
            postCallback($v_1);
        }, function($p1_0) {
            var $v_2 = new Wall.Service.Messages.CreatePostResponse();
            $v_2.set_errorMessage($$t_8.$4_0($p1_0, 2));
            $v_2.set_revertPost($$t_8.$M_0($p1_0));
            postCallback($v_2);
        });
    },
    
    postLike: function Wall_Service_WallService$postLike(postId, createLikeCallback) {
        var $v_0 = new CrmSoapServiceProxy.ObjectModel.PostLike();
        $v_0.set_parentPost(new Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference());
        $v_0.get_parentPost().id = postId;
        var $$t_7 = this, $$t_8 = this;
        this.$0_0.create($v_0).then(function($p1_0) {
            var $v_1 = new Wall.Service.Messages.CreateLikeResponse();
            $v_1.$C_1 = $p1_0.id;
            createLikeCallback($v_1);
        }, function($p1_0) {
            var $v_2 = new Wall.Service.Messages.CreateLikeResponse();
            if (!IsNull($p1_0.get_organizationServiceFault()) && $p1_0.get_organizationServiceFault().get_errorCode() === -2147220937) {
                $v_2.$C_1 = '0000';
            }
            else {
                $v_2.set_errorMessage($$t_8.$4_0($p1_0, 6));
            }
            createLikeCallback($v_2);
        });
    },
    
    postComment: function Wall_Service_WallService$postComment(comment, createCommentCallback) {
        var $v_0 = Wall.Service.Convertors.PostCommentConvertor.wallToService(comment);
        $v_0.set_id(null);
        var $$t_7 = this, $$t_8 = this;
        this.$0_0.create($v_0).then(function($p1_0) {
            var $v_1 = new Wall.Service.Messages.CreateCommentResponse();
            $v_1.set_commentId($p1_0.id);
            createCommentCallback($v_1);
        }, function($p1_0) {
            var $v_2 = new Wall.Service.Messages.CreateCommentResponse();
            $v_2.set_errorMessage($$t_8.$4_0($p1_0, 3));
            $v_2.set_revertComment($$t_8.$M_0($p1_0));
            createCommentCallback($v_2);
        });
    },
    
    getWallActions: function Wall_Service_WallService$getWallActions(actionType, context) {
        if (_String.isNullOrEmpty(actionType)) {
            throw Error.argumentNull('actionType', 'action type is empty');
        }
        switch (actionType) {
            case 'postaction':
                return this.$Q_0(context);
            case 'commentaction':
                return this.$P_0(context);
            default:
                throw Error.create('invlid action type');
        }
    },
    
    $Q_0: function Wall_Service_WallService$$Q_0($p0) {
        if (IsNull($p0)) {
            throw Error.argumentNull('context', 'context is emtpy');
        }
        if (!(Wall.Service.ObjectModel.Post.isInstanceOfType($p0))) {
            throw Error.create('invalid context type');
        }
        var $v_0 = $p0;
        if (_String.isNullOrEmpty($v_0.get_postId()) || $v_0.get_postId().startsWith('temp')) {
            return new Array(0);
        }
        var $v_1 = new (Sales.Common.Framework.List$1.$$(Wall.Service.ObjectModel.WallAction))();
        $v_1.add(new Wall.Service.ObjectModel.WallAction((IsNull($v_0.get_likeId())) ? ActivityFeeds.Resources.WallService.like : ActivityFeeds.Resources.WallService.unlike, null, null, (IsNull($v_0.get_likeId())) ? ActivityFeeds.Resources.ActivityFeedsUI.likeToolTip : ActivityFeeds.Resources.ActivityFeedsUI.unlikeToolTip, true, 'likeaction', null, $v_0, false, 'postaction'));
        $v_1.add(new Wall.Service.ObjectModel.WallAction(ActivityFeeds.Resources.WallService.comment, null, null, ActivityFeeds.Resources.WallService.commentToolTip, true, 'commentaction', null, $v_0, false, 'postaction'));
        if ($v_0.get_deleteEnabled()) {
            $v_1.add(new Wall.Service.ObjectModel.WallAction(null, Wall.Service.WallService.$B, Wall.Service.WallService.$B, ActivityFeeds.Resources.WallService.deletePostToolTip, $v_0.get_deleteEnabled(), 'deleteaction', null, $v_0, false, 'postaction'));
        }
        return $v_1.toArray();
    },
    
    $P_0: function Wall_Service_WallService$$P_0($p0) {
        if (IsNull($p0)) {
            throw Error.argumentNull('context is emtpy');
        }
        if (!(Wall.Service.ObjectModel.Comment.isInstanceOfType($p0))) {
            throw Error.create('invalid context type');
        }
        var $v_0 = $p0;
        if (_String.isNullOrEmpty($v_0.get_commentId()) || $v_0.get_commentId().startsWith('temp')) {
            return new Array(0);
        }
        var $v_1 = new (Sales.Common.Framework.List$1.$$(Wall.Service.ObjectModel.WallAction))();
        if ($v_0.get_deleteEnabled()) {
            $v_1.add(new Wall.Service.ObjectModel.WallAction(null, Wall.Service.WallService.$B, Wall.Service.WallService.$B, ActivityFeeds.Resources.WallService.deleteCommentToolTip, true, 'deletecommentaction', null, $v_0, false, 'commentaction'));
        }
        return $v_1.toArray();
    },
    
    getWallActionsAsync: function Wall_Service_WallService$getWallActionsAsync(actionType, context, getWallActionsSuccessCallback, getWallActionsFailureCallback) {
        throw Error.create('not implemented');
    },
    
    getWallFilters: function Wall_Service_WallService$getWallFilters(filterType, context) {
        var $v_0 = new Array(0);
        if (filterType === 'PostSourceFilter') {
            var $v_1 = this.$E_0();
            if (!window.YAMMER_IS_CONFIGURED_FOR_ORG) {
                $v_0[$v_0.length] = Wall.Service.ObjectModel.WallFilter.create(ActivityFeeds.Resources.WallService.allFilter, ActivityFeeds.Resources.WallService.allFilterToolTip, 'postsourcefilteraction', null, 0, 'PostSourceFilter', !$v_1);
                $v_0[$v_0.length] = Wall.Service.ObjectModel.WallFilter.create(ActivityFeeds.Resources.WallService.systemPostsFilter, ActivityFeeds.Resources.WallService.systemPostsFilterToolTip, 'postsourcefilteraction', null, 1, 'PostSourceFilter', $v_1 === 1);
                $v_0[$v_0.length] = Wall.Service.ObjectModel.WallFilter.create(ActivityFeeds.Resources.WallService.userPostsFilter, ActivityFeeds.Resources.WallService.userPostsFilterToolTip, 'postsourcefilteraction', null, 2, 'PostSourceFilter', $v_1 === 2);
            }
            else {
                if (!Mscrm.Utilities.isIosDevice()) {
                    $v_0[$v_0.length] = Wall.Service.ObjectModel.WallFilter.create(ActivityFeeds.Resources.WallService.userPostsFilterForYammer, ActivityFeeds.Resources.WallService.userPostsFilterToolTipForYammer, 'postsourcefilteraction', null, 2, 'PostSourceFilter', $v_1 === 2);
                }
                $v_0[$v_0.length] = Wall.Service.ObjectModel.WallFilter.create(ActivityFeeds.Resources.WallService.systemPostsFilterForYammer, ActivityFeeds.Resources.WallService.systemPostsFilterToolTipForYammer, 'postsourcefilteraction', null, 1, 'PostSourceFilter', $v_1 === 1);
            }
            if (window.IS_ACTIONHUB_ENABLED && !this.get_wallType() && !this.$R_0()) {
                $v_0[$v_0.length] = Wall.Service.ObjectModel.WallFilter.create(ActivityFeeds.Resources.WallService.userPostsFilterForActionHub, ActivityFeeds.Resources.WallService.userPostsFilterToolTipForActionHub, 'postsourcefilteraction', null, 3, 'PostSourceFilter', $v_1 === 3);
            }
        }
        return $v_0;
    },
    
    retrieveWallFilters: function Wall_Service_WallService$retrieveWallFilters(filterType, context, retrieveFiltersCallback) {
        var $v_0 = new Wall.Service.Messages.RetrieveWallFiltersResponse();
        if (filterType !== 'ViewFilter') {
            $v_0.set_wallFilters(new Array(0));
            return;
        }
        var $v_1 = '\r\n<fetch version=\'1.0\' output-format=\'xml-platform\' mapping=\'logical\' distinct=\'false\'>\r\n  <entity name=\'msdyn_wallsavedqueryusersettings\'>\r\n\t<attribute name=\'msdyn_wallsavedqueryusersettingsid\' /> \r\n\t<attribute name=\'msdyn_wallsavedqueryid\' />\r\n\t<attribute name=\'msdyn_savedqueryname\' />\r\n\t<attribute name=\'msdyn_entityname\' />\r\n\t<attribute name=\'msdyn_otc\' />\r\n\t<attribute name=\'msdyn_entitydisplayname\' />\r\n\t<attribute name=\'msdyn_isvisible\' />\r\n\t<attribute name=\'msdyn_isvirtual\' />\r\n\t<attribute name=\'msdyn_default\' />\r\n\t<filter type=\'and\'>\r\n\t  <condition attribute=\'msdyn_userid\' operator=\'eq-userid\' />\r\n\t  <condition attribute=\'msdyn_isvirtual\' operator=\'eq\' value=\'1\' /> \r\n\t  <condition attribute=\'msdyn_isvisible\' operator=\'eq\' value=\'1\' />\r\n\t  <condition attribute=\'msdyn_isfollowing\' operator=\'eq\' value=\'1\' />\r\n\t  <condition attribute=\'msdyn_includewallinresponse\' operator=\'eq\' value=\'1\' />\r\n\t</filter>\r\n  </entity>\r\n</fetch>';
        var $$t_7 = this, $$t_8 = this;
        this.$0_0.retrieveMultiple($v_1, [ CrmSoapServiceProxy.ObjectModel.WallSavedQueryUserSettings, CrmSoapServiceProxy.ObjectModel.Post, CrmSoapServiceProxy.ObjectModel.PostComment ]).then(function($p1_0) {
            $v_0.set_wallFilters($$t_7.$S_0($p1_0.entities, $$t_7.$6_0.getUserId()));
            retrieveFiltersCallback($v_0);
        }, function($p1_0) {
            $v_0.set_errorMessage($$t_8.$4_0($p1_0, 9));
            retrieveFiltersCallback($v_0);
        });
    },
    
    $S_0: function Wall_Service_WallService$$S_0($p0, $p1) {
        var $v_0 = new Array(0);
        var $v_1 = Wall.Service.ObjectModel.ViewWallFilter.create(ActivityFeeds.Resources.WallService.youFollowFilterSectionTitle, ActivityFeeds.Resources.WallService.youFollowFilterSectionToolTip, 'viewfilteraction', null, null, 'ViewFilter', false);
        $v_1.set_subFilters(new Array(0));
        var $v_2 = Wall.Service.ObjectModel.ViewWallFilter.create(ActivityFeeds.Resources.WallService.postsAboutFilterSectionTitle, ActivityFeeds.Resources.WallService.postsAboutFilterSectionToolTip, 'viewfilteraction', null, null, 'ViewFilter', false);
        $v_2.set_subFilters(new Array(0));
        $v_0[$v_0.length] = $v_1;
        $v_0[$v_0.length] = $v_2;
        var $v_3 = Wall.Service.WallService.$N('01c866a5-4f14-48eb-a03f-d8ab0bfc50f7', $p0);
        var $v_4 = Wall.Service.ObjectModel.ViewWallFilter.create(ActivityFeeds.Resources.WallService.allRecords, ActivityFeeds.Resources.WallService.allRecords, 'viewfilteraction', null, '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7', 'ViewFilter', ($v_3) ? $v_3.get_defaultValue() >= 0 : false, ($v_3) ? Wall.Service.WallService.$J($v_3.get_defaultValue()) : null);
        $v_4.relativeImageUrl = '/_imgs/ico_16_9801.gif';
        $v_1.get_subFilters()[$v_1.get_subFilters().length] = $v_4;
        $v_4.$8_1 = $v_3;
        var $v_5 = Wall.Service.WallService.$N('9c91ff7f-3df9-4aa9-9f00-aaa2beb3192f', $p0);
        var $v_6 = Wall.Service.ObjectModel.ViewWallFilter.create(ActivityFeeds.Resources.WallService.atMe, ActivityFeeds.Resources.WallService.atMe, 'viewsubfilteraction', null, '9c91ff7f-3df9-4aa9-9f00-aaa2beb3192f', 'ViewFilter', ($v_5) ? $v_5.get_defaultValue() >= 0 : false, ($v_5) ? Wall.Service.WallService.$J($v_5.get_defaultValue()) : null, 'systemuser');
        $v_2.get_subFilters()[$v_2.get_subFilters().length] = $v_6;
        $v_6.$8_1 = $v_5;
        var $v_7 = false;
        for (var $$arr_A = $p0, $$len_B = $$arr_A.length, $$idx_C = 0; $$idx_C < $$len_B; ++$$idx_C) {
            var $v_9 = $$arr_A[$$idx_C];
            if (!Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual($v_9.get_id(), '9c91ff7f-3df9-4aa9-9f00-aaa2beb3192f') && !Sales.Common.CrmSoapServiceProxy.Utils.Utils.areGuidEqual($v_9.get_id(), '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7')) {
                var $v_A = Wall.Service.ObjectModel.ViewWallFilter.create($v_9.get_savedQueryName(), $v_9.get_savedQueryName(), ($v_9.get_isFollowing()) ? 'viewfilteraction' : 'viewsubfilteraction', null, $v_9.get_id(), 'ViewFilter', $v_9.get_defaultValue() >= 0, Wall.Service.WallService.$J($v_9.get_defaultValue()), $v_9.get_entityName());
                if ($v_9.get_isFollowing()) {
                    $v_1.get_subFilters()[$v_1.get_subFilters().length] = $v_A;
                }
                else {
                    $v_2.get_subFilters()[$v_2.get_subFilters().length] = $v_A;
                }
                $v_A.$8_1 = $v_9;
            }
            $v_7 = $v_7 || $v_9.get_defaultValue() >= 0;
        }
        var $$t_M = this;
        $v_1.get_subFilters().sort(function($p1_0, $p1_1) {
            if ((($p1_0).get_context()) === '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7') {
                return -1;
            }
            if ((($p1_1).get_context()) === '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7') {
                return 1;
            }
            return ($p1_0).get_text().localeCompare(($p1_1).get_text());
        });
        if (!$v_7) {
            $v_4.set_isSelected(true);
            $v_4.$2_1 = Wall.Service.WallService.$J(0);
        }
        var $v_8 = new (Sales.Common.Framework.List$1.$$(Wall.Service.ObjectModel.ViewWallFilter))();
        $v_8.addRange($v_1.get_subFilters());
        $v_8.addRange($v_2.get_subFilters());
        for (var $v_B = 0; $v_B < $v_8.get_count(); $v_B++) {
            var $v_C = $v_8.get_item($v_B);
            if ($v_C.get_isSelected() && $v_C.$8_1 && $v_C.$8_1.relatedEntities) {
                var $v_D = $v_C.$8_1.relatedEntities.get_item('wallSavedQueryUserSettings_wall');
                if ($v_D && $v_D.get_entities() && $v_D.get_entities().length > 0) {
                    var $v_E = new Sales.Common.CrmSoapServiceProxy.Messages.RetrieveMultipleResponse(null, null);
                    $v_E.entities = $v_D.get_entities();
                    if ((('TotalRecordCount') in $v_D.get_entities()[0].attributes)) {
                        $v_E.totalRecordCount = $v_D.get_entities()[0].attributes['TotalRecordCount'];
                    }
                    if ((('MoreRecords') in $v_D.get_entities()[0].attributes)) {
                        $v_E.moreRecords = $v_D.get_entities()[0].attributes['MoreRecords'];
                    }
                    if ((('PagingCookie') in $v_D.get_entities()[0].attributes)) {
                        $v_E.pagingCookie = $v_D.get_entities()[0].attributes['PagingCookie'];
                    }
                    $v_C.$3_1 = this.$I_0($v_E, Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference($v_C.get_context(), 'savedquery'), ($v_C.$2_1.get_hasValue()) ? $v_C.$2_1.get_value() : ((window.YAMMER_IS_CONFIGURED_FOR_ORG) ? 2 : 0));
                }
            }
        }
        return $v_0;
    },
    
    $E_0: function Wall_Service_WallService$$E_0() {
        var $v_0;
        if (window.YAMMER_IS_CONFIGURED_FOR_ORG && !Mscrm.Utilities.isIosDevice()) {
            $v_0 = 2;
        }
        else if (window.IS_ACTIONHUB_ENABLED && !this.get_wallType()) {
            $v_0 = 1;
        }
        else {
            $v_0 = 0;
        }
        if ((('PostSourceFilter') in this.$5_0)) {
            $v_0 = (this.$5_0['PostSourceFilter']).get_context();
        }
        return $v_0;
    },
    
    $O_0: function Wall_Service_WallService$$O_0() {
        if ((('ViewFilter') in this.$5_0) && this.$5_0['ViewFilter']) {
            var $v_0 = new Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference();
            $v_0.logicalName = 'savedquery';
            $v_0.id = (this.$5_0['ViewFilter']).get_context();
            return $v_0;
        }
        else {
            return null;
        }
    },
    
    selectWallFilter: function Wall_Service_WallService$selectWallFilter(wallFilter) {
        if (!IsNull(wallFilter)) {
            this.$5_0[wallFilter.get_filterType()] = wallFilter;
        }
    },
    
    getWallServiceFactory: function Wall_Service_WallService$getWallServiceFactory() {
        return this.$A_0;
    },
    
    $M_0: function Wall_Service_WallService$$M_0($p0) {
        if (!IsNull($p0.get_organizationServiceFault()) && $p0.get_organizationServiceFault().get_errorCode() === -2147220960) {
            return true;
        }
        else {
            return false;
        }
    },
    
    $4_0: function Wall_Service_WallService$$4_0($p0, $p1) {
        var $v_0 = ActivityFeeds.Resources.WallService.errorMessage;
        if (!IsNull($p0.get_organizationServiceFault())) {
            if ($p0.get_organizationServiceFault().get_errorCode() === -2147220874) {
                $v_0 = ActivityFeeds.Resources.WallService.privilegeCreateIsDisabledForOrganizationErrorMessage;
            }
            else if ($p1 === 3) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                    case -2147187962:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToComment;
                        break;
                    case -2147220969:
                    default:
                        $v_0 = ActivityFeeds.Resources.WallService.commentFailedGenericErrorMessage;
                        break;
                }
            }
            else if ($p1 === 2) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147158364:
                        $v_0 = ActivityFeeds.Resources.WallService.mustContainAtLeastACharInMentionErrorMessage;
                        break;
                    case -2147220960:
                    case -2147220969:
                    default:
                        $v_0 = ActivityFeeds.Resources.WallService.postFailedGenericErrorMessage;
                        break;
                }
            }
            else if (!$p1) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                    case -2147187962:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToReadErrorMessage;
                        break;
                }
            }
            else if ($p1 === 11) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToRetrievePostsByViewErrorMessage;
                        break;
                    case -2147220969:
                        $v_0 = ActivityFeeds.Resources.WallService.viewNotFoundErrorMessage;
                        break;
                }
            }
            else if ($p1 === 6) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                    case -2147187962:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToLike;
                        break;
                    case -2147220969:
                    default:
                        $v_0 = ActivityFeeds.Resources.WallService.likeFailedGenericErrorMessage;
                        break;
                }
            }
            else if ($p1 === 7) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                    case -2147187962:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToUnlike;
                        break;
                    case -2147220969:
                    default:
                        $v_0 = ActivityFeeds.Resources.WallService.unlikeFailedGenericErrorMessage;
                        break;
                }
            }
            else if ($p1 === 8) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                    case -2147187962:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToRetrieveLikesErrorMessage;
                        break;
                    case -2147220969:
                    default:
                        $v_0 = ActivityFeeds.Resources.WallService.retrieveLikeFailedGenericErrorMessage;
                        break;
                }
            }
            else if ($p1 === 9) {
                switch ($p0.get_organizationServiceFault().get_errorCode()) {
                    case -2147220960:
                    case -2147187962:
                        $v_0 = ActivityFeeds.Resources.WallService.noPrivilegeToRetrievePostsByViewErrorMessage;
                        break;
                }
            }
        }
        else {
            $v_0 = ActivityFeeds.Resources.WallService.connectivityProblemErrorMessage;
        }
        return $v_0;
    },
    
    deletePost: function Wall_Service_WallService$deletePost(post, deletePostCallback) {
        var $v_0 = new Wall.Service.Messages.DeletePostResponse();
        var $$t_5 = this, $$t_6 = this;
        this.$0_0.deleteEntity(post.get_postId(), 'post').then(function($p1_0) {
            deletePostCallback($v_0);
        }, function($p1_0) {
            if (IsNull($p1_0.get_organizationServiceFault()) || IsNull($p1_0.get_organizationServiceFault().get_errorCode()) || $p1_0.get_organizationServiceFault().get_errorCode() !== -2147220969) {
                $v_0.set_errorMessage($$t_6.$4_0($p1_0, 4));
            }
            deletePostCallback($v_0);
        });
    },
    
    deleteLike: function Wall_Service_WallService$deleteLike(postLikeId, deleteLikeCallback) {
        var $v_0 = new Wall.Service.Messages.DeleteLikeResponse();
        var $$t_5 = this, $$t_6 = this;
        this.$0_0.deleteEntity(postLikeId, 'postlike').then(function($p1_0) {
            deleteLikeCallback($v_0);
        }, function($p1_0) {
            if (IsNull($p1_0.get_organizationServiceFault()) || IsNull($p1_0.get_organizationServiceFault().get_errorCode())) {
                $v_0.set_errorMessage($$t_6.$4_0($p1_0, 7));
            }
            deleteLikeCallback($v_0);
        });
    },
    
    deleteComment: function Wall_Service_WallService$deleteComment(comment, deleteCommentCallback) {
        var $v_0 = new Wall.Service.Messages.DeleteCommentResponse();
        var $$t_5 = this, $$t_6 = this;
        this.$0_0.deleteEntity(comment.get_commentId(), 'postcomment').then(function($p1_0) {
            deleteCommentCallback($v_0);
        }, function($p1_0) {
            if (IsNull($p1_0.get_organizationServiceFault()) || IsNull($p1_0.get_organizationServiceFault().get_errorCode()) || $p1_0.get_organizationServiceFault().get_errorCode() !== -2147220969) {
                $v_0.set_errorMessage($$t_6.$4_0($p1_0, 5));
            }
            deleteCommentCallback($v_0);
        });
    },
    
    formatPostTextForRendering: function Wall_Service_WallService$formatPostTextForRendering(postText) {
        return Wall.Control.Utils.WallUtils.formatTextForRendering(postText);
    },
    
    formatCommentTextForRendering: function Wall_Service_WallService$formatCommentTextForRendering(commentText) {
        return Wall.Control.Utils.WallUtils.formatTextForRendering(commentText);
    },
    
    setDefaultFilter: function Wall_Service_WallService$setDefaultFilter(wallFilter, setDefaultFilterCallback) {
        var $v_0 = new Wall.Service.Messages.SetDefaultFilterResponse();
        var $v_1 = new CrmSoapServiceProxy.ObjectModel.WallSavedQueryUserSettings();
        $v_1.set_isVisible(false);
        $v_1.set_userId(Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference(this.$6_0.getUserId(), 'systemuser'));
        $v_1.set_id(this.$6_0.getUserId());
        var $v_2 = this.$E_0();
        if (wallFilter && wallFilter.get_context()) {
            $v_1.set_data(wallFilter.get_context() + ';setdefault;' + $v_2);
        }
        else {
            $v_1.set_data(';resetdefault;');
        }
        var $$t_7 = this, $$t_8 = this;
        this.$0_0.update($v_1).then(function($p1_0) {
            setDefaultFilterCallback($v_0);
        }, function($p1_0) {
            $v_0.set_errorMessage($$t_8.$4_0($p1_0, 10));
            setDefaultFilterCallback($v_0);
        });
    },
    
    getSelectedWallFilter: function Wall_Service_WallService$getSelectedWallFilter(filterType) {
        if (!((filterType) in this.$5_0)) {
            return null;
        }
        return this.$5_0[filterType];
    },
    
    dispose: function Wall_Service_WallService$dispose() {
        this.$3_0 = null;
    },
    
    $R_0: function Wall_Service_WallService$$R_0() {
        if (!Xrm.Page.data) {
            return false;
        }
        return !Xrm.Page.data.entity.getEntityReference().name;
    }
}


Wall.Service.WallServiceFactory = function Wall_Service_WallServiceFactory(clientContext, regardingEntity) {
    this.$1_0 = new Wall.Service.ObjectModel.EntityReference();
    this.$1_0.set_id(Sales.Common.CrmSoapServiceProxy.Utils.Utils.parseGuid(clientContext.getUserId()));
    this.$1_0.set_logicalName('systemuser');
    this.$1_0.set_name(ActivityFeeds.Resources.WallService.you);
    this.$7_0 = (IsNull(regardingEntity)) ? this.$7_0 = this.$1_0 : this.$7_0 = regardingEntity;
    if (!IsNull(this.$7_0)) {
        this.$7_0.set_id(Sales.Common.CrmSoapServiceProxy.Utils.Utils.parseGuid(this.$7_0.get_id()));
    }
}
Wall.Service.WallServiceFactory.prototype = {
    $1_0: null,
    $7_0: null,
    
    get_currentUser: function Wall_Service_WallServiceFactory$get_currentUser() {
        return this.$1_0;
    },
    
    set_currentUser: function Wall_Service_WallServiceFactory$set_currentUser(value) {
        this.$1_0 = value;
        return value;
    },
    
    createPost: function Wall_Service_WallServiceFactory$createPost() {
        var $v_0 = new Wall.Service.ObjectModel.Post();
        $v_0.set_createdBy(this.$1_0);
        $v_0.set_formattedCreatedOn(ActivityFeeds.Resources.WallService.justNow);
        $v_0.set_deleteEnabled(true);
        $v_0.set_regardingId(this.$7_0);
        return $v_0;
    },
    
    createComment: function Wall_Service_WallServiceFactory$createComment() {
        var $v_0 = new Wall.Service.ObjectModel.Comment();
        $v_0.set_createdBy(this.$1_0);
        $v_0.set_formattedCreatedOn(ActivityFeeds.Resources.WallService.justNow);
        $v_0.set_deleteEnabled(true);
        return $v_0;
    },
    
    createEntityReference: function Wall_Service_WallServiceFactory$createEntityReference() {
        return new Wall.Service.ObjectModel.EntityReference();
    },
    
    createRetrievePostsRequest: function Wall_Service_WallServiceFactory$createRetrievePostsRequest() {
        return new Wall.Service.Messages.RetrieveCommentsRequest();
    },
    
    createRetrieveCommentsRequest: function Wall_Service_WallServiceFactory$createRetrieveCommentsRequest() {
        return new Wall.Service.Messages.RetrieveCommentsRequest();
    },
    
    createRetrieveLikesRequest: function Wall_Service_WallServiceFactory$createRetrieveLikesRequest() {
        return new Wall.Service.Messages.RetrieveLikesRequest();
    }
}


Type.registerNamespace('Wall.Service.ObjectModel');

Wall.Service.ObjectModel.ViewWallFilter = function Wall_Service_ObjectModel_ViewWallFilter() {
    Wall.Service.ObjectModel.ViewWallFilter.initializeBase(this);
}
Wall.Service.ObjectModel.ViewWallFilter.create = function Wall_Service_ObjectModel_ViewWallFilter$create(text, toolTip, commandName, callback, context, filterType, isSelected, postSource, entityTypeName) {
    var $v_0 = new Wall.Service.ObjectModel.ViewWallFilter();
    $v_0.set_text(text);
    $v_0.set_toolTip(toolTip);
    $v_0.set_commandName(commandName);
    $v_0.set_callback(callback);
    $v_0.set_context(context);
    $v_0.set_filterType(filterType);
    $v_0.set_isSelected(isSelected);
    $v_0.$2_1 = (IsNull(postSource)) ? null : postSource;
    $v_0.entityTypeName = (IsNull(entityTypeName)) ? null : entityTypeName;
    return $v_0;
}
Wall.Service.ObjectModel.ViewWallFilter.prototype = {
    $2_1: null,
    $3_1: null,
    $8_1: null,
    entityTypeName: null,
    relativeImageUrl: null,
    
    get_postSource: function Wall_Service_ObjectModel_ViewWallFilter$get_postSource() {
        return this.$2_1;
    },
    
    set_postSource: function Wall_Service_ObjectModel_ViewWallFilter$set_postSource(value) {
        this.$2_1 = value;
        return value;
    },
    
    get_wallDataCache: function Wall_Service_ObjectModel_ViewWallFilter$get_wallDataCache() {
        return this.$3_1;
    },
    
    set_wallDataCache: function Wall_Service_ObjectModel_ViewWallFilter$set_wallDataCache(value) {
        this.$3_1 = value;
        return value;
    },
    
    get_entityTypeName: function Wall_Service_ObjectModel_ViewWallFilter$get_entityTypeName() {
        return this.entityTypeName;
    },
    
    set_entityTypeName: function Wall_Service_ObjectModel_ViewWallFilter$set_entityTypeName(value) {
        this.entityTypeName = value;
        return value;
    },
    
    get_relativeImageUrl: function Wall_Service_ObjectModel_ViewWallFilter$get_relativeImageUrl() {
        return this.relativeImageUrl;
    },
    
    set_relativeImageUrl: function Wall_Service_ObjectModel_ViewWallFilter$set_relativeImageUrl(value) {
        this.relativeImageUrl = value;
        return value;
    }
}


Type.registerNamespace('Wall.Service.Messages');

Wall.Service.Messages.CreateLikeResponse = function Wall_Service_Messages_CreateLikeResponse() {
    Wall.Service.Messages.CreateLikeResponse.initializeBase(this);
}
Wall.Service.Messages.CreateLikeResponse.prototype = {
    $C_1: null,
    
    get_postLikeId: function Wall_Service_Messages_CreateLikeResponse$get_postLikeId() {
        return this.$C_1;
    },
    
    set_postLikeId: function Wall_Service_Messages_CreateLikeResponse$set_postLikeId(value) {
        this.$C_1 = value;
        return value;
    }
}


Wall.Service.Messages.DeleteLikeResponse = function Wall_Service_Messages_DeleteLikeResponse() {
    Wall.Service.Messages.DeleteLikeResponse.initializeBase(this);
}


Wall.Service.Messages.RetrieveLikesRequest = function Wall_Service_Messages_RetrieveLikesRequest() {
}
Wall.Service.Messages.RetrieveLikesRequest.prototype = {
    $H_0: null,
    $G_0: 0,
    $F_0: 0,
    
    get_parentPostId: function Wall_Service_Messages_RetrieveLikesRequest$get_parentPostId() {
        return this.$H_0;
    },
    
    set_parentPostId: function Wall_Service_Messages_RetrieveLikesRequest$set_parentPostId(value) {
        if (value !== this.$H_0) {
            this.$H_0 = value;
        }
        return value;
    },
    
    get_pageSize: function Wall_Service_Messages_RetrieveLikesRequest$get_pageSize() {
        return this.$G_0;
    },
    
    set_pageSize: function Wall_Service_Messages_RetrieveLikesRequest$set_pageSize(value) {
        if (value !== this.$G_0) {
            this.$G_0 = value;
        }
        return value;
    },
    
    get_pageNumber: function Wall_Service_Messages_RetrieveLikesRequest$get_pageNumber() {
        return this.$F_0;
    },
    
    set_pageNumber: function Wall_Service_Messages_RetrieveLikesRequest$set_pageNumber(value) {
        if (value !== this.$F_0) {
            this.$F_0 = value;
        }
        return value;
    }
}


Wall.Service.Messages.RetrieveLikesResponse = function Wall_Service_Messages_RetrieveLikesResponse() {
    Wall.Service.Messages.RetrieveLikesResponse.initializeBase(this);
}
Wall.Service.Messages.RetrieveLikesResponse.prototype = {
    users: null,
    moreLikes: false,
    pageNumber: 0,
    parentPostId: null,
    
    get_users: function Wall_Service_Messages_RetrieveLikesResponse$get_users() {
        return this.users;
    },
    
    set_users: function Wall_Service_Messages_RetrieveLikesResponse$set_users(value) {
        this.users = value;
        return value;
    },
    
    get_moreLikes: function Wall_Service_Messages_RetrieveLikesResponse$get_moreLikes() {
        return this.moreLikes;
    },
    
    set_moreLikes: function Wall_Service_Messages_RetrieveLikesResponse$set_moreLikes(value) {
        this.moreLikes = value;
        return value;
    },
    
    get_pageNumber: function Wall_Service_Messages_RetrieveLikesResponse$get_pageNumber() {
        return this.pageNumber;
    },
    
    set_pageNumber: function Wall_Service_Messages_RetrieveLikesResponse$set_pageNumber(value) {
        this.pageNumber = value;
        return value;
    },
    
    get_parentPostId: function Wall_Service_Messages_RetrieveLikesResponse$get_parentPostId() {
        return this.parentPostId;
    },
    
    set_parentPostId: function Wall_Service_Messages_RetrieveLikesResponse$set_parentPostId(value) {
        this.parentPostId = value;
        return value;
    }
}


Wall.Service.Messages.RetrievePostsResponse = function Wall_Service_Messages_RetrievePostsResponse() {
    Wall.Service.Messages.RetrievePostsResponse.initializeBase(this);
}
Wall.Service.Messages.RetrievePostsResponse.prototype = {
    $2_2: 0,
    $D_2: null,
    
    get_postSource: function Wall_Service_Messages_RetrievePostsResponse$get_postSource() {
        return this.$2_2;
    },
    
    set_postSource: function Wall_Service_Messages_RetrievePostsResponse$set_postSource(value) {
        this.$2_2 = value;
        return value;
    },
    
    get_view: function Wall_Service_Messages_RetrievePostsResponse$get_view() {
        return this.$D_2;
    },
    
    set_view: function Wall_Service_Messages_RetrievePostsResponse$set_view(value) {
        this.$D_2 = value;
        return value;
    }
}


Type.registerNamespace('Wall.Service.Convertors');

Wall.Service.Convertors.PostCommentConvertor = function Wall_Service_Convertors_PostCommentConvertor() {
}
Wall.Service.Convertors.PostCommentConvertor.serviceToWall = function Wall_Service_Convertors_PostCommentConvertor$serviceToWall(serviceComment) {
    var $v_0 = new Wall.Service.ObjectModel.Comment();
    $v_0.set_commentId(serviceComment.get_id());
    $v_0.set_parentPost(new Wall.Service.ObjectModel.Post());
    $v_0.get_parentPost().set_postId((serviceComment.get_postId()) ? serviceComment.get_postId().id : null);
    $v_0.set_text(serviceComment.get_text());
    $v_0.set_createdBy(Wall.Service.Convertors.EntityReferenceConvertor.serviceToWall(serviceComment.get_createdBy()));
    $v_0.set_createdOn(serviceComment.get_createdOn());
    $v_0.set_deleteEnabled(serviceComment.get_deleteEnabled());
    $v_0.set_formattedCreatedOn(serviceComment.get_formattedCreatedOn());
    return $v_0;
}
Wall.Service.Convertors.PostCommentConvertor.wallToService = function Wall_Service_Convertors_PostCommentConvertor$wallToService(wallComment) {
    var $v_0 = new CrmSoapServiceProxy.ObjectModel.PostComment();
    $v_0.set_postCommentId(wallComment.get_commentId());
    $v_0.set_postId((wallComment.get_parentPost()) ? Sales.Common.CrmSoapServiceProxy.ObjectModel.EntityReference.createEntityReference(wallComment.get_parentPost().get_postId(), 'post') : null);
    $v_0.set_text(wallComment.get_text());
    return $v_0;
}
Wall.Service.Convertors.PostCommentConvertor.serviceToWallCollection = function Wall_Service_Convertors_PostCommentConvertor$serviceToWallCollection(serviceComments) {
    var $v_0 = new Array(0);
    if (!serviceComments) {
        return $v_0;
    }
    for (var $v_1 = 0; $v_1 < serviceComments.length; $v_1++) {
        $v_0[$v_1] = Wall.Service.Convertors.PostCommentConvertor.serviceToWall(serviceComments[$v_1]);
    }
    return $v_0;
}


Wall.Service.Convertors.PostConvertor = function Wall_Service_Convertors_PostConvertor() {
}
Wall.Service.Convertors.PostConvertor.serviceToWall = function Wall_Service_Convertors_PostConvertor$serviceToWall(servicePost) {
    var $v_0 = new Wall.Service.ObjectModel.Post();
    $v_0.set_postId(servicePost.get_id());
    $v_0.set_text(servicePost.get_text());
    $v_0.set_type(servicePost.get_type());
    $v_0.set_source(servicePost.get_source());
    $v_0.set_createdBy(Wall.Service.Convertors.EntityReferenceConvertor.serviceToWall(servicePost.get_createdBy()));
    $v_0.set_createdOn(servicePost.get_createdOn());
    $v_0.set_regardingId(Wall.Service.Convertors.EntityReferenceConvertor.serviceToWall(servicePost.get_regardingObjectId()));
    $v_0.set_comments(Wall.Service.Convertors.PostCommentConvertor.serviceToWallCollection(servicePost.get_comments()));
    $v_0.set_commentCounter(servicePost.get_commentCount());
    $v_0.set_likeCounter(servicePost.get_likeCount());
    $v_0.set_likeId(servicePost.get_likeId());
    $v_0.set_deleteEnabled(servicePost.get_deleteEnabled());
    $v_0.set_relativeImageUrl(servicePost.get_relativeImageUrl());
    $v_0.set_formattedCreatedOn(servicePost.get_formattedCreatedOn());
    return $v_0;
}
Wall.Service.Convertors.PostConvertor.serviceToWallCollection = function Wall_Service_Convertors_PostConvertor$serviceToWallCollection(servicePosts) {
    var $v_0 = new Array(0);
    if (!servicePosts) {
        return $v_0;
    }
    for (var $v_1 = 0; $v_1 < servicePosts.length; $v_1++) {
        $v_0[$v_1] = Wall.Service.Convertors.PostConvertor.serviceToWall(servicePosts[$v_1]);
    }
    return $v_0;
}
Wall.Service.Convertors.PostConvertor.wallToService = function Wall_Service_Convertors_PostConvertor$wallToService(wallPost) {
    var $v_0 = new CrmSoapServiceProxy.ObjectModel.Post();
    $v_0.set_id(wallPost.get_postId());
    $v_0.set_text(wallPost.get_text());
    $v_0.set_source(2);
    $v_0.set_regardingObjectId(Wall.Service.Convertors.EntityReferenceConvertor.wallToService(wallPost.get_regardingId()));
    return $v_0;
}
Wall.Service.Convertors.PostConvertor.wallToServiceCollection = function Wall_Service_Convertors_PostConvertor$wallToServiceCollection(wallPosts) {
    var $v_0 = new Array(0);
    if (!wallPosts) {
        return $v_0;
    }
    for (var $v_1 = 0; $v_1 < wallPosts.length; $v_1++) {
        $v_0[$v_1] = Wall.Service.Convertors.PostConvertor.wallToService(wallPosts[$v_1]);
    }
    return $v_0;
}


Type.registerNamespace('Wall.Service.Interfaces');

Wall.Service.Interfaces.IActivityFeedsWall = function() {}
Wall.Service.Interfaces.IActivityFeedsWall.registerInterface('Wall.Service.Interfaces.IActivityFeedsWall');


Wall.Service.Interfaces.IActivityFeedsWallService = function() {}
Wall.Service.Interfaces.IActivityFeedsWallService.registerInterface('Wall.Service.Interfaces.IActivityFeedsWallService');


Type.registerNamespace('Wall.Service.Interfaces.EventArguments');

Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs = function Wall_Service_Interfaces_EventArguments_LikesRetrievedEventArgs(users) {
    Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs.initializeBase(this);
    this.$L_1 = users;
}
Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs.prototype = {
    $L_1: null,
    
    get_users: function Wall_Service_Interfaces_EventArguments_LikesRetrievedEventArgs$get_users() {
        return this.$L_1;
    }
}


Wall.Service.WallService.registerClass('Wall.Service.WallService', null, Wall.Service.Interfaces.IActivityFeedsWallService, Wall.Interfaces.IWallService, Sys.IDisposable);
Wall.Service.WallServiceFactory.registerClass('Wall.Service.WallServiceFactory', null, Wall.Interfaces.IWallServiceFactory);
Wall.Service.ObjectModel.ViewWallFilter.registerClass('Wall.Service.ObjectModel.ViewWallFilter', Wall.Service.ObjectModel.WallFilter);
Wall.Service.Messages.CreateLikeResponse.registerClass('Wall.Service.Messages.CreateLikeResponse', Wall.Service.Messages.BaseResponse, Wall.Interfaces.ICreateLikeResponse);
Wall.Service.Messages.DeleteLikeResponse.registerClass('Wall.Service.Messages.DeleteLikeResponse', Wall.Service.Messages.BaseResponse, Wall.Interfaces.IDeleteLikeResponse);
Wall.Service.Messages.RetrieveLikesRequest.registerClass('Wall.Service.Messages.RetrieveLikesRequest', null, Wall.Interfaces.IRetrieveLikesRequest);
Wall.Service.Messages.RetrieveLikesResponse.registerClass('Wall.Service.Messages.RetrieveLikesResponse', Wall.Service.Messages.BaseResponse, Wall.Interfaces.IRetrieveLikesResponse);
Wall.Service.Messages.RetrievePostsResponse.registerClass('Wall.Service.Messages.RetrievePostsResponse', Wall.Service.Messages.RetrievePostsBaseResponse, Wall.Interfaces.IRetrievePostsResponse);
Wall.Service.Convertors.PostCommentConvertor.registerClass('Wall.Service.Convertors.PostCommentConvertor');
Wall.Service.Convertors.PostConvertor.registerClass('Wall.Service.Convertors.PostConvertor');
Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs.registerClass('Wall.Service.Interfaces.EventArguments.LikesRetrievedEventArgs', Sys.EventArgs);
Wall.Service.WallService.$B = Mscrm.CrmUri.create('$webresource:/msdyn_/Images/actions_delete.png').toString();
Wall.Service.WallService.postSourceFilterType = 'PostSourceFilter';
Wall.Service.WallService.viewFilterType = 'ViewFilter';
Wall.Service.WallService.viewFilterCommandName = 'viewfilteraction';
Wall.Service.WallService.viewSubFilterCommandName = 'viewsubfilteraction';
Wall.Service.WallService.allRecordsIFollowSavedQueryId = '01c866a5-4f14-48eb-a03f-d8ab0bfc50f7';
Wall.Service.WallService.atMeSavedQueryId = '9c91ff7f-3df9-4aa9-9f00-aaa2beb3192f';
//@ sourceMappingURL=file:///d:/dbs/sh/dccm2/0227_160625/cmd/3/Target/retail/amd64/.srcmap
